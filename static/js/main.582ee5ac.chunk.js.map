{"version":3,"sources":["components/Headers.jsx","components/Footers.jsx","utils/get-web3.js","components/Alert.jsx","utils/etheroll-abi.js","utils/etheroll-contract.js","components/Address.jsx","components/ContractInfo.jsx","components/ValueSlider.jsx","components/BetSize.jsx","components/ChanceOfWinning.jsx","components/RollUnder.jsx","components/RollButton.jsx","components/Transactions.jsx","components/PlaceBet.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Headers","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Footers","getWeb3","Promise","resolve","reject","window","addEventListener","web3js","web3","Web3","currentProvider","Error","Alert","_ref","classType","message","concat","role","defaultProps","etherollAbi","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","SolidityEvent","require","Networks","Object","freeze","mainnet","morden","ropsten","contractAddresses","_contractAddresses","defineProperty","etherscanUrls","_etherscanUrls","EtherollContract","address","classCallCheck","this","version","network","abi","web3Contract","eth","contract","at","_this","events","forEach","definition","signatures","getSolidityEvents","keys","eventName","signature","eventSignature","matchingEvent","filter","key","replace","_evnt","evnt","objectSpread","getSolidityEvent","topics","decode","callback","_this2","getBlockNumber","error","result","console","log","options","fromBlock","toBlock","get","_this3","watch","_this4","getTransactionLogs","decodedEvents","map","decodeEvent","logBetEvents","event","logResultEvents","mergedLogs","mergeLogs","betId","logResultEvent","mergedLog","logResultEventsDict","args","BetID","logBetEvent","push","Address","url","ContractInfo","account","contractAddress","components_Address","ValueSlider","value","updateValue","step","max","addonText","addon","onChange","e","Number","target","Slider_default","BetSize","betSize","updateBetSize","components_ValueSlider","ChanceOfWinning","chances","updateChances","RollUnder","Button","isDisabled","onClick","text","disabled","RollButton","_ref2","Transaction","hash","MergedLog","valueEth","diceResult","sign","alertClass","playerWon","DiceResult","PlayerNumber","Value","Math","pow","toString","PlayerAddress","transactionHash","TransactionsFilterButtons","_ref3","Transactions","_ref4","transactionsElems","transactions","slice","reverse","transaction","PlaceBet","props","possibleConstructorReturn","getPrototypeOf","call","state","allTransactions","filteredTransactions","alertDict","_this$state","rollUnder","toWei","playerRollDice","from","JSON","stringify","getMergedTransactionLogs","setState","prevState","then","results","getTransactions","getAccounts","accounts","transactionsFilter","_this$state2","endsWith","toLowerCase","_this5","_this$state3","rollDisabled","components_Alert","components_ContractInfo","components_BetSize","updateState","components_ChanceOfWinning","components_RollUnder","components_RollButton","onRollClick","components_Transactions","filterTransactions","React","Component","App","components_Headers","components_PlaceBet","components_Footers","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.582ee5ac.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Headers() {\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n        <a className=\"navbar-brand\" href=\"/\">\n          <i className=\"fas fa-dice-d20\" />\n          &nbsp;Etheroll\n        </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">\n                <i className=\"fas fa-home\" />\n                &nbsp;Home\n                <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"https://github.com/AndreMiras/etheroll\">\n                <i className=\"fab fa-github-alt\" />\n                &nbsp;About\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Headers;\n","import React from 'react';\nimport './css/Footers.css';\n\nfunction Footers() {\n  return (\n    <footer className=\"Footers d-none d-md-block\">\n      <div className=\"container\">\n        <span className=\"text-muted\">Copyright (c) 2018 Andre Miras</span>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footers;\n","import Web3 from 'web3';\n\nconst getWeb3 = new Promise((resolve, reject) => {\n  // wait for loading completion before loading web3, to be sure it's\n  // already injected\n  window.addEventListener('load', () => {\n    let results;\n    let web3js;\n    // checking if Web3 has been injected by the browser MetaMask\n    if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n      // Use MetaMask's provider.\n      web3js = new Web3(window.web3.currentProvider);\n      results = { web3: web3js };\n      resolve(results);\n    } else {\n      // user is not running MetaMask?\n      reject(new Error('Is MetaMask running?'));\n    }\n  });\n});\n\n\nexport default getWeb3;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Alert({ classType, message }) {\n  if (!message) {\n    return null;\n  }\n  return (\n    <div className={`alert alert-${classType}`} role=\"alert\">\n      {message}\n    </div>\n  );\n}\nAlert.propTypes = {\n  classType: PropTypes.string,\n  message: PropTypes.string,\n};\nAlert.defaultProps = {\n  classType: 'primary',\n  message: null,\n};\n\nexport default Alert;\n","const etherollAbi = [{\n  constant: false, inputs: [{ name: 'newCallbackGasPrice', type: 'uint256' }], name: 'ownerSetCallbackGasPrice', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWon', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitAsPercentOfHouse', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newHouseEdge', type: 'uint256' }], name: 'ownerSetHouseEdge', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'payoutsPaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newTreasury', type: 'address' }], name: 'ownerSetTreasury', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }, { name: 'proof', type: 'bytes' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [{ name: 'addressToCheck', type: 'address' }], name: 'playerGetPendingTxByAddress', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newContractBalanceInWei', type: 'uint256' }], name: 'ownerUpdateContractBalance', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newPayoutStatus', type: 'bool' }], name: 'ownerPausePayouts', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newOwner', type: 'address' }], name: 'ownerChangeOwner', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMaxProfitAsPercent', type: 'uint256' }], name: 'ownerSetMaxProfitAsPercentOfHouse', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'treasury', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWagered', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMinimumBet', type: 'uint256' }], name: 'ownerSetMinBet', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newStatus', type: 'bool' }], name: 'ownerPauseGame', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gasForOraclize', outputs: [{ name: '', type: 'uint32' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'sendTo', type: 'address' }, { name: 'amount', type: 'uint256' }], name: 'ownerTransferEther', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'contractBalance', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'owner', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minBet', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'playerWithdrawPendingTransactions', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfit', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalBets', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'randomQueryID', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gamePaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'originalPlayerBetId', type: 'bytes32' }, { name: 'sendTo', type: 'address' }, { name: 'originalPlayerProfit', type: 'uint256' }, { name: 'originalPlayerBetValue', type: 'uint256' }], name: 'ownerRefundPlayer', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newSafeGasToOraclize', type: 'uint32' }], name: 'ownerSetOraclizeSafeGas', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'ownerkill', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdge', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'rollUnder', type: 'uint256' }], name: 'playerRollDice', outputs: [], payable: true, stateMutability: 'payable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdgeDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxPendingPayouts', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  inputs: [], payable: false, stateMutability: 'nonpayable', type: 'constructor',\n}, { payable: true, stateMutability: 'payable', type: 'fallback' }, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RewardValue', type: 'uint256' }, { indexed: false, name: 'ProfitValue', type: 'uint256' }, { indexed: false, name: 'BetValue', type: 'uint256' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'RandomQueryID', type: 'uint256' }], name: 'LogBet', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'ResultSerialNumber', type: 'uint256' }, { indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'DiceResult', type: 'uint256' }, { indexed: false, name: 'Value', type: 'uint256' }, { indexed: false, name: 'Status', type: 'int256' }, { indexed: false, name: 'Proof', type: 'bytes' }], name: 'LogResult', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RefundValue', type: 'uint256' }], name: 'LogRefund', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'SentToAddress', type: 'address' }, { indexed: true, name: 'AmountTransferred', type: 'uint256' }], name: 'LogOwnerTransfer', type: 'event',\n}];\n\n\nexport default etherollAbi;\n","import etherollAbi from './etheroll-abi';\n\n// TODO require vs import\nconst SolidityEvent = require('web3/lib/web3/event.js');\n\nconst Networks = Object.freeze({ mainnet: 1, morden: 2, ropsten: 3 });\n\nconst contractAddresses = {\n  [Networks.mainnet]: '0xA52e014B3f5Cc48287c2D483A3E026C32cc76E6d',\n  [Networks.ropsten]: '0xe12c6dEb59f37011d2D9FdeC77A6f1A8f3B8B1e8',\n};\n\nconst etherscanUrls = {\n  [Networks.mainnet]: 'https://etherscan.io',\n  [Networks.ropsten]: 'https://ropsten.etherscan.io',\n};\n\n\nclass EtherollContract {\n  constructor(web3, address) {\n    this.web3 = web3;\n    this.address = address;\n    if (typeof address === 'undefined') {\n      this.address = contractAddresses[web3.version.network];\n    }\n    this.abi = etherollAbi;\n    this.web3Contract = web3.eth.contract(etherollAbi).at(this.address);\n  }\n\n  getSolidityEvents() {\n    const events = {};\n    this.abi.forEach((definition) => {\n      if (definition.type !== 'event') {\n        return;\n      }\n      events[definition.name] = new SolidityEvent(this.web3, definition, this.address);\n    });\n    return events;\n  }\n\n  // Returns sha3 signature of events, e.g.\n  // {'LogResult': '0x6883...5c88', 'LogBet': '0x1cb5...75c4'}\n  getEventSignatures() {\n    const signatures = {};\n    const events = this.getSolidityEvents();\n    Object.keys(events).forEach((eventName) => {\n      signatures[eventName] = events[eventName].signature();\n    });\n    return signatures;\n  }\n\n  getSolidityEvent(eventSignature) {\n    const events = this.getSolidityEvents();\n    const matchingEvent = Object.keys(events).filter(key => (\n      events[key].signature() === eventSignature.replace('0x', '')\n    ));\n    return events[matchingEvent];\n  }\n\n  decodeEvent(_evnt) {\n    // SolidityEvent.decode() seems to be mutating the object, hence the copy\n    const evnt = { ..._evnt };\n    const solidityEvent = this.getSolidityEvent(evnt.topics[0]);\n    const decoded = solidityEvent.decode(evnt);\n    return decoded;\n  }\n\n  // callback(error, result)\n  getTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const lastBlock = result;\n        const fromBlock = lastBlock - 100;\n        const toBlock = lastBlock;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        const filter = this.web3.eth.filter(options);\n        filter.get(callback);\n      }\n    });\n  }\n\n  // callback(error, result)\n  watchTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const lastBlock = result;\n        const fromBlock = lastBlock - 100;\n        const toBlock = lastBlock;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        const filter = this.web3.eth.filter(options);\n        filter.watch(callback);\n      }\n    });\n  }\n\n  // Merges bet logs (LogBet) with bet results logs (LogResult).\n  static mergeLogs(logBetEvents, logResultEvents) {\n    const mergedLogs = [];\n    let betId;\n    // per bet ID dictionary\n    const logResultEventsDict = {};\n    logResultEvents.forEach((logResultEvent) => {\n      betId = logResultEvent.args.BetID;\n      logResultEventsDict[betId] = logResultEvent;\n    });\n    let logResultEvent;\n    let mergedLog;\n    logBetEvents.forEach((logBetEvent) => {\n      betId = logBetEvent.args.BetID;\n      logResultEvent = logResultEventsDict[betId];\n      mergedLog = {\n        logBetEvent,\n        logResultEvent,\n      };\n      mergedLogs.push(mergedLog);\n    });\n    return mergedLogs;\n  }\n\n  // callback(error, result)\n  getMergedTransactionLogs(callback) {\n    this.getTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const decodedEvents = result.map(evnt => this.decodeEvent(evnt));\n        const logBetEvents = decodedEvents.filter(evnt => (\n          evnt.event === 'LogBet'\n        ));\n        const logResultEvents = decodedEvents.filter(evnt => (\n          evnt.event === 'LogResult'\n        ));\n        const mergedLogs = EtherollContract.mergeLogs(logBetEvents, logResultEvents);\n        callback(error, mergedLogs);\n      }\n    });\n  }\n}\n\n\nexport {\n  EtherollContract, etherscanUrls, Networks, contractAddresses,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Address({ address, network }) {\n  const url = `${etherscanUrls[network]}/address/${address}`;\n  return <a href={url}>{address}</a>;\n}\nAddress.propTypes = {\n  address: PropTypes.string.isRequired,\n  network: PropTypes.number.isRequired,\n};\n\nexport default Address;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Address from './Address';\n\nfunction ContractInfo({ account, contractAddress, network }) {\n  if (account === null) {\n    return null;\n  }\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        Contract\n        &nbsp;\n        <Address network={network} address={contractAddress} />\n      </div>\n      <div className=\"col\">\n        Wallet\n        &nbsp;\n        <Address network={network} address={account} />\n      </div>\n    </div>\n  );\n}\nContractInfo.propTypes = {\n  account: PropTypes.string,\n  contractAddress: PropTypes.string.isRequired,\n  network: PropTypes.number.isRequired,\n};\nContractInfo.defaultProps = {\n  account: null,\n};\n\nexport default ContractInfo;\n","import React from 'react';\nimport Slider from 'rc-slider/lib/Slider';\nimport PropTypes from 'prop-types';\nimport 'rc-slider/assets/index.css';\n\n\nfunction ValueSlider({\n  value, updateValue, step, max, addonText,\n}) {\n  let addon = null;\n  if (addonText !== null) {\n    addon = (\n      <div className=\"input-group-append\">\n        <span className=\"input-group-text text-monospace\">{addonText}</span>\n      </div>\n    );\n  }\n  return (\n    <div className=\"row\">\n      <div className=\"input-group col-sm-3 col-lg-2\">\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          onChange={e => updateValue(Number(e.target.value))}\n          value={value}\n        />\n        {addon}\n      </div>\n      <div className=\"col\">\n        <Slider onChange={updateValue} value={value} step={step} max={max} />\n      </div>\n    </div>\n  );\n}\nValueSlider.propTypes = {\n  value: PropTypes.number.isRequired,\n  updateValue: PropTypes.func.isRequired,\n  step: PropTypes.number,\n  max: PropTypes.number,\n  addonText: PropTypes.string,\n};\nValueSlider.defaultProps = {\n  step: 1,\n  max: 100,\n  addonText: null,\n};\n\nexport default ValueSlider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ValueSlider from './ValueSlider';\n\nfunction BetSize({ betSize, updateBetSize }) {\n  return (\n    <div className=\"form-group\">\n      <b>Bet size</b>\n      <ValueSlider value={betSize} updateValue={updateBetSize} step={0.1} max={10} addonText=\"ETH\" />\n    </div>\n  );\n}\nBetSize.propTypes = {\n  betSize: PropTypes.number.isRequired,\n  updateBetSize: PropTypes.func.isRequired,\n};\n\nexport default BetSize;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ValueSlider from './ValueSlider';\n\nfunction ChanceOfWinning({ chances, updateChances }) {\n  return (\n    <div className=\"form-group\">\n      <b>Chance of winning</b>\n      <ValueSlider value={chances} updateValue={updateChances} addonText=\"&nbsp;%&nbsp;\" />\n    </div>\n  );\n}\nChanceOfWinning.propTypes = {\n  chances: PropTypes.number.isRequired,\n  updateChances: PropTypes.func.isRequired,\n};\n\nexport default ChanceOfWinning;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction RollUnder({ value }) {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <h3>Roll under</h3>\n      </div>\n      <div className=\"col\">\n        <h3 className=\"roll-under-value\">{value}</h3>\n      </div>\n    </div>\n  );\n}\nRollUnder.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default RollUnder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button({ isDisabled, onClick, text }) {\n  return (\n    <button type=\"button\" className=\"btn btn-primary btn-lg col-md-3\" disabled={isDisabled} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\nButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nfunction RollButton({ isDisabled, onClick }) {\n  return <Button text=\"Roll\" isDisabled={isDisabled} onClick={onClick} />;\n}\nRollButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\nRollButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default RollButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Address from './Address';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Transaction({ hash, network }) {\n  const url = `${etherscanUrls[network]}/tx/${hash}`;\n  return <a href={url}>{hash}</a>;\n}\nTransaction.propTypes = {\n  hash: PropTypes.string.isRequired,\n  network: PropTypes.number.isRequired,\n};\n\nfunction MergedLog({ network, mergedLog }) {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  let valueEth = '?';\n  let diceResult = '?';\n  let sign = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    const playerWon = logResultEvent.args.DiceResult < logBetEvent.args.PlayerNumber;\n    valueEth = logResultEvent.args.Value * (10 ** (-18));\n    diceResult = logResultEvent.args.DiceResult.toString();\n    sign = playerWon ? '<' : '>';\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{diceResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          {diceResult}\n          &nbsp;\n          {sign}\n          &nbsp;\n          {logBetEvent.args.PlayerNumber.toString()}\n        </div>\n        <div className=\"w-100\">\n          Wallet:\n          &nbsp;\n          <Address address={logBetEvent.args.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          Transaction:\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMergedLog.propTypes = {\n  network: PropTypes.number.isRequired,\n  mergedLog: PropTypes.shape({\n    // TODO: seems completely ignored\n    todo: PropTypes.number,\n  }).isRequired,\n};\n\nfunction TransactionsFilterButtons({ onClick }) {\n  return (\n    <nav className=\"nav\">\n      <a\n        className=\"nav-link active\"\n        href=\"#all-transactions\"\n        onClick={e => onClick(e.target.href)}\n      >\n          All transactions\n      </a>\n      <a\n        className=\"nav-link\"\n        href=\"#my-transactions\"\n        onClick={e => onClick(e.target.href)}\n      >\n          My transactions\n      </a>\n    </nav>\n  );\n}\nTransactionsFilterButtons.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nfunction Transactions({ network, onClick, transactions }) {\n  const reversedTransactions = transactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n}\nTransactions.propTypes = {\n  network: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: PropTypes.number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React from 'react';\nimport './css/PlaceBet.css';\nimport getWeb3 from '../utils/get-web3';\nimport Alert from './Alert';\nimport ContractInfo from './ContractInfo';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport RollUnder from './RollUnder';\nimport RollButton from './RollButton';\nimport Transactions from './Transactions';\nimport {\n  EtherollContract, Networks, contractAddresses,\n} from '../utils/etheroll-contract';\n\n\nclass PlaceBet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      betSize: 0.1,\n      chances: 50,\n      account: null,\n      web3: null,\n      network: Networks.mainnet,\n      contract: null,\n      contractAddress: contractAddresses[Networks.mainnet],\n      // most recent transaction is last in the array\n      allTransactions: [],\n      filteredTransactions: [],\n      alertDict: {},\n    };\n  }\n\n  componentDidMount() {\n    this.getWeb3();\n  }\n\n  onRollClick() {\n    const {\n      account, chances, contract, betSize, web3,\n    } = this.state;\n    const rollUnder = chances + 1;\n    const value = web3.toWei(betSize.toString(), 'ether');\n    contract.web3Contract.playerRollDice(rollUnder, { from: account, value }, (error, result) => {\n      if (error) {\n        console.error(error);\n      } else {\n        console.log(JSON.stringify(result));\n        // TODO: not an array of tx hash anymore\n        // this.setState(prevState => ({\n        //   allTransactions: prevState.allTransactions.concat(result),\n        // }));\n      }\n    });\n  }\n\n  getTransactions(contract) {\n    contract.getMergedTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        // const allTransactions = result.map(item => item.transactionHash);\n        // this.setState({ allTransactions });\n        this.setState(prevState => ({\n          allTransactions: prevState.allTransactions.concat(result),\n          filteredTransactions: prevState.filteredTransactions.concat(result),\n        }));\n      }\n    });\n  }\n\n  getWeb3() {\n    getWeb3.then((results) => {\n      const { web3 } = results;\n      const contract = new EtherollContract(web3);\n      const contractAddress = contract.address;\n      this.getTransactions(contract);\n      this.setState({\n        web3,\n        network: Number(web3.version.network),\n        contract,\n        contractAddress,\n      });\n      web3.eth.getAccounts((error, accounts) => {\n        if (error) {\n          console.log(error);\n        }\n        this.setState({ account: accounts[0] });\n      });\n    }, () => {\n      const classType = 'danger';\n      const message = 'No account connected, '\n        + 'connect with a Web3-compatible wallet like MetaMask';\n      const alertDict = { classType, message };\n      this.setState({ alertDict });\n    });\n  }\n\n  filterTransactions(transactionsFilter) {\n    const { account, allTransactions } = this.state;\n    let filteredTransactions = allTransactions.slice();\n    if (transactionsFilter.endsWith('#my-transactions')) {\n      filteredTransactions = allTransactions.filter(transaction => (\n        transaction.logBetEvent.args.PlayerAddress.toLowerCase() === account.toLowerCase()\n      ));\n    }\n    this.setState({ filteredTransactions });\n  }\n\n  updateState(key) {\n    return (value) => {\n      this.setState({ [key]: value });\n    };\n  }\n\n  render() {\n    const {\n      account, alertDict, betSize, chances, contractAddress, filteredTransactions,\n      network, web3,\n    } = this.state;\n    const rollUnder = chances + 1;\n    const rollDisabled = web3 === null;\n    return (\n      <div>\n        <Alert classType={alertDict.classType} message={alertDict.message} />\n        <ContractInfo account={account} contractAddress={contractAddress} network={network} />\n        <form className=\"PlaceBet\">\n          <h2>Place your bet</h2>\n          <BetSize betSize={betSize} updateBetSize={this.updateState('betSize')} />\n          <ChanceOfWinning chances={chances} updateChances={this.updateState('chances')} />\n          <RollUnder value={rollUnder} />\n          <RollButton isDisabled={rollDisabled} onClick={() => this.onRollClick()} />\n        </form>\n        <Transactions\n          network={network}\n          onClick={transactionsFilter => this.filterTransactions(transactionsFilter)}\n          transactions={filteredTransactions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PlaceBet;\n","import React from 'react';\nimport './App.css';\nimport Headers from './components/Headers';\nimport Footers from './components/Footers';\nimport PlaceBet from './components/PlaceBet';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Headers />\n      <div className=\"container\">\n        <PlaceBet />\n      </div>\n      <Footers />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}