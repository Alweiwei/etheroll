{"version":3,"sources":["utils/sentry.js","components/Headers.jsx","components/Footers.jsx","utils/get-web3.js","components/Alert.jsx","utils/etheroll-abi.js","utils/etheroll-contract.js","components/Address.jsx","components/ContractInfo.jsx","components/ValueSlider.jsx","components/BetSize.jsx","components/ChanceOfWinning.jsx","components/RollUnder.jsx","components/RollButton.jsx","components/Transactions.jsx","components/PlaceBet.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["setupSentry","Sentry","dsn","process","release","version","console","log","Error","Headers","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Footers","getWeb3","Promise","resolve","reject","window","addEventListener","web3","Web3","currentProvider","Alert","_ref","classType","message","concat","role","defaultProps","etherollAbi","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","SolidityEvent","require","Networks","Object","freeze","mainnet","morden","ropsten","contractAddresses","_contractAddresses","defineProperty","etherscanUrls","_etherscanUrls","EtherollContract","address","classCallCheck","this","network","abi","web3Contract","eth","contract","at","_this","events","forEach","definition","signatures","getSolidityEvents","keys","eventName","signature","eventSignature","matchingEvent","filter","key","replace","_evnt","evnt","objectSpread","getSolidityEvent","topics","decode","callback","_this2","getBlockNumber","error","result","options","fromBlock","toBlock","get","_this3","watch","_this4","getTransactionLogs","decodedEvents","map","decodeEvent","logBetEvents","event","logResultEvents","mergedLogs","mergeLogs","logResultEventsDict","reduce","dict","logResultEvent","args","BetID","logBetEvent","Address","url","ContractInfo","accountAddress","accountBalance","contractAddress","contractBalance","contractAddr","components_Address","contractBalanceBlock","toFixed","contractAddressBlock","accountAddr","accountBalanceBlock","accountAddressBlock","ValueSlider","value","updateValue","step","min","max","addonText","addon","onChange","e","Number","target","Slider_default","BetSize","betSize","updateBetSize","components_ValueSlider","ChanceOfWinning","chances","updateChances","RollUnder","profit","chancesLoss","payout","getProfit","Button","isDisabled","onClick","text","disabled","RollButton","_ref2","Transaction","hash","MergedLog","mergedLog","playerNumber","PlayerNumber","toNumber","valueEth","diceResult","sign","alertClass","playerWon","DiceResult","Value","Math","pow","PlayerAddress","toString","transactionHash","TransactionsFilterButtons","_ref3","Transactions","_ref4","transactionsElems","transactions","slice","reverse","transaction","PlaceBet","props","possibleConstructorReturn","getPrototypeOf","call","state","minBet","maxBet","minChances","maxChances","allTransactions","filteredTransactions","alertDict","_this$state","rollUnder","toWei","playerRollDice","from","JSON","stringify","getMergedTransactionLogs","setState","prevState","then","results","getTransactions","minBetWei","fromWei","minNumber","maxNumber","getBalance","balance","getAccounts","accounts","length","_","transactionsFilter","_this$state2","endsWith","toLowerCase","_this5","_this$state3","components_Alert","components_ContractInfo","components_BetSize","updateState","components_ChanceOfWinning","components_RollUnder","components_RollButton","onRollClick","components_Transactions","filterTransactions","React","Component","App","components_Headers","components_PlaceBet","components_Footers","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8296bb1.chunk.js","sourcesContent":["// import Raven from 'raven-js';\n// import { init, captureMessage } from '@sentry/browser';\nimport * as Sentry from '@sentry/browser';\nimport { version } from '../../package.json';\n\nfunction configSentry1() {\n  // return Raven.config(process.env.REACT_APP_SENTRY_DSN, {\n  //   release: version,\n  //   environment: process.env.NODE_ENV,\n  // }).install();\n}\n\nfunction setupSentry() {\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    release: version,\n  });\n  console.log('Error');\n  Sentry.captureException(new Error('test'));\n}\n\nexport default setupSentry;\n","import React from 'react';\n\nfunction Headers() {\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n        <a className=\"navbar-brand\" href=\"/\">\n          <i className=\"fas fa-dice-d20\" />\n          &nbsp;Etheroll\n        </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">\n                <i className=\"fas fa-home\" />\n                &nbsp;Home\n                <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"https://github.com/AndreMiras/etheroll\">\n                <i className=\"fab fa-github-alt\" />\n                &nbsp;About\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Headers;\n","import React from 'react';\nimport './css/Footers.css';\nimport { version } from '../../package.json';\n\nfunction Footers() {\n  return (\n    <footer className=\"Footers d-none d-md-block\">\n      <div className=\"container\">\n        <span className=\"text-muted\">\n          Copyright (c) 2018 Andre Miras - Etheroll v\n          {version}\n        </span>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footers;\n","import Web3 from 'web3';\n\nconst getWeb3 = new Promise((resolve, reject) => {\n  // wait for loading completion before loading web3, to be sure it's\n  // already injected\n  window.addEventListener('load', () => {\n    // checking if Web3 has been injected by the browser MetaMask\n    if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n      // Use MetaMask's provider.\n      const web3 = new Web3(window.web3.currentProvider);\n      const results = { web3 };\n      resolve(results);\n    } else {\n      // user is not running MetaMask?\n      reject(new Error('Is MetaMask running?'));\n    }\n  });\n});\n\n\nexport default getWeb3;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Alert({ classType, message }) {\n  if (!message) {\n    return null;\n  }\n  return (\n    <div className={`alert alert-${classType}`} role=\"alert\">\n      {message}\n    </div>\n  );\n}\nAlert.propTypes = {\n  classType: PropTypes.string,\n  message: PropTypes.string,\n};\nAlert.defaultProps = {\n  classType: 'primary',\n  message: null,\n};\n\nexport default Alert;\n","const etherollAbi = [{\n  constant: false, inputs: [{ name: 'newCallbackGasPrice', type: 'uint256' }], name: 'ownerSetCallbackGasPrice', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWon', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitAsPercentOfHouse', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newHouseEdge', type: 'uint256' }], name: 'ownerSetHouseEdge', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'payoutsPaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newTreasury', type: 'address' }], name: 'ownerSetTreasury', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }, { name: 'proof', type: 'bytes' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [{ name: 'addressToCheck', type: 'address' }], name: 'playerGetPendingTxByAddress', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newContractBalanceInWei', type: 'uint256' }], name: 'ownerUpdateContractBalance', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newPayoutStatus', type: 'bool' }], name: 'ownerPausePayouts', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newOwner', type: 'address' }], name: 'ownerChangeOwner', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMaxProfitAsPercent', type: 'uint256' }], name: 'ownerSetMaxProfitAsPercentOfHouse', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'treasury', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWagered', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMinimumBet', type: 'uint256' }], name: 'ownerSetMinBet', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newStatus', type: 'bool' }], name: 'ownerPauseGame', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gasForOraclize', outputs: [{ name: '', type: 'uint32' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'sendTo', type: 'address' }, { name: 'amount', type: 'uint256' }], name: 'ownerTransferEther', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'contractBalance', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'owner', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minBet', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'playerWithdrawPendingTransactions', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfit', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalBets', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'randomQueryID', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gamePaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'originalPlayerBetId', type: 'bytes32' }, { name: 'sendTo', type: 'address' }, { name: 'originalPlayerProfit', type: 'uint256' }, { name: 'originalPlayerBetValue', type: 'uint256' }], name: 'ownerRefundPlayer', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newSafeGasToOraclize', type: 'uint32' }], name: 'ownerSetOraclizeSafeGas', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'ownerkill', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdge', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'rollUnder', type: 'uint256' }], name: 'playerRollDice', outputs: [], payable: true, stateMutability: 'payable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdgeDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxPendingPayouts', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  inputs: [], payable: false, stateMutability: 'nonpayable', type: 'constructor',\n}, { payable: true, stateMutability: 'payable', type: 'fallback' }, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RewardValue', type: 'uint256' }, { indexed: false, name: 'ProfitValue', type: 'uint256' }, { indexed: false, name: 'BetValue', type: 'uint256' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'RandomQueryID', type: 'uint256' }], name: 'LogBet', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'ResultSerialNumber', type: 'uint256' }, { indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'DiceResult', type: 'uint256' }, { indexed: false, name: 'Value', type: 'uint256' }, { indexed: false, name: 'Status', type: 'int256' }, { indexed: false, name: 'Proof', type: 'bytes' }], name: 'LogResult', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RefundValue', type: 'uint256' }], name: 'LogRefund', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'SentToAddress', type: 'address' }, { indexed: true, name: 'AmountTransferred', type: 'uint256' }], name: 'LogOwnerTransfer', type: 'event',\n}];\n\n\nexport default etherollAbi;\n","import etherollAbi from './etheroll-abi';\n\n// TODO require vs import\nconst SolidityEvent = require('web3/lib/web3/event.js');\n\nconst Networks = Object.freeze({ mainnet: 1, morden: 2, ropsten: 3 });\n\nconst contractAddresses = {\n  [Networks.mainnet]: '0xA52e014B3f5Cc48287c2D483A3E026C32cc76E6d',\n  [Networks.ropsten]: '0xe12c6dEb59f37011d2D9FdeC77A6f1A8f3B8B1e8',\n};\n\nconst etherscanUrls = {\n  [Networks.mainnet]: 'https://etherscan.io',\n  [Networks.ropsten]: 'https://ropsten.etherscan.io',\n};\n\n\nclass EtherollContract {\n  constructor(web3, address) {\n    this.web3 = web3;\n    this.address = address;\n    if (typeof address === 'undefined') {\n      this.address = contractAddresses[web3.version.network];\n    }\n    this.abi = etherollAbi;\n    this.web3Contract = web3.eth.contract(etherollAbi).at(this.address);\n  }\n\n  getSolidityEvents() {\n    const events = {};\n    this.abi.forEach((definition) => {\n      if (definition.type !== 'event') {\n        return;\n      }\n      events[definition.name] = new SolidityEvent(this.web3, definition, this.address);\n    });\n    return events;\n  }\n\n  // Returns sha3 signature of events, e.g.\n  // {'LogResult': '0x6883...5c88', 'LogBet': '0x1cb5...75c4'}\n  getEventSignatures() {\n    const signatures = {};\n    const events = this.getSolidityEvents();\n    Object.keys(events).forEach((eventName) => {\n      signatures[eventName] = events[eventName].signature();\n    });\n    return signatures;\n  }\n\n  getSolidityEvent(eventSignature) {\n    const events = this.getSolidityEvents();\n    const matchingEvent = Object.keys(events).filter(key => (\n      events[key].signature() === eventSignature.replace('0x', '')\n    ));\n    return events[matchingEvent];\n  }\n\n  decodeEvent(_evnt) {\n    // SolidityEvent.decode() seems to be mutating the object, hence the copy\n    const evnt = { ..._evnt };\n    const solidityEvent = this.getSolidityEvent(evnt.topics[0]);\n    const decoded = solidityEvent.decode(evnt);\n    return decoded;\n  }\n\n  // callback(error, result)\n  getTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const lastBlock = result;\n        const fromBlock = lastBlock - 100;\n        const toBlock = lastBlock;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        const filter = this.web3.eth.filter(options);\n        filter.get(callback);\n      }\n    });\n  }\n\n  // callback(error, result)\n  watchTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const lastBlock = result;\n        const fromBlock = lastBlock - 100;\n        const toBlock = lastBlock;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        const filter = this.web3.eth.filter(options);\n        filter.watch(callback);\n      }\n    });\n  }\n\n  // Merges bet logs (LogBet) with bet results logs (LogResult).\n  static mergeLogs(logBetEvents, logResultEvents) {\n    // per bet ID dictionary\n    const logResultEventsDict = logResultEvents.reduce((dict, logResultEvent) => ({\n      ...dict,\n      [logResultEvent.args.BetID]: logResultEvent,\n    }), {});\n    return logBetEvents.map(logBetEvent => ({\n      logBetEvent,\n      logResultEvent: logResultEventsDict[logBetEvent.args.BetID],\n    }));\n  }\n\n  // callback(error, result)\n  getMergedTransactionLogs(callback) {\n    this.getTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const decodedEvents = result.map(evnt => this.decodeEvent(evnt));\n        const logBetEvents = decodedEvents.filter(evnt => (\n          evnt.event === 'LogBet'\n        ));\n        const logResultEvents = decodedEvents.filter(evnt => (\n          evnt.event === 'LogResult'\n        ));\n        const mergedLogs = EtherollContract.mergeLogs(logBetEvents, logResultEvents);\n        callback(error, mergedLogs);\n      }\n    });\n  }\n}\n\n\nexport {\n  EtherollContract, etherscanUrls, Networks, contractAddresses,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Address({ address, network }) {\n  const url = `${etherscanUrls[network]}/address/${address}`;\n  return <a href={url} className=\"text-monospace\">{address}</a>;\n}\nAddress.propTypes = {\n  address: PropTypes.string.isRequired,\n  network: PropTypes.number.isRequired,\n};\n\nexport default Address;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Address from './Address';\n\nfunction ContractInfo({\n  accountAddress, accountBalance, contractAddress, contractBalance, network,\n}) {\n  const contractAddr = <Address network={network} address={contractAddress} />;\n  const contractBalanceBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      <i className=\"far fa-file-code\" />\n      &nbsp;Contract&nbsp;(\n      {contractBalance.toFixed(2)}\n      &nbsp;ETH)\n    </div>\n  );\n  const contractAddressBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      {contractAddr}\n    </div>\n  );\n  const accountAddr = (accountAddress !== null)\n    ? <Address network={network} address={accountAddress} />\n    : <span>Not connected, please login to MetaMask</span>;\n  const accountBalanceBlock = (\n    <div className=\"col-lg-12\">\n      <i className=\"far fa-user\" />\n      &nbsp;Account&nbsp;(\n      {accountBalance.toFixed(2)}\n      &nbsp;ETH)\n    </div>\n  );\n  const accountAddressBlock = (\n    <div className=\"col-12\">\n      {accountAddr}\n    </div>\n  );\n  return (\n    <div className=\"row\">\n      {accountBalanceBlock}\n      {accountAddressBlock}\n      {contractBalanceBlock}\n      {contractAddressBlock}\n    </div>\n  );\n}\nContractInfo.propTypes = {\n  accountAddress: PropTypes.string,\n  accountBalance: PropTypes.number.isRequired,\n  contractAddress: PropTypes.string.isRequired,\n  contractBalance: PropTypes.number.isRequired,\n  network: PropTypes.number.isRequired,\n};\nContractInfo.defaultProps = {\n  accountAddress: null,\n};\n\nexport default ContractInfo;\n","import React from 'react';\nimport Slider from 'rc-slider/lib/Slider';\nimport PropTypes from 'prop-types';\nimport 'rc-slider/assets/index.css';\n\n\nfunction ValueSlider({\n  value, updateValue, step, min, max, addonText,\n}) {\n  let addon = null;\n  if (addonText !== null) {\n    addon = (\n      <div className=\"input-group-append\">\n        <span className=\"input-group-text text-monospace\">{addonText}</span>\n      </div>\n    );\n  }\n  return (\n    <div className=\"row\">\n      <div className=\"input-group col-sm-3 col-lg-2\">\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          onChange={e => updateValue(Number(e.target.value))}\n          value={value}\n        />\n        {addon}\n      </div>\n      <div className=\"col\">\n        <Slider onChange={updateValue} value={value} step={step} min={min} max={max} />\n      </div>\n    </div>\n  );\n}\nValueSlider.propTypes = {\n  value: PropTypes.number.isRequired,\n  updateValue: PropTypes.func.isRequired,\n  step: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  addonText: PropTypes.string,\n};\nValueSlider.defaultProps = {\n  step: 1,\n  min: 0,\n  max: 100,\n  addonText: null,\n};\n\nexport default ValueSlider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ValueSlider from './ValueSlider';\n\nfunction BetSize({\n  betSize, min, max, updateBetSize,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>Bet size</b>\n      <ValueSlider value={betSize} updateValue={updateBetSize} step={0.1} min={min} max={max} addonText=\"ETH\" />\n    </div>\n  );\n}\nBetSize.propTypes = {\n  betSize: PropTypes.number.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  updateBetSize: PropTypes.func.isRequired,\n};\nBetSize.defaultProps = {\n  min: 0,\n  max: 10,\n};\n\nexport default BetSize;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ValueSlider from './ValueSlider';\n\nfunction ChanceOfWinning({\n  chances, min, max, updateChances,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>Chance of winning</b>\n      <ValueSlider value={chances} min={min} max={max} updateValue={updateChances} addonText=\"&nbsp;%&nbsp;\" />\n    </div>\n  );\n}\nChanceOfWinning.propTypes = {\n  chances: PropTypes.number.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  updateChances: PropTypes.func.isRequired,\n};\nChanceOfWinning.defaultProps = {\n  min: 0,\n  max: 100,\n};\n\nexport default ChanceOfWinning;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction getProfit(betSize, chances) {\n  let profit = 0;\n  const houseEdge = 1 / 100.0;\n  const chancesLoss = 100.0 - chances;\n  if (chances !== 0 && chancesLoss !== 0) {\n    let payout = ((chancesLoss / chances) * betSize) + betSize;\n    payout *= (1 - houseEdge);\n    profit = payout - betSize;\n  }\n  return profit;\n}\n\nfunction RollUnder({ betSize, value }) {\n  const chances = value - 1;\n  const profit = getProfit(betSize, chances);\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <h3>Roll under</h3>\n      </div>\n      <div className=\"col-6\">\n        <h3 className=\"text-right\">{value}</h3>\n      </div>\n      <div className=\"col-6\">\n        With a wager of\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right mb-0\">\n          {betSize}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n      <div className=\"col-6\">\n        For a profit of\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right\">\n          {profit.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n    </div>\n  );\n}\nRollUnder.propTypes = {\n  betSize: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default RollUnder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button({ isDisabled, onClick, text }) {\n  return (\n    <button type=\"button\" className=\"btn btn-primary btn-lg col-md-3\" disabled={isDisabled} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\nButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nfunction RollButton({ isDisabled, onClick }) {\n  return <Button text=\"Roll\" isDisabled={isDisabled} onClick={onClick} />;\n}\nRollButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\nRollButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default RollButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Address from './Address';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Transaction({ hash, network }) {\n  const url = `${etherscanUrls[network]}/tx/${hash}`;\n  return <a href={url}>{hash}</a>;\n}\nTransaction.propTypes = {\n  hash: PropTypes.string.isRequired,\n  network: PropTypes.number.isRequired,\n};\n\nfunction MergedLog({ network, mergedLog }) {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = logBetEvent.args.PlayerNumber.toNumber();\n  let valueEth = '?';\n  let diceResult = '?';\n  let sign = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    diceResult = logResultEvent.args.DiceResult.toNumber();\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.args.Value * (10 ** (-18))).toFixed(2);\n    sign = playerWon ? '<' : '>';\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{diceResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          {diceResult}\n          &nbsp;\n          {sign}\n          &nbsp;\n          {playerNumber}\n        </div>\n        <div className=\"w-100\">\n          Wallet:\n          &nbsp;\n          <Address address={logBetEvent.args.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          Transaction:\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMergedLog.propTypes = {\n  network: PropTypes.number.isRequired,\n  mergedLog: PropTypes.shape({\n    // TODO: seems completely ignored\n    todo: PropTypes.number,\n  }).isRequired,\n};\n\nfunction TransactionsFilterButtons({ onClick }) {\n  return (\n    <nav className=\"nav\">\n      <a\n        className=\"nav-link active\"\n        href=\"#all-transactions\"\n        onClick={e => onClick(e.target.href)}\n      >\n          All transactions\n      </a>\n      <a\n        className=\"nav-link\"\n        href=\"#my-transactions\"\n        onClick={e => onClick(e.target.href)}\n      >\n          My transactions\n      </a>\n    </nav>\n  );\n}\nTransactionsFilterButtons.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nfunction Transactions({ network, onClick, transactions }) {\n  const reversedTransactions = transactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n}\nTransactions.propTypes = {\n  network: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: PropTypes.number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React from 'react';\nimport './css/PlaceBet.css';\nimport getWeb3 from '../utils/get-web3';\nimport Alert from './Alert';\nimport ContractInfo from './ContractInfo';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport RollUnder from './RollUnder';\nimport RollButton from './RollButton';\nimport Transactions from './Transactions';\nimport {\n  EtherollContract, Networks, contractAddresses,\n} from '../utils/etheroll-contract';\n\n\nclass PlaceBet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      betSize: 0.1,\n      chances: 50,\n      minBet: BetSize.defaultProps.min,\n      maxBet: BetSize.defaultProps.max,\n      minChances: ChanceOfWinning.defaultProps.max,\n      maxChances: ChanceOfWinning.defaultProps.max,\n      accountAddress: null,\n      accountBalance: 0,\n      web3: null,\n      network: Networks.mainnet,\n      contract: null,\n      contractAddress: contractAddresses[Networks.mainnet],\n      contractBalance: 0,\n      // most recent transaction is last in the array\n      allTransactions: [],\n      filteredTransactions: [],\n      alertDict: {},\n    };\n  }\n\n  componentDidMount() {\n    this.getWeb3();\n  }\n\n  onRollClick() {\n    const {\n      accountAddress, chances, contract, betSize, web3,\n    } = this.state;\n    const rollUnder = chances + 1;\n    const value = web3.toWei(betSize.toString(), 'ether');\n    contract.web3Contract.playerRollDice(\n      rollUnder, { from: accountAddress, value },\n      (error, result) => {\n        if (error) {\n          console.error(error);\n        } else {\n          console.log(JSON.stringify(result));\n          // TODO: not an array of tx hash anymore\n          // this.setState(prevState => ({\n          //   allTransactions: prevState.allTransactions.concat(result),\n          // }));\n        }\n      },\n    );\n  }\n\n  getTransactions(contract) {\n    contract.getMergedTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        // const allTransactions = result.map(item => item.transactionHash);\n        // this.setState({ allTransactions });\n        this.setState(prevState => ({\n          allTransactions: prevState.allTransactions.concat(result),\n          filteredTransactions: prevState.filteredTransactions.concat(result),\n        }));\n      }\n    });\n  }\n\n  getWeb3() {\n    getWeb3.then((results) => {\n      const { web3 } = results;\n      const contract = new EtherollContract(web3);\n      const contractAddress = contract.address;\n      this.getTransactions(contract);\n      this.setState({\n        web3,\n        network: Number(web3.version.network),\n        contract,\n        contractAddress,\n      });\n      contract.web3Contract.minBet((error, minBetWei) => {\n        if (error) {\n          console.log(error);\n        }\n        const minBet = web3.fromWei(minBetWei, 'ether').toNumber();\n        this.setState({ minBet });\n      });\n      contract.web3Contract.minNumber((error, minNumber) => {\n        if (error) {\n          console.log(error);\n        }\n        const minChances = minNumber - 1;\n        this.setState({ minChances });\n      });\n      contract.web3Contract.maxNumber((error, maxNumber) => {\n        if (error) {\n          console.log(error);\n        }\n        const maxChances = maxNumber - 1;\n        this.setState({ maxChances });\n      });\n      web3.eth.getBalance(contractAddress, (error, balance) => {\n        if (error) {\n          console.log(error);\n        }\n        const contractBalance = web3.fromWei(balance, 'ether').toNumber();\n        this.setState({ contractBalance });\n      });\n      web3.eth.getAccounts((error, accounts) => {\n        if (error) {\n          console.log(error);\n        }\n        const accountAddress = accounts.length === 0 ? null : accounts[0];\n        if (accountAddress !== null) {\n          web3.eth.getBalance(accountAddress, (_, balance) => {\n            const accountBalance = web3.fromWei(balance, 'ether').toNumber();\n            this.setState({ accountBalance });\n          });\n        }\n        this.setState({ accountAddress });\n      });\n    }, () => {\n      const classType = 'danger';\n      const message = 'No account connected, '\n        + 'connect with a Web3-compatible wallet like MetaMask';\n      const alertDict = { classType, message };\n      this.setState({ alertDict });\n    });\n  }\n\n  filterTransactions(transactionsFilter) {\n    const { accountAddress, allTransactions } = this.state;\n    let filteredTransactions = allTransactions.slice();\n    if (transactionsFilter.endsWith('#my-transactions')) {\n      filteredTransactions = allTransactions.filter(transaction => (\n        transaction.logBetEvent.args.PlayerAddress.toLowerCase() === accountAddress.toLowerCase()\n      ));\n    }\n    this.setState({ filteredTransactions });\n  }\n\n  updateState(key) {\n    return (value) => {\n      this.setState({ [key]: value });\n    };\n  }\n\n  render() {\n    const {\n      accountAddress, accountBalance, alertDict, betSize, chances, contractAddress,\n      contractBalance, filteredTransactions, minBet, maxBet, minChances, maxChances, network,\n    } = this.state;\n    const rollUnder = chances + 1;\n    const rollDisabled = accountAddress === null;\n    return (\n      <div>\n        <Alert classType={alertDict.classType} message={alertDict.message} />\n        <ContractInfo\n          accountAddress={accountAddress}\n          accountBalance={accountBalance}\n          contractAddress={contractAddress}\n          contractBalance={contractBalance}\n          network={network}\n        />\n        <form className=\"PlaceBet\">\n          <h2>Place your bet</h2>\n          <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={this.updateState('betSize')} />\n          <ChanceOfWinning chances={chances} min={minChances} max={maxChances} updateChances={this.updateState('chances')} />\n          <RollUnder value={rollUnder} betSize={betSize} />\n          <RollButton onClick={() => this.onRollClick()} />\n        </form>\n        <Transactions\n          network={network}\n          onClick={transactionsFilter => this.filterTransactions(transactionsFilter)}\n          transactions={filteredTransactions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PlaceBet;\n","import React from 'react';\nimport './App.css';\nimport Headers from './components/Headers';\nimport Footers from './components/Footers';\nimport PlaceBet from './components/PlaceBet';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Headers />\n      <div className=\"container\">\n        <PlaceBet />\n      </div>\n      <Footers />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import setupSentry from './utils/sentry';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nsetupSentry();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}