{"version":3,"sources":["utils/analytics.js","utils/sentry.js","components/Headers.jsx","components/Footers.jsx","utils/get-web3.js","components/Alert.jsx","utils/etheroll-abi.js","utils/etheroll-contract.js","components/Address.jsx","components/ContractInfo.jsx","components/ValueSlider.jsx","components/BetSize.jsx","components/ChanceOfWinning.jsx","components/RollUnder.jsx","components/RollButton.jsx","components/Transactions.jsx","components/MetaMaskLink.jsx","components/PlaceBet.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["setupGA","ReactGA","initialize","process","pageview","window","location","pathname","search","setupSentry","Sentry","dsn","release","version","Logo","react_default","a","createElement","className","href","HamburgerBtn","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavSections","id","NavLink","to","exact","activeClassName","target","rel","Headers","Headers_Logo","Headers_HamburgerBtn","Headers_NavSections","Footers","getWeb3","Promise","resolve","reject","addEventListener","web3","Web3","currentProvider","Error","Alert","_ref","classType","message","concat","role","defaultProps","etherollAbi","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","SolidityEvent","require","Networks","Object","freeze","mainnet","morden","ropsten","contractAddresses","_contractAddresses","defineProperty","etherscanUrls","_etherscanUrls","EtherollContract","address","classCallCheck","this","network","abi","web3Contract","eth","contract","at","_this","events","forEach","definition","signatures","getSolidityEvents","keys","eventName","signature","eventSignature","matchingEvent","filter","key","replace","_evnt","evnt","objectSpread","getSolidityEvent","topics","decode","callback","_this2","getBlockNumber","error","result","console","log","options","fromBlock","toBlock","get","_this3","watch","_this4","getTransactionLogs","decodedEvents","map","decodeEvent","logBetEvents","event","logResultEvents","mergedLogs","mergeLogs","logResultEventsDict","reduce","dict","logResultEvent","args","BetID","logBetEvent","Address","url","ContractInfo","accountAddress","accountBalance","contractAddress","contractBalance","contractAddr","components_Address","contractBalanceBlock","toFixed","contractAddressBlock","accountAddr","accountBalanceBlock","accountAddressBlock","ValueSlider","value","updateValue","step","min","max","addonText","toFixedDigits","addon","formattedValue","onChange","e","Number","Slider_default","BetSize","betSize","updateBetSize","components_ValueSlider","ChanceOfWinning","chances","updateChances","RollUnder","profit","chancesLoss","payout","getProfit","Button","isDisabled","onClick","text","disabled","RollButton","_ref2","Transaction","hash","MergedLog","mergedLog","playerNumber","PlayerNumber","toNumber","valueEth","diceResult","sign","alertClass","playerWon","DiceResult","Value","Math","pow","PlayerAddress","toString","transactionHash","TransactionsFilterButtons","_ref3","Transactions","_ref4","transactionsElems","transactions","slice","reverse","transaction","MetaMaskLink","PlaceBet","props","possibleConstructorReturn","getPrototypeOf","call","state","minBet","maxBet","minChances","maxChances","allTransactions","filteredTransactions","alertDict","clearInterval","getTransactionsIntervalId","_this$state","rollUnder","toWei","playerRollDice","from","JSON","stringify","getMergedTransactionLogs","setState","filterTransactions","then","results","setInterval","getTransactions","minBetWei","fromWei","minNumber","maxNumber","getBalance","balance","getAccounts","accounts","length","_","Fragment","components_MetaMaskLink","transactionsFilter","_this$state2","endsWith","toLowerCase","_this5","_this$state3","rollDisabled","components_Alert","components_ContractInfo","components_BetSize","updateState","components_ChanceOfWinning","components_RollUnder","components_RollButton","onRollClick","components_Transactions","React","Component","CoinFlip","App","HashRouter","components_Headers","Route","path","component","components_Footers","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d81a526d.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\n\nfunction fireTracking() {\n  // ReactGA.pageview(window.location.hash);\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nfunction setupGA() {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  ReactGA.initialize(process.env.REACT_APP_ANALYTICS_ID);\n  fireTracking();\n}\n\nexport default setupGA;\n","import * as Sentry from '@sentry/browser';\nimport { version } from '../../package.json';\n\nfunction setupSentry() {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    release: version,\n  });\n}\n\nexport default setupSentry;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Logo = () => (\n  <a className=\"navbar-brand\" href=\"/\">\n    <i className=\"fas fa-dice-d20\" />\n    {' Etheroll'}\n  </a>\n);\n\nconst HamburgerBtn = () => (\n  <button\n    className=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarCollapse\"\n    aria-controls=\"navbarCollapse\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span className=\"navbar-toggler-icon\" />\n  </button>\n);\n\nconst NavSections = () => (\n  <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/\" exact activeClassName=\"active\">\n          <i className=\"fas fa-home\" />\n          {' Home'}\n          <span className=\"sr-only\">(current)</span>\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/coin-flip\" activeClassName=\"active\">\n          <i className=\"fas fa-coins\" />\n          {' Flip a coin'}\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          className=\"nav-link\"\n          href=\"https://github.com/AndreMiras/etheroll\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fab fa-github-alt\" />\n          {' About'}\n        </a>\n      </li>\n    </ul>\n  </div>\n);\n\nconst Headers = () => (\n  <header>\n    <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <Logo />\n      <HamburgerBtn />\n      <NavSections />\n    </nav>\n  </header>\n);\n\nexport default Headers;\n","import React from 'react';\nimport './css/Footers.css';\nimport { version } from '../../package.json';\n\nfunction Footers() {\n  return (\n    <footer className=\"Footers d-none d-md-block\">\n      <div className=\"container\">\n        <span className=\"text-muted\">\n          Copyright (c) 2018 Andre Miras - Etheroll v\n          {version}\n        </span>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footers;\n","import Web3 from 'web3';\n\nconst getWeb3 = new Promise((resolve, reject) => {\n  // wait for loading completion before loading web3, to be sure it's\n  // already injected\n  window.addEventListener('load', () => {\n    // checking if Web3 has been injected by the browser MetaMask\n    if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n      // Use MetaMask's provider.\n      const web3 = new Web3(window.web3.currentProvider);\n      const results = { web3 };\n      resolve(results);\n    } else {\n      // user is not running MetaMask?\n      reject(new Error('Is MetaMask running?'));\n    }\n  });\n});\n\n\nexport default getWeb3;\n","import React from 'react';\nimport { string, node, oneOfType } from 'prop-types';\n\nfunction Alert({ classType, message }) {\n  if (!message) {\n    return null;\n  }\n  return (\n    <div className={`alert alert-${classType}`} role=\"alert\">\n      {message}\n    </div>\n  );\n}\nAlert.propTypes = {\n  classType: string,\n  message: oneOfType([string, node]),\n};\nAlert.defaultProps = {\n  classType: 'primary',\n  message: null,\n};\n\nexport default Alert;\n","const etherollAbi = [{\n  constant: false, inputs: [{ name: 'newCallbackGasPrice', type: 'uint256' }], name: 'ownerSetCallbackGasPrice', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWon', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitAsPercentOfHouse', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newHouseEdge', type: 'uint256' }], name: 'ownerSetHouseEdge', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'payoutsPaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newTreasury', type: 'address' }], name: 'ownerSetTreasury', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }, { name: 'proof', type: 'bytes' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [{ name: 'addressToCheck', type: 'address' }], name: 'playerGetPendingTxByAddress', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newContractBalanceInWei', type: 'uint256' }], name: 'ownerUpdateContractBalance', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newPayoutStatus', type: 'bool' }], name: 'ownerPausePayouts', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newOwner', type: 'address' }], name: 'ownerChangeOwner', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMaxProfitAsPercent', type: 'uint256' }], name: 'ownerSetMaxProfitAsPercentOfHouse', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'treasury', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWagered', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMinimumBet', type: 'uint256' }], name: 'ownerSetMinBet', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newStatus', type: 'bool' }], name: 'ownerPauseGame', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gasForOraclize', outputs: [{ name: '', type: 'uint32' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'sendTo', type: 'address' }, { name: 'amount', type: 'uint256' }], name: 'ownerTransferEther', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'contractBalance', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'owner', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minBet', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'playerWithdrawPendingTransactions', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfit', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalBets', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'randomQueryID', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gamePaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'originalPlayerBetId', type: 'bytes32' }, { name: 'sendTo', type: 'address' }, { name: 'originalPlayerProfit', type: 'uint256' }, { name: 'originalPlayerBetValue', type: 'uint256' }], name: 'ownerRefundPlayer', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newSafeGasToOraclize', type: 'uint32' }], name: 'ownerSetOraclizeSafeGas', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'ownerkill', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdge', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'rollUnder', type: 'uint256' }], name: 'playerRollDice', outputs: [], payable: true, stateMutability: 'payable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdgeDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxPendingPayouts', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  inputs: [], payable: false, stateMutability: 'nonpayable', type: 'constructor',\n}, { payable: true, stateMutability: 'payable', type: 'fallback' }, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RewardValue', type: 'uint256' }, { indexed: false, name: 'ProfitValue', type: 'uint256' }, { indexed: false, name: 'BetValue', type: 'uint256' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'RandomQueryID', type: 'uint256' }], name: 'LogBet', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'ResultSerialNumber', type: 'uint256' }, { indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'DiceResult', type: 'uint256' }, { indexed: false, name: 'Value', type: 'uint256' }, { indexed: false, name: 'Status', type: 'int256' }, { indexed: false, name: 'Proof', type: 'bytes' }], name: 'LogResult', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RefundValue', type: 'uint256' }], name: 'LogRefund', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'SentToAddress', type: 'address' }, { indexed: true, name: 'AmountTransferred', type: 'uint256' }], name: 'LogOwnerTransfer', type: 'event',\n}];\n\n\nexport default etherollAbi;\n","import etherollAbi from './etheroll-abi';\n\n// TODO require vs import\nconst SolidityEvent = require('web3/lib/web3/event.js');\n\nconst Networks = Object.freeze({ mainnet: 1, morden: 2, ropsten: 3 });\n\nconst contractAddresses = {\n  [Networks.mainnet]: '0xA52e014B3f5Cc48287c2D483A3E026C32cc76E6d',\n  [Networks.ropsten]: '0xe12c6dEb59f37011d2D9FdeC77A6f1A8f3B8B1e8',\n};\n\nconst etherscanUrls = {\n  [Networks.mainnet]: 'https://etherscan.io',\n  [Networks.ropsten]: 'https://ropsten.etherscan.io',\n};\n\n\nclass EtherollContract {\n  constructor(web3, address) {\n    this.web3 = web3;\n    this.address = address;\n    if (typeof address === 'undefined') {\n      this.address = contractAddresses[web3.version.network];\n    }\n    this.abi = etherollAbi;\n    this.web3Contract = web3.eth.contract(etherollAbi).at(this.address);\n  }\n\n  getSolidityEvents() {\n    const events = {};\n    this.abi.forEach((definition) => {\n      if (definition.type !== 'event') {\n        return;\n      }\n      events[definition.name] = new SolidityEvent(this.web3, definition, this.address);\n    });\n    return events;\n  }\n\n  // Returns sha3 signature of events, e.g.\n  // {'LogResult': '0x6883...5c88', 'LogBet': '0x1cb5...75c4'}\n  getEventSignatures() {\n    const signatures = {};\n    const events = this.getSolidityEvents();\n    Object.keys(events).forEach((eventName) => {\n      signatures[eventName] = events[eventName].signature();\n    });\n    return signatures;\n  }\n\n  getSolidityEvent(eventSignature) {\n    const events = this.getSolidityEvents();\n    const matchingEvent = Object.keys(events).filter(key => (\n      events[key].signature() === eventSignature.replace('0x', '')\n    ));\n    return events[matchingEvent];\n  }\n\n  decodeEvent(_evnt) {\n    // SolidityEvent.decode() seems to be mutating the object, hence the copy\n    const evnt = { ..._evnt };\n    const solidityEvent = this.getSolidityEvent(evnt.topics[0]);\n    const decoded = solidityEvent.decode(evnt);\n    return decoded;\n  }\n\n  // callback(error, result)\n  getTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const lastBlock = result;\n        const fromBlock = lastBlock - 100;\n        const toBlock = lastBlock;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        const filter = this.web3.eth.filter(options);\n        filter.get(callback);\n      }\n    });\n  }\n\n  // callback(error, result)\n  watchTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const lastBlock = result;\n        const fromBlock = lastBlock - 100;\n        const toBlock = lastBlock;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        const filter = this.web3.eth.filter(options);\n        filter.watch(callback);\n      }\n    });\n  }\n\n  // Merges bet logs (LogBet) with bet results logs (LogResult).\n  static mergeLogs(logBetEvents, logResultEvents) {\n    // per bet ID dictionary\n    const logResultEventsDict = logResultEvents.reduce((dict, logResultEvent) => ({\n      ...dict,\n      [logResultEvent.args.BetID]: logResultEvent,\n    }), {});\n    return logBetEvents.map(logBetEvent => ({\n      logBetEvent,\n      logResultEvent: logResultEventsDict[logBetEvent.args.BetID],\n    }));\n  }\n\n  // callback(error, result)\n  getMergedTransactionLogs(callback) {\n    this.getTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const decodedEvents = result.map(evnt => this.decodeEvent(evnt));\n        const logBetEvents = decodedEvents.filter(evnt => (\n          evnt.event === 'LogBet'\n        ));\n        const logResultEvents = decodedEvents.filter(evnt => (\n          evnt.event === 'LogResult'\n        ));\n        const mergedLogs = EtherollContract.mergeLogs(logBetEvents, logResultEvents);\n        callback(error, mergedLogs);\n      }\n    });\n  }\n}\n\n\nexport {\n  EtherollContract, etherscanUrls, Networks, contractAddresses,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Address({ address, network }) {\n  const url = `${etherscanUrls[network]}/address/${address}`;\n  return <a href={url} className=\"text-monospace\">{address}</a>;\n}\nAddress.propTypes = {\n  address: PropTypes.string.isRequired,\n  network: PropTypes.number.isRequired,\n};\n\nexport default Address;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Address from './Address';\n\nfunction ContractInfo({\n  accountAddress, accountBalance, contractAddress, contractBalance, network,\n}) {\n  const contractAddr = <Address network={network} address={contractAddress} />;\n  const contractBalanceBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      <i className=\"far fa-file-code\" />\n      &nbsp;Contract&nbsp;(\n      {contractBalance.toFixed(2)}\n      &nbsp;ETH)\n    </div>\n  );\n  const contractAddressBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      {contractAddr}\n    </div>\n  );\n  const accountAddr = (accountAddress !== null)\n    ? <Address network={network} address={accountAddress} />\n    : <span>Not connected, please login to MetaMask</span>;\n  const accountBalanceBlock = (\n    <div className=\"col-lg-12\">\n      <i className=\"far fa-user\" />\n      &nbsp;Account&nbsp;(\n      {accountBalance.toFixed(2)}\n      &nbsp;ETH)\n    </div>\n  );\n  const accountAddressBlock = (\n    <div className=\"col-12\">\n      {accountAddr}\n    </div>\n  );\n  return (\n    <div className=\"row\">\n      {accountBalanceBlock}\n      {accountAddressBlock}\n      {contractBalanceBlock}\n      {contractAddressBlock}\n    </div>\n  );\n}\nContractInfo.propTypes = {\n  accountAddress: PropTypes.string,\n  accountBalance: PropTypes.number.isRequired,\n  contractAddress: PropTypes.string.isRequired,\n  contractBalance: PropTypes.number.isRequired,\n  network: PropTypes.number.isRequired,\n};\nContractInfo.defaultProps = {\n  accountAddress: null,\n};\n\nexport default ContractInfo;\n","import React from 'react';\nimport Slider from 'rc-slider/lib/Slider';\nimport PropTypes from 'prop-types';\nimport 'rc-slider/assets/index.css';\n\n\nfunction ValueSlider({\n  value, updateValue, step, min, max, addonText, toFixedDigits,\n}) {\n  let addon = null;\n  if (addonText !== null) {\n    addon = (\n      <div className=\"input-group-append\">\n        <span className=\"input-group-text text-monospace\">{addonText}</span>\n      </div>\n    );\n  }\n  const formattedValue = toFixedDigits === null ? value : value.toFixed(toFixedDigits);\n  return (\n    <div className=\"row\">\n      <div className=\"input-group col-sm-3 col-lg-2\">\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          onChange={e => updateValue(Number(e.target.value))}\n          value={formattedValue}\n        />\n        {addon}\n      </div>\n      <div className=\"col\">\n        <Slider onChange={updateValue} value={value} step={step} min={min} max={max} />\n      </div>\n    </div>\n  );\n}\nValueSlider.propTypes = {\n  value: PropTypes.number.isRequired,\n  updateValue: PropTypes.func.isRequired,\n  step: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  addonText: PropTypes.string,\n  toFixedDigits: PropTypes.number,\n};\nValueSlider.defaultProps = {\n  step: 1,\n  min: 0,\n  max: 100,\n  addonText: null,\n  toFixedDigits: null,\n};\n\nexport default ValueSlider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ValueSlider from './ValueSlider';\n\nfunction BetSize({\n  betSize, min, max, updateBetSize,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>Bet size</b>\n      <ValueSlider value={betSize} updateValue={updateBetSize} step={0.05} min={min} max={max} addonText=\"ETH\" toFixedDigits={2} />\n    </div>\n  );\n}\nBetSize.propTypes = {\n  betSize: PropTypes.number.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  updateBetSize: PropTypes.func.isRequired,\n};\nBetSize.defaultProps = {\n  min: 0,\n  max: 10,\n};\n\nexport default BetSize;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ValueSlider from './ValueSlider';\n\nfunction ChanceOfWinning({\n  chances, min, max, updateChances,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>Chance of winning</b>\n      <ValueSlider value={chances} min={min} max={max} updateValue={updateChances} addonText=\"&nbsp;%&nbsp;\" />\n    </div>\n  );\n}\nChanceOfWinning.propTypes = {\n  chances: PropTypes.number.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  updateChances: PropTypes.func.isRequired,\n};\nChanceOfWinning.defaultProps = {\n  min: 0,\n  max: 100,\n};\n\nexport default ChanceOfWinning;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction getProfit(betSize, chances) {\n  let profit = 0;\n  const houseEdge = 1 / 100.0;\n  const chancesLoss = 100.0 - chances;\n  if (chances !== 0 && chancesLoss !== 0) {\n    let payout = ((chancesLoss / chances) * betSize) + betSize;\n    payout *= (1 - houseEdge);\n    profit = payout - betSize;\n  }\n  return profit;\n}\n\nfunction RollUnder({ betSize, value }) {\n  const chances = value - 1;\n  const profit = getProfit(betSize, chances);\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <h3>Roll under</h3>\n      </div>\n      <div className=\"col-6\">\n        <h3 className=\"text-right\">{value}</h3>\n      </div>\n      <div className=\"col-6\">\n        With a wager of\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right mb-0\">\n          {betSize.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n      <div className=\"col-6\">\n        For a profit of\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right\">\n          {profit.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n    </div>\n  );\n}\nRollUnder.propTypes = {\n  betSize: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default RollUnder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button({ isDisabled, onClick, text }) {\n  return (\n    <button type=\"button\" className=\"btn btn-primary btn-lg col-md-3\" disabled={isDisabled} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\nButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nfunction RollButton({ isDisabled, onClick }) {\n  return <Button text=\"Roll\" isDisabled={isDisabled} onClick={onClick} />;\n}\nRollButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\nRollButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default RollButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Address from './Address';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Transaction({ hash, network }) {\n  const url = `${etherscanUrls[network]}/tx/${hash}`;\n  return <a href={url}>{hash}</a>;\n}\nTransaction.propTypes = {\n  hash: PropTypes.string.isRequired,\n  network: PropTypes.number.isRequired,\n};\n\nfunction MergedLog({ network, mergedLog }) {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = logBetEvent.args.PlayerNumber.toNumber();\n  let valueEth = '?';\n  let diceResult = '?';\n  let sign = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    diceResult = logResultEvent.args.DiceResult.toNumber();\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.args.Value * (10 ** (-18))).toFixed(2);\n    sign = playerWon ? '<' : '>';\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{diceResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          {diceResult}\n          &nbsp;\n          {sign}\n          &nbsp;\n          {playerNumber}\n        </div>\n        <div className=\"w-100\">\n          Wallet:\n          &nbsp;\n          <Address address={logBetEvent.args.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          Transaction:\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMergedLog.propTypes = {\n  network: PropTypes.number.isRequired,\n  mergedLog: PropTypes.shape({\n    // TODO: seems completely ignored\n    todo: PropTypes.number,\n  }).isRequired,\n};\n\nfunction TransactionsFilterButtons({ onClick }) {\n  return (\n    <nav className=\"nav\">\n      <a\n        className=\"nav-link active\"\n        href=\"#all-transactions\"\n        onClick={e => onClick(e.target.href)}\n      >\n          All transactions\n      </a>\n      <a\n        className=\"nav-link\"\n        href=\"#my-transactions\"\n        onClick={e => onClick(e.target.href)}\n      >\n          My transactions\n      </a>\n    </nav>\n  );\n}\nTransactionsFilterButtons.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nfunction Transactions({ network, onClick, transactions }) {\n  const reversedTransactions = transactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n}\nTransactions.propTypes = {\n  network: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: PropTypes.number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React from 'react';\n\nconst MetaMaskLink = () => (\n  <a\n    href=\"https://metamask.io/\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Meta Mask\n  </a>\n);\n\nexport default MetaMaskLink;\n","import React from 'react';\nimport './css/PlaceBet.css';\nimport getWeb3 from '../utils/get-web3';\nimport Alert from './Alert';\nimport ContractInfo from './ContractInfo';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport RollUnder from './RollUnder';\nimport RollButton from './RollButton';\nimport Transactions from './Transactions';\nimport MetaMaskLink from './MetaMaskLink';\nimport {\n  EtherollContract, Networks, contractAddresses,\n} from '../utils/etheroll-contract';\n\n\nclass PlaceBet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      betSize: 0.1,\n      chances: 50,\n      minBet: BetSize.defaultProps.min,\n      maxBet: BetSize.defaultProps.max,\n      minChances: ChanceOfWinning.defaultProps.min,\n      maxChances: ChanceOfWinning.defaultProps.max,\n      accountAddress: null,\n      accountBalance: 0,\n      web3: null,\n      network: Networks.mainnet,\n      contract: null,\n      contractAddress: contractAddresses[Networks.mainnet],\n      contractBalance: 0,\n      // most recent transaction is last in the array\n      allTransactions: [],\n      filteredTransactions: [],\n      alertDict: {},\n    };\n  }\n\n  componentDidMount() {\n    this.getWeb3();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.getTransactionsIntervalId);\n  }\n\n  onRollClick() {\n    const {\n      accountAddress, chances, contract, betSize, web3,\n    } = this.state;\n    const rollUnder = chances + 1;\n    const value = web3.toWei(betSize.toString(), 'ether');\n    contract.web3Contract.playerRollDice(\n      rollUnder, { from: accountAddress, value },\n      (error, result) => {\n        if (error) {\n          console.error(error);\n        } else {\n          console.log(JSON.stringify(result));\n        }\n      },\n    );\n  }\n\n  getTransactions(contract) {\n    contract.getMergedTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const allTransactions = result;\n        this.setState({ allTransactions });\n        this.filterTransactions(window.location.href);\n      }\n    });\n  }\n\n  getWeb3() {\n    getWeb3.then((results) => {\n      const { web3 } = results;\n      const contract = new EtherollContract(web3);\n      const contractAddress = contract.address;\n      const pullIntervalSeconds = 10 * 1000;\n      // clearInterval() is in the componentWillUnmount()\n      this.getTransactionsIntervalId = setInterval((\n      ) => this.getTransactions(contract), pullIntervalSeconds);\n      this.getTransactions(contract);\n      this.setState({\n        web3,\n        network: Number(web3.version.network),\n        contract,\n        contractAddress,\n      });\n      contract.web3Contract.minBet((error, minBetWei) => {\n        if (error) {\n          console.log(error);\n        }\n        const minBet = web3.fromWei(minBetWei, 'ether').toNumber();\n        this.setState({ minBet });\n      });\n      contract.web3Contract.minNumber((error, minNumber) => {\n        if (error) {\n          console.log(error);\n        }\n        const minChances = minNumber - 1;\n        this.setState({ minChances });\n      });\n      contract.web3Contract.maxNumber((error, maxNumber) => {\n        if (error) {\n          console.log(error);\n        }\n        const maxChances = maxNumber - 1;\n        this.setState({ maxChances });\n      });\n      web3.eth.getBalance(contractAddress, (error, balance) => {\n        if (error) {\n          console.log(error);\n        }\n        const contractBalance = web3.fromWei(balance, 'ether').toNumber();\n        this.setState({ contractBalance });\n      });\n      web3.eth.getAccounts((error, accounts) => {\n        if (error) {\n          console.log(error);\n        }\n        const accountAddress = accounts.length === 0 ? null : accounts[0];\n        if (accountAddress !== null) {\n          web3.eth.getBalance(accountAddress, (_, balance) => {\n            const accountBalance = web3.fromWei(balance, 'ether').toNumber();\n            this.setState({ accountBalance });\n          });\n        }\n        this.setState({ accountAddress });\n      });\n    }, () => {\n      const classType = 'danger';\n      const noAccountConnected = () => (<>\n        {'No account connected, connect with a Web3-compatible wallet like '}\n        <MetaMaskLink />\n      </>);\n      const alertDict = { classType, message: noAccountConnected() };\n      this.setState({ alertDict });\n    });\n  }\n\n  filterTransactions(transactionsFilter) {\n    const { accountAddress, allTransactions } = this.state;\n    let filteredTransactions = allTransactions.slice();\n    if (transactionsFilter.endsWith('#my-transactions')) {\n      filteredTransactions = allTransactions.filter(transaction => (\n        transaction.logBetEvent.args.PlayerAddress.toLowerCase() === accountAddress.toLowerCase()\n      ));\n    }\n    this.setState({ filteredTransactions });\n  }\n\n  updateState(key) {\n    return (value) => {\n      this.setState({ [key]: value });\n    };\n  }\n\n  render() {\n    const {\n      accountAddress, accountBalance, alertDict, betSize, chances, contractAddress,\n      contractBalance, filteredTransactions, minBet, maxBet, minChances, maxChances, network,\n    } = this.state;\n    const rollUnder = chances + 1;\n    const rollDisabled = accountAddress === null;\n    return (\n      <div>\n        <Alert classType={alertDict.classType} message={alertDict.message} />\n        <ContractInfo\n          accountAddress={accountAddress}\n          accountBalance={accountBalance}\n          contractAddress={contractAddress}\n          contractBalance={contractBalance}\n          network={network}\n        />\n        <form className=\"PlaceBet\">\n          <h2>Place your bet</h2>\n          <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={this.updateState('betSize')} />\n          <ChanceOfWinning chances={chances} min={minChances} max={maxChances} updateChances={this.updateState('chances')} />\n          <RollUnder value={rollUnder} betSize={betSize} />\n          <RollButton isDisabled={rollDisabled} onClick={() => this.onRollClick()} />\n        </form>\n        <Transactions\n          network={network}\n          onClick={transactionsFilter => this.filterTransactions(transactionsFilter)}\n          transactions={filteredTransactions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PlaceBet;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Headers from './components/Headers';\nimport Footers from './components/Footers';\nimport PlaceBet from './components/PlaceBet';\n\n\nconst CoinFlip = () => (\n  <>\n    coming soon\n  </>\n);\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      <Headers />\n      <div className=\"container\">\n        <Route path=\"/\" exact component={PlaceBet} />\n        <Route path=\"/coin-flip\" component={CoinFlip} />\n      </div>\n      <Footers />\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport setupGA from './utils/analytics';\nimport setupSentry from './utils/sentry';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nsetupGA();\nsetupSentry();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}