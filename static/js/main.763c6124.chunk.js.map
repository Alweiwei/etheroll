{"version":3,"sources":["utils/analytics.js","utils/sentry.js","components/Headers.jsx","components/Footers.jsx","components/Alert.jsx","components/BaseGame.jsx","components/ValueSlider.jsx","components/BetSize.jsx","components/FlipButton.jsx","utils/etheroll-abi.js","utils/etheroll-contract.js","components/CoinFlipRecap.jsx","components/Address.jsx","components/Transaction.jsx","components/CoinFlipTransactions.jsx","components/CoinFlip.jsx","components/ContractInfo.jsx","components/ChanceOfWinning.jsx","components/RollUnderRecap.jsx","components/RollButton.jsx","components/Transactions.jsx","components/RollUnder.jsx","components/MetaMaskLink.jsx","utils/get-web3.js","components/Container.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["setupGA","ReactGA","initialize","process","pageview","window","location","pathname","search","setupSentry","Sentry","dsn","release","version","Logo","react_default","a","createElement","className","href","HamburgerBtn","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavSections","id","NavLink","to","exact","activeClassName","components_message","defaultMessage","target","rel","Headers","Headers_Logo","Headers_HamburgerBtn","Headers_NavSections","Footers","Alert","_ref","classType","message","concat","role","defaultProps","onRollClick","accountAddress","rollUnder","contract","betSize","value","toWei","toString","web3Contract","methods","playerRollDice","send","from","then","result","console","log","JSON","stringify","ValueSlider","updateValue","step","min","max","addonText","toFixedDigits","addon","formattedValue","toFixed","onChange","e","Number","Slider_default","BetSize","updateBetSize","components_ValueSlider","Button","isDisabled","onClick","text","disabled","FlipButton","_ref2","messages","defineMessages","intl","useIntl","FlipButton_Button","formatMessage","etherollAbi","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","Networks","Object","freeze","mainnet","morden","ropsten","contractAddresses","_contractAddresses","defineProperty","etherscanUrls","_etherscanUrls","getProfit","winningChances","rawPayout","getPayout","netPayout","Math","EtherollContract","web3","address","classCallCheck","this","abi","eth","Contract","callback","_this","getBlockNumber","error","blockNumber","options","fromBlock","toBlock","getPastEvents","getTransactionLogs","mergedLogs","logBetEvents","logResultEvents","findLogResultEventBylogBetEvent","logBetEvent","find","logResultEvent","returnValues","BetID","map","mergeLogs","filter","evnt","event","CoinFlipRecap","profit","values","Address","network","url","Transaction","hash","MergedLog","mergedLog","playerNumber","PlayerNumber","valueEth","coinResult","alertClass","diceResult","DiceResult","playerWon","Value","pow","components_Address","PlayerAddress","components_Transaction","transactionHash","TransactionsFilterButtons","Transactions","_ref3","transactionsElems","transactions","transaction","slice","reverse","key","CoinFlipTransactions_TransactionsFilterButtons","CoinFlip","props","filterTransactions","filteredTransactions","minBet","maxBet","updateState","onRollClickProps","rollDisabled","react","components_BetSize","components_CoinFlipRecap","components_FlipButton","CoinFlipTransactions","transactionsFilter","ContractInfo","accountBalance","contractAddress","contractBalance","contractAddr","contractBalanceBlock","contractAddressBlock","accountAddr","accountBalanceBlock","accountAddressBlock","ChanceOfWinning","chances","updateChances","RollUnderRecap","RollButton","RollButton_Button","sign","Transactions_MergedLog","Transactions_TransactionsFilterButtons","RollUnder","minChances","maxChances","components_ChanceOfWinning","components_RollUnderRecap","components_RollButton","components_Transactions","MetaMaskLink","getWeb3","Promise","resolve","reject","addEventListener","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","ethereum","Web3","enable","t0","currentProvider","Error","stop","showMessage","updateAlertDict","showFetchContractInfoWarning","showWarningMessage","optionalMessage","getAccountsCallback","updateAccountAddress","updateAccountBalance","accounts","length","getBalance","balance","fromWei","getAccountBalanceCallback","allTransactions","updateFilteredTransactions","updateTransactionsFilter","toLowerCase","Container","possibleConstructorReturn","getPrototypeOf","call","state","alertDict","onWeb3","bind","assertThisInitialized","initWeb3","clearInterval","getTransactionsIntervalId","_this2","net","getId","_this2$state","getTransactionsAlias","updateAllTransactions","getMergedTransactionLogs","getTransactions","setInterval","setState","minBetWei","minBetCallback","minNumber","minNumberCallback","maxNumber","maxNumberCallback","getAccounts","_this3","metamaskLink","components_MetaMaskLink","_this4","_this5","_this$state","gameProps","contractProps","components_Alert","components_ContractInfo","description","Route","path","render","components_RollUnder","components_CoinFlip","React","Component","App","HashRouter","components_Headers","components_Container","components_Footers","Boolean","hostname","match","en","es","messagesEs","fr","messagesFr","language","navigator","split","ReactDOM","provider","locale","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.763c6124.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\n\nfunction fireTracking() {\n  // ReactGA.pageview(window.location.hash);\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nfunction setupGA() {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  ReactGA.initialize(process.env.REACT_APP_ANALYTICS_ID);\n  fireTracking();\n}\n\nexport default setupGA;\n","import * as Sentry from '@sentry/browser';\nimport { version } from '../../package.json';\n\nfunction setupSentry() {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    release: version,\n  });\n}\n\nexport default setupSentry;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { NavLink } from 'react-router-dom';\n\nconst Logo = () => (\n  <a className=\"navbar-brand\" href=\"/\">\n    <i className=\"fas fa-dice-d20\" />\n    {' Etheroll'}\n  </a>\n);\n\nconst HamburgerBtn = () => (\n  <button\n    className=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarCollapse\"\n    aria-controls=\"navbarCollapse\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span className=\"navbar-toggler-icon\" />\n  </button>\n);\n\nconst NavSections = () => (\n  <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/\" exact activeClassName=\"active\">\n          <i className=\"fas fa-home\" />\n          &nbsp;\n          <FormattedMessage\n            id=\"headers.navsections.navlink.home\"\n            defaultMessage=\"Home\"\n          />\n          <span className=\"sr-only\">(current)</span>\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/coin-flip\" activeClassName=\"active\">\n          <i className=\"fas fa-coins\" />\n          &nbsp;\n          <FormattedMessage\n            id=\"headers.navsections.navlink.coin-flip\"\n            defaultMessage=\"Flip a coin\"\n          />\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          className=\"nav-link\"\n          href=\"https://github.com/AndreMiras/etheroll\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fab fa-github-alt\" />\n          &nbsp;\n          <FormattedMessage\n            id=\"headers.navsections.navlink.about\"\n            defaultMessage=\"About\"\n          />\n        </a>\n      </li>\n    </ul>\n  </div>\n);\n\nconst Headers = () => (\n  <header>\n    <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <Logo />\n      <HamburgerBtn />\n      <NavSections />\n    </nav>\n  </header>\n);\n\nexport default Headers;\n","import React from 'react';\nimport './css/Footers.css';\nimport { version } from '../../package.json';\n\nfunction Footers() {\n  return (\n    <footer className=\"Footers d-none d-md-block\">\n      <div className=\"container\">\n        <span className=\"text-muted\">\n          Copyright (c) 2018 Andre Miras - Etheroll v\n          {version}\n        </span>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footers;\n","import React from 'react';\nimport { string, node, oneOfType } from 'prop-types';\n\nfunction Alert({ classType, message }) {\n  return message\n    ? (\n      <div className={`alert alert-${classType}`} role=\"alert\">\n        {message}\n      </div>\n    )\n    : null;\n}\nAlert.propTypes = {\n  classType: string,\n  message: oneOfType([string, node]),\n};\nAlert.defaultProps = {\n  classType: 'primary',\n  message: null,\n};\n\nexport default Alert;\n","import { toWei } from 'web3-utils';\n\nconst onRollClick = ({\n  accountAddress, rollUnder, contract, betSize,\n}) => {\n  const value = toWei(betSize.toString(), 'ether');\n  contract.web3Contract.methods.playerRollDice(rollUnder).send({\n    from: accountAddress,\n    value,\n  }).then(result => console.log(JSON.stringify(result)));\n};\n\nexport default onRollClick;\n","import React from 'react';\nimport Slider from 'rc-slider/lib/Slider';\nimport { func, number, string } from 'prop-types';\nimport 'rc-slider/assets/index.css';\n\n\nfunction ValueSlider({\n  value, updateValue, step, min, max, addonText, toFixedDigits,\n}) {\n  const addon = (addonText !== null) ? (\n    <div className=\"input-group-append\">\n      <span className=\"input-group-text text-monospace\">{addonText}</span>\n    </div>\n  ) : null;\n  const formattedValue = toFixedDigits === null ? value : value.toFixed(toFixedDigits);\n  return (\n    <div className=\"row\">\n      <div className=\"input-group col-sm-3 col-lg-2\">\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          onChange={e => updateValue(Number(e.target.value))}\n          value={formattedValue}\n        />\n        {addon}\n      </div>\n      <div className=\"col\">\n        <Slider onChange={updateValue} value={value} step={step} min={min} max={max} />\n      </div>\n    </div>\n  );\n}\nValueSlider.propTypes = {\n  value: number.isRequired,\n  updateValue: func.isRequired,\n  step: number,\n  min: number,\n  max: number,\n  addonText: string,\n  toFixedDigits: number,\n};\nValueSlider.defaultProps = {\n  step: 1,\n  min: 0,\n  max: 100,\n  addonText: null,\n  toFixedDigits: null,\n};\n\nexport default ValueSlider;\n","import React from 'react';\nimport { number, func } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport ValueSlider from './ValueSlider';\n\nfunction BetSize({\n  betSize, min, max, updateBetSize,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>\n        <FormattedMessage\n          id=\"betsize.betsize\"\n          defaultMessage=\"Bet size\"\n        />\n      </b>\n      <ValueSlider value={betSize} updateValue={updateBetSize} step={0.05} min={min} max={max} addonText=\"ETH\" toFixedDigits={2} />\n    </div>\n  );\n}\nBetSize.propTypes = {\n  betSize: number.isRequired,\n  min: number,\n  max: number,\n  updateBetSize: func.isRequired,\n};\nBetSize.defaultProps = {\n  min: 0,\n  max: 10,\n};\n\nexport default BetSize;\n","import React from 'react';\nimport { bool, func, string } from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst Button = ({ isDisabled, onClick, text }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-primary btn-lg col-md-3\"\n    disabled={isDisabled}\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\nButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n  text: string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nfunction FlipButton({ isDisabled, onClick }) {\n  // https://github.com/leesx/react-intl-demo2018/blob/0cd88df/docs/react-intl-corner-cases.md\n  const messages = defineMessages({\n    text: {\n      id: 'flipbutton.text',\n      defaultMessage: 'Flip Head',\n    },\n  });\n  const intl = useIntl();\n  return (\n    <Button text={intl.formatMessage(messages.text)} isDisabled={isDisabled} onClick={onClick} />);\n}\nFlipButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n};\nFlipButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default FlipButton;\n","const etherollAbi = [{\n  constant: false, inputs: [{ name: 'newCallbackGasPrice', type: 'uint256' }], name: 'ownerSetCallbackGasPrice', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWon', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitAsPercentOfHouse', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newHouseEdge', type: 'uint256' }], name: 'ownerSetHouseEdge', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'payoutsPaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newTreasury', type: 'address' }], name: 'ownerSetTreasury', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }, { name: 'proof', type: 'bytes' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [{ name: 'addressToCheck', type: 'address' }], name: 'playerGetPendingTxByAddress', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newContractBalanceInWei', type: 'uint256' }], name: 'ownerUpdateContractBalance', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newPayoutStatus', type: 'bool' }], name: 'ownerPausePayouts', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newOwner', type: 'address' }], name: 'ownerChangeOwner', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMaxProfitAsPercent', type: 'uint256' }], name: 'ownerSetMaxProfitAsPercentOfHouse', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'treasury', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWagered', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMinimumBet', type: 'uint256' }], name: 'ownerSetMinBet', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newStatus', type: 'bool' }], name: 'ownerPauseGame', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gasForOraclize', outputs: [{ name: '', type: 'uint32' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'sendTo', type: 'address' }, { name: 'amount', type: 'uint256' }], name: 'ownerTransferEther', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'contractBalance', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'owner', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minBet', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'playerWithdrawPendingTransactions', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfit', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalBets', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'randomQueryID', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gamePaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'originalPlayerBetId', type: 'bytes32' }, { name: 'sendTo', type: 'address' }, { name: 'originalPlayerProfit', type: 'uint256' }, { name: 'originalPlayerBetValue', type: 'uint256' }], name: 'ownerRefundPlayer', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newSafeGasToOraclize', type: 'uint32' }], name: 'ownerSetOraclizeSafeGas', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'ownerkill', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdge', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'rollUnder', type: 'uint256' }], name: 'playerRollDice', outputs: [], payable: true, stateMutability: 'payable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdgeDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxPendingPayouts', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  inputs: [], payable: false, stateMutability: 'nonpayable', type: 'constructor',\n}, { payable: true, stateMutability: 'payable', type: 'fallback' }, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RewardValue', type: 'uint256' }, { indexed: false, name: 'ProfitValue', type: 'uint256' }, { indexed: false, name: 'BetValue', type: 'uint256' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'RandomQueryID', type: 'uint256' }], name: 'LogBet', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'ResultSerialNumber', type: 'uint256' }, { indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'DiceResult', type: 'uint256' }, { indexed: false, name: 'Value', type: 'uint256' }, { indexed: false, name: 'Status', type: 'int256' }, { indexed: false, name: 'Proof', type: 'bytes' }], name: 'LogResult', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RefundValue', type: 'uint256' }], name: 'LogRefund', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'SentToAddress', type: 'address' }, { indexed: true, name: 'AmountTransferred', type: 'uint256' }], name: 'LogOwnerTransfer', type: 'event',\n}];\n\n\nexport default etherollAbi;\n","import etherollAbi from './etheroll-abi';\n\n// TODO require vs import\n// const SolidityEvent = require('web3/lib/web3/event.js');\n\nconst Networks = Object.freeze({ mainnet: 1, morden: 2, ropsten: 3 });\n\nconst contractAddresses = {\n  [Networks.mainnet]: '0xA52e014B3f5Cc48287c2D483A3E026C32cc76E6d',\n  [Networks.ropsten]: '0xe12c6dEb59f37011d2D9FdeC77A6f1A8f3B8B1e8',\n};\n\nconst etherscanUrls = {\n  [Networks.mainnet]: 'https://etherscan.io',\n  [Networks.ropsten]: 'https://ropsten.etherscan.io',\n};\n\n\nfunction getPayout(betSize, winningChances) {\n  return 100 / winningChances * betSize;\n}\n\nfunction cutHouseEdge(payout) {\n  const houseEdge = 1 / 100.0;\n  return payout * (1 - houseEdge);\n}\n\nfunction getProfit(betSize, winningChances) {\n  if (winningChances === 0) {\n    return 0;\n  }\n  const rawPayout = getPayout(betSize, winningChances);\n  const netPayout = cutHouseEdge(rawPayout);\n\n  return Math.max(netPayout - betSize, 0);\n}\n\n\n// Merges bet logs (LogBet) with bet results logs (LogResult).\nfunction mergeLogs(logBetEvents, logResultEvents) {\n  const findLogResultEventBylogBetEvent = logBetEvent => (\n    logResultEvents.find(logResultEvent => (\n      logResultEvent.returnValues.BetID === logBetEvent.returnValues.BetID\n    ))\n  );\n\n  return logBetEvents.map(logBetEvent => ({\n    logBetEvent,\n    logResultEvent: findLogResultEventBylogBetEvent(logBetEvent),\n  }));\n}\n\nclass EtherollContract {\n  constructor(web3, address) {\n    this.web3 = web3;\n    this.address = address;\n    this.abi = etherollAbi;\n    this.web3Contract = new web3.eth.Contract(etherollAbi, address);\n  }\n\n  // callback(error, result)\n  getTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, blockNumber) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const toBlock = blockNumber;\n        const fromBlock = toBlock - 100;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        this.web3Contract.getPastEvents('allEvents', options, callback);\n      }\n    });\n  }\n\n  // callback(error, result)\n  getMergedTransactionLogs(callback) {\n    this.getTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const logBetEvents = result.filter(evnt => evnt.event === 'LogBet');\n        const logResultEvents = result.filter(evnt => evnt.event === 'LogResult');\n        const mergedLogs = mergeLogs(logBetEvents, logResultEvents);\n        callback(error, mergedLogs);\n      }\n    });\n  }\n}\n\n\nexport {\n  EtherollContract, etherscanUrls, getProfit, mergeLogs, Networks, contractAddresses,\n};\n","import React from 'react';\nimport { number } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { getProfit } from '../utils/etheroll-contract';\n\n\nfunction CoinFlipRecap({ betSize }) {\n  const chances = 50;\n  const profit = getProfit(betSize, chances);\n  return (\n    <p>\n      <FormattedMessage\n        id=\"coinfliprecap.flip-head-with-a-wager\"\n        defaultMessage={'Flip Head with a wager of {betSize} for a profit of {profit}'}\n        values={{ betSize: betSize.toFixed(2), profit: profit.toFixed(2) }}\n      />\n    </p>\n  );\n}\nCoinFlipRecap.propTypes = {\n  betSize: number.isRequired,\n};\n\nexport default CoinFlipRecap;\n","import React from 'react';\nimport { string, number } from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Address({ address, network }) {\n  const url = `${etherscanUrls[network]}/address/${address}`;\n  return <a href={url} className=\"text-monospace\">{address}</a>;\n}\nAddress.propTypes = {\n  address: string.isRequired,\n  network: number.isRequired,\n};\n\nexport default Address;\n","import React from 'react';\nimport { string, number } from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Transaction({ hash, network }) {\n  const url = `${etherscanUrls[network]}/tx/${hash}`;\n  return <a href={url}>{hash}</a>;\n}\nTransaction.propTypes = {\n  hash: string.isRequired,\n  network: number.isRequired,\n};\n\nexport default Transaction;\n","import React from 'react';\nimport {\n  arrayOf, func, number, shape,\n} from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\n\nfunction MergedLog({ network, mergedLog }) {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = Number(logBetEvent.returnValues.PlayerNumber);\n  // const playerSide = 'Head';\n  let valueEth = '?';\n  let coinResult = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    const diceResult = Number(logResultEvent.returnValues.DiceResult);\n    coinResult = diceResult < 51 ? 'Head' : 'Tail';\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.returnValues.Value * (10 ** (-18))).toFixed(2);\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{coinResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.wallet\"\n            defaultMessage=\"Wallet:\"\n          />\n          &nbsp;\n          <Address address={logBetEvent.returnValues.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.transaction\"\n            defaultMessage=\"Transaction:\"\n          />\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMergedLog.propTypes = {\n  network: number.isRequired,\n  mergedLog: shape({\n    // TODO: seems completely ignored\n    todo: number,\n  }).isRequired,\n};\n\nconst TransactionsFilterButtons = ({ onClick }) => (\n  <nav className=\"nav\">\n    <button\n      type=\"button\"\n      className=\"btn btn-link active\"\n      onClick={() => onClick('#all-transactions')}\n    >\n      <FormattedMessage\n        id=\"transactions-filter-buttons.all-transactions\"\n        defaultMessage=\"All transactions\"\n      />\n    </button>\n    <button\n      type=\"button\"\n      className=\"btn btn-link\"\n      onClick={() => onClick('#my-transactions')}\n    >\n      <FormattedMessage\n        id=\"transactions-filter-buttons.my-transactions\"\n        defaultMessage=\"My transactions\"\n      />\n    </button>\n  </nav>\n);\nTransactionsFilterButtons.propTypes = {\n  onClick: func.isRequired,\n};\n\nfunction Transactions({ network, onClick, transactions }) {\n  const coinflipTransactions = transactions.filter(transaction => (\n    Number(transaction.logBetEvent.returnValues.PlayerNumber) === 51\n  ));\n  const reversedTransactions = coinflipTransactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n}\nTransactions.propTypes = {\n  network: number.isRequired,\n  onClick: func.isRequired,\n  transactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React, { Fragment } from 'react';\nimport {\n  arrayOf, func, number, shape, string,\n} from 'prop-types';\nimport onRollClick from './BaseGame';\nimport BetSize from './BetSize';\nimport FlipButton from './FlipButton';\nimport CoinFlipRecap from './CoinFlipRecap';\nimport CoinFlipTransactions from './CoinFlipTransactions';\n\n\nfunction CoinFlip(props) {\n  const {\n    accountAddress, betSize, contract,\n    filterTransactions, filteredTransactions, minBet, maxBet, network,\n    updateState,\n  } = props;\n  const rollUnder = 51;\n  const onRollClickProps = {\n    accountAddress, rollUnder, contract, betSize,\n  };\n  const rollDisabled = accountAddress === null;\n  return (\n    <Fragment>\n      <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={updateState('betSize')} />\n      <CoinFlipRecap betSize={betSize} />\n      <FlipButton isDisabled={rollDisabled} onClick={() => onRollClick(onRollClickProps)} />\n      <CoinFlipTransactions\n        network={network}\n        onClick={transactionsFilter => filterTransactions(transactionsFilter)}\n        transactions={filteredTransactions}\n      />\n    </Fragment>\n  );\n}\n\nCoinFlip.propTypes = {\n  accountAddress: string,\n  betSize: number.isRequired,\n  contract: shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  }),\n  filterTransactions: func.isRequired,\n  filteredTransactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n  minBet: number.isRequired,\n  maxBet: number.isRequired,\n  network: number.isRequired,\n  updateState: func.isRequired,\n};\nCoinFlip.defaultProps = {\n  accountAddress: null,\n  contract: null,\n};\n\nexport default CoinFlip;\n","import React from 'react';\nimport { number, string } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Address from './Address';\n\nfunction ContractInfo({\n  accountAddress, accountBalance, contractAddress, contractBalance, network,\n}) {\n  const contractAddr = <Address network={network} address={contractAddress} />;\n\n  const contractBalanceBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      <i className=\"far fa-file-code\" />\n      &nbsp;\n      <FormattedMessage\n        id=\"contractinfo.contract\"\n        defaultMessage={'Contract ({contractBalance} ETH)'}\n        values={{ contractBalance: contractBalance.toFixed(2) }}\n      />\n    </div>\n  );\n\n  const contractAddressBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      {contractAddr}\n    </div>\n  );\n  const accountAddr = (accountAddress !== null)\n    ? <Address network={network} address={accountAddress} />\n    : (\n      <span>\n        <FormattedMessage\n          id=\"contractinfo.not-connected\"\n          defaultMessage=\"Not connected, please login to MetaMask\"\n        />\n      </span>\n    );\n\n  const accountBalanceBlock = (\n    <div className=\"col-lg-12\">\n      <i className=\"far fa-user\" />\n      &nbsp;\n      <FormattedMessage\n        id=\"contractinfo.account\"\n        defaultMessage={'Account ({accountBalance} ETH)'}\n        values={{ accountBalance: accountBalance.toFixed(2) }}\n      />\n    </div>\n  );\n\n  const accountAddressBlock = (\n    <div className=\"col-12\">\n      {accountAddr}\n    </div>\n  );\n\n  return (\n    <div className=\"row\">\n      {accountBalanceBlock}\n      {accountAddressBlock}\n      {contractBalanceBlock}\n      {contractAddressBlock}\n    </div>\n  );\n}\nContractInfo.propTypes = {\n  accountAddress: string,\n  accountBalance: number.isRequired,\n  contractAddress: string.isRequired,\n  contractBalance: number.isRequired,\n  network: number.isRequired,\n};\nContractInfo.defaultProps = {\n  accountAddress: null,\n};\n\nexport default ContractInfo;\n","import React from 'react';\nimport { number, func } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport ValueSlider from './ValueSlider';\n\nfunction ChanceOfWinning({\n  chances, min, max, updateChances,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>\n        <FormattedMessage\n          id=\"chanceofwinning.chanceofwinning\"\n          defaultMessage=\"Chance of winning\"\n        />\n      </b>\n      <ValueSlider\n        value={chances}\n        min={min}\n        max={max}\n        updateValue={updateChances}\n        addonText=\"&nbsp;%&nbsp;\"\n      />\n    </div>\n  );\n}\nChanceOfWinning.propTypes = {\n  chances: number.isRequired,\n  min: number,\n  max: number,\n  updateChances: func.isRequired,\n};\nChanceOfWinning.defaultProps = {\n  min: 0,\n  max: 100,\n};\n\nexport default ChanceOfWinning;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { number } from 'prop-types';\nimport { getProfit } from '../utils/etheroll-contract';\n\n\nfunction RollUnderRecap({ betSize, value }) {\n  const chances = value - 1;\n  const profit = getProfit(betSize, chances);\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <h3>\n          <FormattedMessage\n            id=\"rollunderrecap.roll-under\"\n            defaultMessage=\"Roll under\"\n          />\n        </h3>\n      </div>\n      <div className=\"col-6\">\n        <h3 className=\"text-right\">{value}</h3>\n      </div>\n      <div className=\"col-6\">\n        <FormattedMessage\n          id=\"rollunderrecap.with-a-wager-of\"\n          defaultMessage=\"With a wager of\"\n        />\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right mb-0\">\n          {betSize.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n      <div className=\"col-6\">\n        <FormattedMessage\n          id=\"rollunderrecap.for-a-profit-of\"\n          defaultMessage=\"For a profit of\"\n        />\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right\">\n          {profit.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n    </div>\n  );\n}\nRollUnderRecap.propTypes = {\n  betSize: number.isRequired,\n  value: number.isRequired,\n};\n\nexport default RollUnderRecap;\n","import React from 'react';\nimport { bool, func, string } from 'prop-types';\n\nconst Button = ({ isDisabled, onClick, text }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-primary btn-lg col-md-3\"\n    disabled={isDisabled}\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\nButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n  text: string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nfunction RollButton({ isDisabled, onClick }) {\n  return <Button text=\"Roll\" isDisabled={isDisabled} onClick={onClick} />;\n}\nRollButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n};\nRollButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default RollButton;\n","import React from 'react';\nimport {\n  arrayOf, func, number, shape,\n} from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\n\nfunction MergedLog({ network, mergedLog }) {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = Number(logBetEvent.returnValues.PlayerNumber);\n  let valueEth = '?';\n  let diceResult = '?';\n  let sign = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    diceResult = Number(logResultEvent.returnValues.DiceResult);\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.returnValues.Value * (10 ** (-18))).toFixed(2);\n    sign = playerWon ? '<' : '>';\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{diceResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          {diceResult}\n          &nbsp;\n          {sign}\n          &nbsp;\n          {playerNumber}\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.wallet\"\n            defaultMessage=\"Wallet:\"\n          />\n          &nbsp;\n          <Address address={logBetEvent.returnValues.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.transaction\"\n            defaultMessage=\"Transaction:\"\n          />\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMergedLog.propTypes = {\n  network: number.isRequired,\n  mergedLog: shape({\n    // TODO: seems completely ignored\n    todo: number,\n  }).isRequired,\n};\n\nfunction TransactionsFilterButtons({ onClick }) {\n  return (\n    <nav className=\"nav\">\n      <button\n        type=\"button\"\n        className=\"btn btn-link active\"\n        onClick={() => onClick('#all-transactions')}\n      >\n        <FormattedMessage\n          id=\"transactions-filter-buttons.all-transactions\"\n          defaultMessage=\"All transactions\"\n        />\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={() => onClick('#my-transactions')}\n      >\n        <FormattedMessage\n          id=\"transactions-filter-buttons.my-transactions\"\n          defaultMessage=\"My transactions\"\n        />\n      </button>\n    </nav>\n  );\n}\nTransactionsFilterButtons.propTypes = {\n  onClick: func.isRequired,\n};\n\nfunction Transactions({ network, onClick, transactions }) {\n  const reversedTransactions = transactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n}\nTransactions.propTypes = {\n  network: number.isRequired,\n  onClick: func.isRequired,\n  transactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React from 'react';\nimport {\n  arrayOf, func, number, shape, string,\n} from 'prop-types';\nimport './css/RollUnder.css';\nimport onRollClick from './BaseGame';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport RollUnderRecap from './RollUnderRecap';\nimport RollButton from './RollButton';\nimport Transactions from './Transactions';\n\n\nfunction RollUnder(props) {\n  const {\n    accountAddress, betSize, chances, contract,\n    filterTransactions, filteredTransactions, minBet, maxBet, minChances, maxChances, network,\n    updateState,\n  } = props;\n  const rollUnder = chances + 1;\n  const onRollClickProps = {\n    accountAddress, rollUnder, contract, betSize,\n  };\n  const rollDisabled = accountAddress === null;\n  return (\n    <div>\n      <form className=\"RollUnder\">\n        <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={updateState('betSize')} />\n        <ChanceOfWinning chances={chances} min={minChances} max={maxChances} updateChances={updateState('chances')} />\n        <RollUnderRecap value={rollUnder} betSize={betSize} />\n        <RollButton isDisabled={rollDisabled} onClick={() => onRollClick(onRollClickProps)} />\n      </form>\n      <Transactions\n        network={network}\n        onClick={transactionsFilter => filterTransactions(transactionsFilter)}\n        transactions={filteredTransactions}\n      />\n    </div>\n  );\n}\nRollUnder.propTypes = {\n  accountAddress: string,\n  betSize: number.isRequired,\n  chances: number.isRequired,\n  contract: shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  }),\n  filterTransactions: func.isRequired,\n  filteredTransactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n  minBet: number.isRequired,\n  maxBet: number.isRequired,\n  minChances: number.isRequired,\n  maxChances: number.isRequired,\n  network: number.isRequired,\n  updateState: func.isRequired,\n};\nRollUnder.defaultProps = {\n  accountAddress: null,\n  contract: null,\n};\n\nexport default RollUnder;\n","import React from 'react';\n\nconst MetaMaskLink = () => (\n  <a\n    href=\"https://metamask.io/\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Meta Mask\n  </a>\n);\n\nexport default MetaMaskLink;\n","import Web3 from 'web3';\n\nconst getWeb3 = new Promise((resolve, reject) => {\n  window.addEventListener('load', async () => {\n    let web3;\n    if (window.ethereum) { // Modern dapp browsers...\n      web3 = new Web3(window.ethereum);\n      try {\n        // Request account access if needed\n        await window.ethereum.enable();\n      } catch (error) {\n        console.error(error);\n      }\n    } else if (window.web3) { // Legacy dapp browsers...\n      web3 = new Web3(window.web3.currentProvider);\n    } else { // Non-dapp browsers...\n      reject(new Error('Non-Ethereum browser detected. Is MetaMask running?'));\n    }\n    const results = { web3 };\n    resolve(results);\n  });\n});\n\n\nexport default getWeb3;\n","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { fromWei } from 'web3-utils';\nimport Alert from './Alert';\nimport CoinFlip from './CoinFlip';\nimport ContractInfo from './ContractInfo';\nimport RollUnder from './RollUnder';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport MetaMaskLink from './MetaMaskLink';\nimport getWeb3 from '../utils/get-web3';\nimport {\n  EtherollContract, Networks, contractAddresses,\n} from '../utils/etheroll-contract';\n\n\nconst showMessage = (classType, message, updateAlertDict) => {\n  const alertDict = { classType, message };\n  updateAlertDict(alertDict);\n};\n\nconst showFetchContractInfoWarning = (showWarningMessage, optionalMessage) => {\n  const defaultMessage = \"Can't fetch contract info.\";\n  const message = (typeof optionalMessage === 'undefined') ? defaultMessage : optionalMessage;\n  showWarningMessage(message);\n};\n\nconst minBetCallback = (showWarningMessage, updateValue) => (error, minBetWei) => {\n  error ? showFetchContractInfoWarning(showWarningMessage) : (\n    updateValue(Number(fromWei(minBetWei, 'ether')))\n  );\n};\n\nconst minNumberCallback = (showWarningMessage, updateValue) => (error, minNumber) => {\n  error ? showFetchContractInfoWarning(showWarningMessage) : updateValue(minNumber - 1);\n};\n\nconst maxNumberCallback = (showWarningMessage, updateValue) => (error, maxNumber) => {\n  error ? showFetchContractInfoWarning(showWarningMessage) : updateValue(maxNumber - 1);\n};\n\nconst getBalanceCallback = (showWarningMessage, updateValue) => (error, balance) => {\n  // error can be null with the balance also null in rare cases\n  (error || balance === null) ? showFetchContractInfoWarning(\"Can't fetch contract balance.\") : (\n    updateValue(Number(fromWei(balance, 'ether')))\n  );\n};\n\nconst getAccountBalanceCallback = (showWarningMessage, updateValue) => (error, balance) => {\n  // error can be null with the balance also null in rare cases\n  (error || balance === null) ? showWarningMessage(\"Can't fetch account balance.\") : (\n    updateValue(Number(fromWei(balance, 'ether')))\n  );\n};\n\nconst getAccountsCallback = (\n  web3, showWarningMessage, updateAccountAddress, updateAccountBalance,\n) => (error, accounts) => {\n  if (error) {\n    const message = \"Can't retrieve accounts.\";\n    showWarningMessage(message);\n  } else {\n    const accountAddress = accounts.length === 0 ? null : accounts[0];\n    if (accountAddress !== null) {\n      web3.eth.getBalance(\n        accountAddress,\n        getAccountBalanceCallback(\n          showWarningMessage,\n          updateAccountBalance,\n        ),\n      );\n    }\n    updateAccountAddress(accountAddress);\n  }\n};\n\nconst filterTransactions = (\n  accountAddress, transactionsFilter, allTransactions,\n  updateFilteredTransactions, updateTransactionsFilter,\n) => {\n  let filteredTransactions = allTransactions.slice();\n  if (transactionsFilter === '#my-transactions') {\n    filteredTransactions = allTransactions.filter(transaction => (\n      transaction.logBetEvent.returnValues.PlayerAddress.toLowerCase()\n      === accountAddress.toLowerCase()\n    ));\n  }\n  updateFilteredTransactions(filteredTransactions);\n  updateTransactionsFilter(transactionsFilter);\n};\n\nconst getTransactions = (\n  contract, accountAddress, transactionsFilter,\n  updateAllTransactions, updateFilteredTransactions, updateTransactionsFilter,\n) => {\n  contract.getMergedTransactionLogs((error, result) => {\n    if (error) {\n      console.log(error);\n    } else {\n      const allTransactions = result;\n      updateAllTransactions(allTransactions);\n      filterTransactions(\n        accountAddress, transactionsFilter, allTransactions,\n        updateFilteredTransactions, updateTransactionsFilter,\n      );\n    }\n  });\n};\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertDict: {},\n      betSize: 0.1,\n      chances: 50,\n      minBet: BetSize.defaultProps.min,\n      maxBet: BetSize.defaultProps.max,\n      minChances: ChanceOfWinning.defaultProps.min,\n      maxChances: ChanceOfWinning.defaultProps.max,\n      accountAddress: null,\n      accountBalance: 0,\n      network: Networks.mainnet,\n      contract: null,\n      contractAddress: contractAddresses[Networks.mainnet],\n      contractBalance: 0,\n      // most recent transaction is last in the array\n      allTransactions: [],\n      filteredTransactions: [],\n      transactionsFilter: '#all-transactions',\n    };\n    this.onWeb3 = this.onWeb3.bind(this);\n    this.updateState = this.updateState.bind(this);\n    this.initWeb3();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.getTransactionsIntervalId);\n  }\n\n  /**\n   * Retrieves web3 and contract info, then sets the following states:\n   * - accountAddress\n   * - accountBalance\n   * - contract\n   * - contractAddress\n   * - contractBalance\n   * - minBet\n   * - maxBet (TODO)\n   * - maxChances\n   * - network\n   */\n  onWeb3(web3) {\n    const getIdCallback = (network) => {\n      const contractAddress = contractAddresses[network];\n      const contract = new EtherollContract(web3, contractAddress);\n      const pullIntervalSeconds = 10 * 1000;\n      const { showWarningMessage, updateState } = this;\n      const { transactionsFilter, accountAddress } = this.state;\n      const getTransactionsAlias = () => getTransactions(\n        contract, accountAddress, transactionsFilter,\n        updateState('allTransactions'), updateState('filteredTransactions'), updateState('transactionsFilter'),\n      );\n      // clearInterval() is in the componentWillUnmount()\n      this.getTransactionsIntervalId = setInterval(\n        () => getTransactionsAlias(), pullIntervalSeconds,\n      );\n      getTransactionsAlias();\n      this.setState({\n        network,\n        contract,\n        contractAddress,\n      });\n      contract.web3Contract.methods.minBet().call(\n        minBetCallback(\n          showWarningMessage, updateState('minBet'),\n        ),\n      );\n      contract.web3Contract.methods.minNumber().call(\n        minNumberCallback(\n          showWarningMessage, updateState('minChances'),\n        ),\n      );\n      contract.web3Contract.methods.maxNumber().call(\n        maxNumberCallback(\n          showWarningMessage, updateState('maxChances'),\n        ),\n      );\n      web3.eth.getBalance(\n        contractAddress,\n        getBalanceCallback(\n          showWarningMessage, updateState('contractBalance'),\n        ),\n      );\n      web3.eth.getAccounts(\n        getAccountsCallback(\n          web3, showWarningMessage, updateState('accountAddress'), updateState('accountBalance'),\n        ),\n      );\n    };\n    web3.eth.net.getId().then(getIdCallback);\n  }\n\n  initWeb3() {\n    const getWeb3CallbackOk = ({ web3 }) => {\n      this.onWeb3(web3);\n    };\n    const getWeb3CallbackError = () => {\n      const classType = 'danger';\n      const message = (\n        <Fragment>\n          <FormattedMessage\n            id=\"container.no-account-connected\"\n            defaultMessage={'No account connected, connect with a Web3-compatible wallet like {metamaskLink}'}\n            values={{ metamaskLink: <MetaMaskLink /> }}\n          />\n        </Fragment>\n      );\n      showMessage(classType, message, this.updateState('alertDict'));\n    };\n    getWeb3.then(getWeb3CallbackOk, getWeb3CallbackError);\n  }\n\n  showWarningMessage(message) {\n    const classType = 'warning';\n    showMessage(classType, message, this.updateState('alertDict'));\n  }\n\n  updateState(key) {\n    return (value) => {\n      this.setState({ [key]: value });\n    };\n  }\n\n  render() {\n    const {\n      alertDict, accountAddress, accountBalance, allTransactions, betSize, chances, contract,\n      contractAddress, contractBalance, filteredTransactions, maxBet, minBet, maxChances,\n      minChances, network, transactionsFilter,\n    } = this.state;\n\n    const gameProps = {\n      accountAddress,\n      betSize,\n      chances,\n      contract,\n      filteredTransactions,\n      transactionsFilter,\n      maxBet,\n      minBet,\n      maxChances,\n      minChances,\n      network,\n      updateState: this.updateState,\n      filterTransactions: filter => filterTransactions(\n        accountAddress, filter, allTransactions,\n        this.updateState('filteredTransactions'), this.updateState('transactionsFilter'),\n      ),\n    };\n    const contractProps = {\n      accountAddress, accountBalance, contractAddress, contractBalance, network,\n    };\n\n    return (\n      <div className=\"container\">\n        <Alert classType={alertDict.classType} message={alertDict.message} />\n        <ContractInfo {...contractProps} />\n        <h2>\n          <FormattedMessage\n            id=\"container.place-your-bet\"\n            defaultMessage=\"Place your bet\"\n            description=\"Place your bet title\"\n          />\n        </h2>\n        <Route path=\"/\" exact render={() => <RollUnder {...gameProps} />} />\n        <Route path=\"/coin-flip\" render={() => <CoinFlip {...gameProps} />} />\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport Headers from './components/Headers';\nimport Footers from './components/Footers';\nimport Container from './components/Container';\n\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      <Headers />\n      <Container />\n      <Footers />\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport messagesEs from './translations/es.json';\nimport messagesFr from './translations/fr.json';\nimport setupGA from './utils/analytics';\nimport setupSentry from './utils/sentry';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nsetupGA();\nsetupSentry();\n\nconst messages = {\n  en: null,\n  es: messagesEs,\n  fr: messagesFr,\n};\n// language without region code\nconst language = navigator.language.split(/[-_]/)[0];\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages[language]}>\n    <App />\n  </IntlProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}