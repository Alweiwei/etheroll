{"version":3,"sources":["utils/analytics.js","utils/sentry.js","components/Headers.jsx","components/Footers.jsx","components/Alert.jsx","utils/get-web3.js","components/MetaMaskLink.jsx","utils/etheroll-abi.js","utils/etheroll-contract.js","components/BaseGame.jsx","components/ValueSlider.jsx","components/BetSize.jsx","components/ChanceOfWinning.jsx","components/Address.jsx","components/ContractInfo.jsx","components/FlipButton.jsx","components/CoinFlipRecap.jsx","components/Transaction.jsx","components/CoinFlipTransactions.jsx","components/CoinFlip.jsx","components/RollUnderRecap.jsx","components/RollButton.jsx","components/Transactions.jsx","components/RollUnder.jsx","components/Container.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["setupGA","ReactGA","initialize","process","pageview","window","location","pathname","search","setupSentry","Sentry","dsn","release","version","Logo","react_default","a","createElement","className","href","HamburgerBtn","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavSections","id","NavLink","to","exact","activeClassName","target","rel","Headers","Headers_Logo","Headers_HamburgerBtn","Headers_NavSections","Footers","Alert","_ref","classType","message","concat","role","defaultProps","getWeb3","Promise","resolve","reject","addEventListener","web3","Web3","currentProvider","Error","MetaMaskLink","etherollAbi","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","SolidityEvent","require","Networks","Object","freeze","mainnet","morden","ropsten","contractAddresses","_contractAddresses","defineProperty","etherscanUrls","_etherscanUrls","getProfit","betSize","chances","profit","chancesLoss","payout","EtherollContract","address","classCallCheck","this","network","abi","web3Contract","eth","contract","at","_this","events","forEach","definition","signatures","getSolidityEvents","keys","eventName","signature","eventSignature","matchingEvent","filter","key","replace","_evnt","evnt","objectSpread","getSolidityEvent","topics","decode","callback","_this2","getBlockNumber","error","result","console","log","options","fromBlock","toBlock","get","_this3","watch","_this4","getTransactionLogs","decodedEvents","map","decodeEvent","logBetEvents","event","logResultEvents","mergedLogs","mergeLogs","logResultEventsDict","reduce","dict","logResultEvent","args","BetID","logBetEvent","BaseGame","props","possibleConstructorReturn","getPrototypeOf","call","state","_this$state","accountAddress","rollUnder","value","toWei","toString","playerRollDice","from","JSON","stringify","setState","getMergedTransactionLogs","allTransactions","transactionsFilter","filterTransactions","_this$props","showMessage","showWarningMessage","then","results","contractAddress","getTransactionsIntervalId","setInterval","getTransactions","Number","minBet","minBetWei","showFetchContractInfoWarning","fromWei","toNumber","minNumber","minChances","maxNumber","maxChances","getBalance","balance","contractBalance","getAccounts","accounts","length","err","accountBalance","Fragment","components_MetaMaskLink","optionalMessage","_this$state2","filteredTransactions","slice","transaction","PlayerAddress","toLowerCase","React","Component","ValueSlider","updateValue","step","min","max","addonText","toFixedDigits","addon","formattedValue","toFixed","onChange","e","Slider_default","BetSize","updateBetSize","components_ValueSlider","ChanceOfWinning","updateChances","Address","url","ContractInfo","contractAddr","components_Address","contractBalanceBlock","contractAddressBlock","accountAddr","accountBalanceBlock","accountAddressBlock","Button","isDisabled","onClick","text","disabled","FlipButton","_ref2","CoinFlipRecap","Transaction","hash","MergedLog","mergedLog","playerNumber","PlayerNumber","valueEth","coinResult","alertClass","diceResult","DiceResult","playerWon","Value","Math","pow","components_Transaction","transactionHash","TransactionsFilterButtons","Transactions","_ref3","transactionsElems","transactions","reverse","CoinFlip","maxBet","clearInterval","rollDisabled","components_ContractInfo","components_BetSize","updateState","components_CoinFlipRecap","components_FlipButton","onRollClick","CoinFlipTransactions","propTypes","RollUnderRecap","RollButton","RollButton_Button","sign","Transactions_MergedLog","Transactions_TransactionsFilterButtons","RollUnder","components_ChanceOfWinning","components_RollUnderRecap","components_RollButton","components_Transactions","Container","alertDict","components_Alert","Route","path","render","components_RollUnder","components_CoinFlip","App","HashRouter","components_Headers","components_Container","components_Footers","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.865fc492.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\n\nfunction fireTracking() {\n  // ReactGA.pageview(window.location.hash);\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nfunction setupGA() {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  ReactGA.initialize(process.env.REACT_APP_ANALYTICS_ID);\n  fireTracking();\n}\n\nexport default setupGA;\n","import * as Sentry from '@sentry/browser';\nimport { version } from '../../package.json';\n\nfunction setupSentry() {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    release: version,\n  });\n}\n\nexport default setupSentry;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Logo = () => (\n  <a className=\"navbar-brand\" href=\"/\">\n    <i className=\"fas fa-dice-d20\" />\n    {' Etheroll'}\n  </a>\n);\n\nconst HamburgerBtn = () => (\n  <button\n    className=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarCollapse\"\n    aria-controls=\"navbarCollapse\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span className=\"navbar-toggler-icon\" />\n  </button>\n);\n\nconst NavSections = () => (\n  <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/\" exact activeClassName=\"active\">\n          <i className=\"fas fa-home\" />\n          {' Home'}\n          <span className=\"sr-only\">(current)</span>\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/coin-flip\" activeClassName=\"active\">\n          <i className=\"fas fa-coins\" />\n          {' Flip a coin'}\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          className=\"nav-link\"\n          href=\"https://github.com/AndreMiras/etheroll\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fab fa-github-alt\" />\n          {' About'}\n        </a>\n      </li>\n    </ul>\n  </div>\n);\n\nconst Headers = () => (\n  <header>\n    <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <Logo />\n      <HamburgerBtn />\n      <NavSections />\n    </nav>\n  </header>\n);\n\nexport default Headers;\n","import React from 'react';\nimport './css/Footers.css';\nimport { version } from '../../package.json';\n\nfunction Footers() {\n  return (\n    <footer className=\"Footers d-none d-md-block\">\n      <div className=\"container\">\n        <span className=\"text-muted\">\n          Copyright (c) 2018 Andre Miras - Etheroll v\n          {version}\n        </span>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footers;\n","import React from 'react';\nimport { string, node, oneOfType } from 'prop-types';\n\nfunction Alert({ classType, message }) {\n  if (!message) {\n    return null;\n  }\n  return (\n    <div className={`alert alert-${classType}`} role=\"alert\">\n      {message}\n    </div>\n  );\n}\nAlert.propTypes = {\n  classType: string,\n  message: oneOfType([string, node]),\n};\nAlert.defaultProps = {\n  classType: 'primary',\n  message: null,\n};\n\nexport default Alert;\n","import Web3 from 'web3';\n\nconst getWeb3 = new Promise((resolve, reject) => {\n  // wait for loading completion before loading web3, to be sure it's\n  // already injected\n  window.addEventListener('load', () => {\n    // checking if Web3 has been injected by the browser MetaMask\n    if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n      // Use MetaMask's provider.\n      const web3 = new Web3(window.web3.currentProvider);\n      const results = { web3 };\n      resolve(results);\n    } else {\n      // user is not running MetaMask?\n      reject(new Error('Is MetaMask running?'));\n    }\n  });\n});\n\n\nexport default getWeb3;\n","import React from 'react';\n\nconst MetaMaskLink = () => (\n  <a\n    href=\"https://metamask.io/\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Meta Mask\n  </a>\n);\n\nexport default MetaMaskLink;\n","const etherollAbi = [{\n  constant: false, inputs: [{ name: 'newCallbackGasPrice', type: 'uint256' }], name: 'ownerSetCallbackGasPrice', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWon', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitAsPercentOfHouse', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newHouseEdge', type: 'uint256' }], name: 'ownerSetHouseEdge', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'payoutsPaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newTreasury', type: 'address' }], name: 'ownerSetTreasury', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }, { name: 'proof', type: 'bytes' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [{ name: 'addressToCheck', type: 'address' }], name: 'playerGetPendingTxByAddress', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newContractBalanceInWei', type: 'uint256' }], name: 'ownerUpdateContractBalance', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newPayoutStatus', type: 'bool' }], name: 'ownerPausePayouts', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newOwner', type: 'address' }], name: 'ownerChangeOwner', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMaxProfitAsPercent', type: 'uint256' }], name: 'ownerSetMaxProfitAsPercentOfHouse', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'treasury', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWagered', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMinimumBet', type: 'uint256' }], name: 'ownerSetMinBet', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newStatus', type: 'bool' }], name: 'ownerPauseGame', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gasForOraclize', outputs: [{ name: '', type: 'uint32' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'sendTo', type: 'address' }, { name: 'amount', type: 'uint256' }], name: 'ownerTransferEther', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'contractBalance', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'owner', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minBet', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'playerWithdrawPendingTransactions', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfit', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalBets', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'randomQueryID', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gamePaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'originalPlayerBetId', type: 'bytes32' }, { name: 'sendTo', type: 'address' }, { name: 'originalPlayerProfit', type: 'uint256' }, { name: 'originalPlayerBetValue', type: 'uint256' }], name: 'ownerRefundPlayer', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newSafeGasToOraclize', type: 'uint32' }], name: 'ownerSetOraclizeSafeGas', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'ownerkill', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdge', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'rollUnder', type: 'uint256' }], name: 'playerRollDice', outputs: [], payable: true, stateMutability: 'payable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdgeDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxPendingPayouts', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  inputs: [], payable: false, stateMutability: 'nonpayable', type: 'constructor',\n}, { payable: true, stateMutability: 'payable', type: 'fallback' }, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RewardValue', type: 'uint256' }, { indexed: false, name: 'ProfitValue', type: 'uint256' }, { indexed: false, name: 'BetValue', type: 'uint256' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'RandomQueryID', type: 'uint256' }], name: 'LogBet', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'ResultSerialNumber', type: 'uint256' }, { indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'DiceResult', type: 'uint256' }, { indexed: false, name: 'Value', type: 'uint256' }, { indexed: false, name: 'Status', type: 'int256' }, { indexed: false, name: 'Proof', type: 'bytes' }], name: 'LogResult', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RefundValue', type: 'uint256' }], name: 'LogRefund', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'SentToAddress', type: 'address' }, { indexed: true, name: 'AmountTransferred', type: 'uint256' }], name: 'LogOwnerTransfer', type: 'event',\n}];\n\n\nexport default etherollAbi;\n","import etherollAbi from './etheroll-abi';\n\n// TODO require vs import\nconst SolidityEvent = require('web3/lib/web3/event.js');\n\nconst Networks = Object.freeze({ mainnet: 1, morden: 2, ropsten: 3 });\n\nconst contractAddresses = {\n  [Networks.mainnet]: '0xA52e014B3f5Cc48287c2D483A3E026C32cc76E6d',\n  [Networks.ropsten]: '0xe12c6dEb59f37011d2D9FdeC77A6f1A8f3B8B1e8',\n};\n\nconst etherscanUrls = {\n  [Networks.mainnet]: 'https://etherscan.io',\n  [Networks.ropsten]: 'https://ropsten.etherscan.io',\n};\n\nfunction getProfit(betSize, chances) {\n  let profit = 0;\n  const houseEdge = 1 / 100.0;\n  const chancesLoss = 100.0 - chances;\n  if (chances !== 0 && chancesLoss !== 0) {\n    let payout = ((chancesLoss / chances) * betSize) + betSize;\n    payout *= (1 - houseEdge);\n    profit = payout - betSize;\n  }\n  return profit;\n}\n\nclass EtherollContract {\n  constructor(web3, address) {\n    this.web3 = web3;\n    this.address = address;\n    if (typeof address === 'undefined') {\n      this.address = contractAddresses[web3.version.network];\n    }\n    this.abi = etherollAbi;\n    this.web3Contract = web3.eth.contract(etherollAbi).at(this.address);\n  }\n\n  getSolidityEvents() {\n    const events = {};\n    this.abi.forEach((definition) => {\n      if (definition.type !== 'event') {\n        return;\n      }\n      events[definition.name] = new SolidityEvent(this.web3, definition, this.address);\n    });\n    return events;\n  }\n\n  // Returns sha3 signature of events, e.g.\n  // {'LogResult': '0x6883...5c88', 'LogBet': '0x1cb5...75c4'}\n  getEventSignatures() {\n    const signatures = {};\n    const events = this.getSolidityEvents();\n    Object.keys(events).forEach((eventName) => {\n      signatures[eventName] = events[eventName].signature();\n    });\n    return signatures;\n  }\n\n  getSolidityEvent(eventSignature) {\n    const events = this.getSolidityEvents();\n    const matchingEvent = Object.keys(events).filter(key => (\n      events[key].signature() === eventSignature.replace('0x', '')\n    ));\n    return events[matchingEvent];\n  }\n\n  decodeEvent(_evnt) {\n    // SolidityEvent.decode() seems to be mutating the object, hence the copy\n    const evnt = { ..._evnt };\n    const solidityEvent = this.getSolidityEvent(evnt.topics[0]);\n    const decoded = solidityEvent.decode(evnt);\n    return decoded;\n  }\n\n  // callback(error, result)\n  getTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const lastBlock = result;\n        const fromBlock = lastBlock - 100;\n        const toBlock = lastBlock;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        const filter = this.web3.eth.filter(options);\n        filter.get(callback);\n      }\n    });\n  }\n\n  // callback(error, result)\n  watchTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const lastBlock = result;\n        const fromBlock = lastBlock - 100;\n        const toBlock = lastBlock;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        const filter = this.web3.eth.filter(options);\n        filter.watch(callback);\n      }\n    });\n  }\n\n  // Merges bet logs (LogBet) with bet results logs (LogResult).\n  static mergeLogs(logBetEvents, logResultEvents) {\n    // per bet ID dictionary\n    const logResultEventsDict = logResultEvents.reduce((dict, logResultEvent) => ({\n      ...dict,\n      [logResultEvent.args.BetID]: logResultEvent,\n    }), {});\n    return logBetEvents.map(logBetEvent => ({\n      logBetEvent,\n      logResultEvent: logResultEventsDict[logBetEvent.args.BetID],\n    }));\n  }\n\n  // callback(error, result)\n  getMergedTransactionLogs(callback) {\n    this.getTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const decodedEvents = result.map(evnt => this.decodeEvent(evnt));\n        const logBetEvents = decodedEvents.filter(evnt => (\n          evnt.event === 'LogBet'\n        ));\n        const logResultEvents = decodedEvents.filter(evnt => (\n          evnt.event === 'LogResult'\n        ));\n        const mergedLogs = EtherollContract.mergeLogs(logBetEvents, logResultEvents);\n        callback(error, mergedLogs);\n      }\n    });\n  }\n}\n\n\nexport {\n  EtherollContract, etherscanUrls, getProfit, Networks, contractAddresses,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport getWeb3 from '../utils/get-web3';\nimport MetaMaskLink from './MetaMaskLink';\nimport {\n  EtherollContract,\n} from '../utils/etheroll-contract';\n\n\nclass BaseGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  onRollClick() {\n    const {\n      accountAddress, chances, contract, betSize, web3,\n    } = this.state;\n    const rollUnder = chances + 1;\n    const value = web3.toWei(betSize.toString(), 'ether');\n    contract.web3Contract.playerRollDice(\n      rollUnder, { from: accountAddress, value },\n      (error, result) => {\n        if (error) {\n          console.error(error);\n        } else {\n          console.log(JSON.stringify(result));\n        }\n      },\n    );\n  }\n\n  getTransactions(contract, setState) {\n    contract.getMergedTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const allTransactions = result;\n        // TODO: should be a prop via composition rather than inheritance\n        const { transactionsFilter } = this.state;\n        setState({ allTransactions });\n        this.filterTransactions(transactionsFilter, setState);\n      }\n    });\n  }\n\n  /**\n   * Retrieves web3 and contract info, then sets the following states:\n   * - accountAddress\n   * - accountBalance\n   * - contract\n   * - contractAddress\n   * - contractBalance\n   * - minBet\n   * - maxBet\n   * - maxChances\n   * - network\n   * - web3\n   */\n  getWeb3(setState) {\n    const { showMessage, showWarningMessage } = this.props;\n    getWeb3.then((results) => {\n      const { web3 } = results;\n      const contract = new EtherollContract(web3);\n      const contractAddress = contract.address;\n      const pullIntervalSeconds = 10 * 1000;\n      // clearInterval() is in the componentWillUnmount()\n      this.getTransactionsIntervalId = setInterval((\n      ) => this.getTransactions(contract, setState), pullIntervalSeconds);\n      this.getTransactions(contract, setState);\n      setState({\n        web3,\n        network: Number(web3.version.network),\n        contract,\n        contractAddress,\n      });\n      contract.web3Contract.minBet((error, minBetWei) => {\n        if (error) {\n          this.showFetchContractInfoWarning();\n        } else {\n          const minBet = web3.fromWei(minBetWei, 'ether').toNumber();\n          setState({ minBet });\n        }\n      });\n      contract.web3Contract.minNumber((error, minNumber) => {\n        if (error) {\n          this.showFetchContractInfoWarning();\n        }\n        const minChances = minNumber - 1;\n        setState({ minChances });\n      });\n      contract.web3Contract.maxNumber((error, maxNumber) => {\n        if (error) {\n          this.showFetchContractInfoWarning();\n        }\n        const maxChances = maxNumber - 1;\n        setState({ maxChances });\n      });\n      web3.eth.getBalance(contractAddress, (error, balance) => {\n        // error can be null with the balance also null in rare cases\n        if (error || balance === null) {\n          const message = \"Can't fetch contract balance.\";\n          this.showFetchContractInfoWarning(message);\n        } else {\n          const contractBalance = web3.fromWei(balance, 'ether').toNumber();\n          setState({ contractBalance });\n        }\n      });\n      web3.eth.getAccounts((error, accounts) => {\n        if (error) {\n          const message = \"Can't retrieve accounts.\";\n          showWarningMessage(message);\n        } else {\n          const accountAddress = accounts.length === 0 ? null : accounts[0];\n          if (accountAddress !== null) {\n            web3.eth.getBalance(accountAddress, (err, balance) => {\n              // error can be null with the balance also null in rare cases\n              if (err || balance === null) {\n                const message = \"Can't fetch account balance.\";\n                showWarningMessage(message);\n              } else {\n                const accountBalance = web3.fromWei(balance, 'ether').toNumber();\n                setState({ accountBalance });\n              }\n            });\n          }\n          setState({ accountAddress });\n        }\n      });\n    }, () => {\n      const classType = 'danger';\n      const message = (<>\n        {'No account connected, connect with a Web3-compatible wallet like '}\n        <MetaMaskLink />\n      </>);\n      showMessage(classType, message);\n    });\n  }\n\n  showFetchContractInfoWarning(optionalMessage) {\n    const { showWarningMessage } = this.props;\n    const defaultMessage = \"Can't fetch contract info.\";\n    const message = (typeof optionalMessage === 'undefined') ? defaultMessage : optionalMessage;\n    showWarningMessage(message);\n  }\n\n  filterTransactions(transactionsFilter, setState) {\n    // TODO: should be a prop via composition rather than inheritance\n    const { accountAddress, allTransactions } = this.state;\n    let filteredTransactions = allTransactions.slice();\n    if (transactionsFilter === '#my-transactions') {\n      filteredTransactions = allTransactions.filter(transaction => (\n        transaction.logBetEvent.args.PlayerAddress.toLowerCase() === accountAddress.toLowerCase()\n      ));\n    }\n    setState({ filteredTransactions, transactionsFilter });\n  }\n\n  updateState(key) {\n    return (value) => {\n      this.setState({ [key]: value });\n    };\n  }\n}\nBaseGame.propTypes = {\n  showMessage: PropTypes.func.isRequired,\n  showWarningMessage: PropTypes.func.isRequired,\n};\n\nexport default BaseGame;\n","import React from 'react';\nimport Slider from 'rc-slider/lib/Slider';\nimport PropTypes from 'prop-types';\nimport 'rc-slider/assets/index.css';\n\n\nfunction ValueSlider({\n  value, updateValue, step, min, max, addonText, toFixedDigits,\n}) {\n  let addon = null;\n  if (addonText !== null) {\n    addon = (\n      <div className=\"input-group-append\">\n        <span className=\"input-group-text text-monospace\">{addonText}</span>\n      </div>\n    );\n  }\n  const formattedValue = toFixedDigits === null ? value : value.toFixed(toFixedDigits);\n  return (\n    <div className=\"row\">\n      <div className=\"input-group col-sm-3 col-lg-2\">\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          onChange={e => updateValue(Number(e.target.value))}\n          value={formattedValue}\n        />\n        {addon}\n      </div>\n      <div className=\"col\">\n        <Slider onChange={updateValue} value={value} step={step} min={min} max={max} />\n      </div>\n    </div>\n  );\n}\nValueSlider.propTypes = {\n  value: PropTypes.number.isRequired,\n  updateValue: PropTypes.func.isRequired,\n  step: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  addonText: PropTypes.string,\n  toFixedDigits: PropTypes.number,\n};\nValueSlider.defaultProps = {\n  step: 1,\n  min: 0,\n  max: 100,\n  addonText: null,\n  toFixedDigits: null,\n};\n\nexport default ValueSlider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ValueSlider from './ValueSlider';\n\nfunction BetSize({\n  betSize, min, max, updateBetSize,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>Bet size</b>\n      <ValueSlider value={betSize} updateValue={updateBetSize} step={0.05} min={min} max={max} addonText=\"ETH\" toFixedDigits={2} />\n    </div>\n  );\n}\nBetSize.propTypes = {\n  betSize: PropTypes.number.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  updateBetSize: PropTypes.func.isRequired,\n};\nBetSize.defaultProps = {\n  min: 0,\n  max: 10,\n};\n\nexport default BetSize;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ValueSlider from './ValueSlider';\n\nfunction ChanceOfWinning({\n  chances, min, max, updateChances,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>Chance of winning</b>\n      <ValueSlider value={chances} min={min} max={max} updateValue={updateChances} addonText=\"&nbsp;%&nbsp;\" />\n    </div>\n  );\n}\nChanceOfWinning.propTypes = {\n  chances: PropTypes.number.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  updateChances: PropTypes.func.isRequired,\n};\nChanceOfWinning.defaultProps = {\n  min: 0,\n  max: 100,\n};\n\nexport default ChanceOfWinning;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Address({ address, network }) {\n  const url = `${etherscanUrls[network]}/address/${address}`;\n  return <a href={url} className=\"text-monospace\">{address}</a>;\n}\nAddress.propTypes = {\n  address: PropTypes.string.isRequired,\n  network: PropTypes.number.isRequired,\n};\n\nexport default Address;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Address from './Address';\n\nfunction ContractInfo({\n  accountAddress, accountBalance, contractAddress, contractBalance, network,\n}) {\n  const contractAddr = <Address network={network} address={contractAddress} />;\n  const contractBalanceBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      <i className=\"far fa-file-code\" />\n      &nbsp;Contract&nbsp;(\n      {contractBalance.toFixed(2)}\n      &nbsp;ETH)\n    </div>\n  );\n  const contractAddressBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      {contractAddr}\n    </div>\n  );\n  const accountAddr = (accountAddress !== null)\n    ? <Address network={network} address={accountAddress} />\n    : <span>Not connected, please login to MetaMask</span>;\n  const accountBalanceBlock = (\n    <div className=\"col-lg-12\">\n      <i className=\"far fa-user\" />\n      &nbsp;Account&nbsp;(\n      {accountBalance.toFixed(2)}\n      &nbsp;ETH)\n    </div>\n  );\n  const accountAddressBlock = (\n    <div className=\"col-12\">\n      {accountAddr}\n    </div>\n  );\n  return (\n    <div className=\"row\">\n      {accountBalanceBlock}\n      {accountAddressBlock}\n      {contractBalanceBlock}\n      {contractAddressBlock}\n    </div>\n  );\n}\nContractInfo.propTypes = {\n  accountAddress: PropTypes.string,\n  accountBalance: PropTypes.number.isRequired,\n  contractAddress: PropTypes.string.isRequired,\n  contractBalance: PropTypes.number.isRequired,\n  network: PropTypes.number.isRequired,\n};\nContractInfo.defaultProps = {\n  accountAddress: null,\n};\n\nexport default ContractInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button({ isDisabled, onClick, text }) {\n  return (\n    <button type=\"button\" className=\"btn btn-primary btn-lg col-md-3\" disabled={isDisabled} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\nButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nfunction FlipButton({ isDisabled, onClick }) {\n  return <Button text=\"Flip Head\" isDisabled={isDisabled} onClick={onClick} />;\n}\nFlipButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\nFlipButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default FlipButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getProfit } from '../utils/etheroll-contract';\n\n\nfunction CoinFlipRecap({ betSize }) {\n  const chances = 50;\n  const profit = getProfit(betSize, chances);\n  return (\n    <p>\n      {'Flip Head with a wager of '}\n      {betSize}\n      {' for a profit of '}\n      {profit.toFixed(2)}\n    </p>\n  );\n}\nCoinFlipRecap.propTypes = {\n  betSize: PropTypes.number.isRequired,\n};\n\nexport default CoinFlipRecap;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Transaction({ hash, network }) {\n  const url = `${etherscanUrls[network]}/tx/${hash}`;\n  return <a href={url}>{hash}</a>;\n}\nTransaction.propTypes = {\n  hash: PropTypes.string.isRequired,\n  network: PropTypes.number.isRequired,\n};\n\nexport default Transaction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\n\nfunction MergedLog({ network, mergedLog }) {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = logBetEvent.args.PlayerNumber.toNumber();\n  // const playerSide = 'Head';\n  let valueEth = '?';\n  let coinResult = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    const diceResult = logResultEvent.args.DiceResult.toNumber();\n    coinResult = diceResult < 51 ? 'Head' : 'Tail';\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.args.Value * (10 ** (-18))).toFixed(2);\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{coinResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          Wallet:\n          &nbsp;\n          <Address address={logBetEvent.args.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          Transaction:\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMergedLog.propTypes = {\n  network: PropTypes.number.isRequired,\n  mergedLog: PropTypes.shape({\n    // TODO: seems completely ignored\n    todo: PropTypes.number,\n  }).isRequired,\n};\n\nfunction TransactionsFilterButtons({ onClick }) {\n  return (\n    <nav className=\"nav\">\n      <button\n        type=\"button\"\n        className=\"btn btn-link active\"\n        onClick={() => onClick('#all-transactions')}\n      >\n          All transactions\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={() => onClick('#my-transactions')}\n      >\n          My transactions\n      </button>\n    </nav>\n  );\n}\nTransactionsFilterButtons.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nfunction Transactions({ network, onClick, transactions }) {\n  const coinflipTransactions = transactions.filter(transaction => (\n    transaction.logBetEvent.args.PlayerNumber.toNumber() === 51\n  ));\n  const reversedTransactions = coinflipTransactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n}\nTransactions.propTypes = {\n  network: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: PropTypes.number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React from 'react';\nimport BaseGame from './BaseGame';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport ContractInfo from './ContractInfo';\nimport FlipButton from './FlipButton';\nimport CoinFlipRecap from './CoinFlipRecap';\nimport CoinFlipTransactions from './CoinFlipTransactions';\nimport {\n  Networks, contractAddresses,\n} from '../utils/etheroll-contract';\n\n\nclass CoinFlip extends BaseGame {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountBalance: 0,\n      betSize: 0.1,\n      chances: 50,\n      contractAddress: contractAddresses[Networks.mainnet],\n      contractBalance: 0,\n      minBet: BetSize.defaultProps.min,\n      maxBet: BetSize.defaultProps.max,\n      // TODO: merge with RollUnder\n      network: Networks.mainnet,\n      minChances: ChanceOfWinning.defaultProps.min,\n      maxChances: ChanceOfWinning.defaultProps.max,\n      filteredTransactions: [],\n      transactionsFilter: '#all-transactions',\n    };\n  }\n\n  componentDidMount() {\n    const setState = dict => this.setState(dict);\n    this.getWeb3(setState);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.getTransactionsIntervalId);\n  }\n\n  render() {\n    const {\n      betSize, accountAddress, accountBalance, contractAddress, contractBalance,\n      filteredTransactions, minBet, maxBet, network,\n    } = this.state;\n    const setState = dict => this.setState(dict);\n    const rollDisabled = accountAddress === null;\n    return (\n      <>\n        <ContractInfo\n          accountAddress={accountAddress}\n          accountBalance={accountBalance}\n          contractAddress={contractAddress}\n          contractBalance={contractBalance}\n          network={network}\n        />\n        <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={this.updateState('betSize')} />\n        <CoinFlipRecap betSize={betSize} />\n        <FlipButton isDisabled={rollDisabled} onClick={() => this.onRollClick()} />\n        <CoinFlipTransactions\n          network={network}\n          onClick={transactionsFilter => this.filterTransactions(transactionsFilter, setState)}\n          transactions={filteredTransactions}\n        />\n      </>\n    );\n  }\n}\nCoinFlip.propTypes = BaseGame.propTypes;\n\nexport default CoinFlip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getProfit } from '../utils/etheroll-contract';\n\n\nfunction RollUnderRecap({ betSize, value }) {\n  const chances = value - 1;\n  const profit = getProfit(betSize, chances);\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <h3>Roll under</h3>\n      </div>\n      <div className=\"col-6\">\n        <h3 className=\"text-right\">{value}</h3>\n      </div>\n      <div className=\"col-6\">\n        With a wager of\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right mb-0\">\n          {betSize.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n      <div className=\"col-6\">\n        For a profit of\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right\">\n          {profit.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n    </div>\n  );\n}\nRollUnderRecap.propTypes = {\n  betSize: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default RollUnderRecap;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button({ isDisabled, onClick, text }) {\n  return (\n    <button type=\"button\" className=\"btn btn-primary btn-lg col-md-3\" disabled={isDisabled} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\nButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nfunction RollButton({ isDisabled, onClick }) {\n  return <Button text=\"Roll\" isDisabled={isDisabled} onClick={onClick} />;\n}\nRollButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\nRollButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default RollButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\n\nfunction MergedLog({ network, mergedLog }) {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = logBetEvent.args.PlayerNumber.toNumber();\n  let valueEth = '?';\n  let diceResult = '?';\n  let sign = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    diceResult = logResultEvent.args.DiceResult.toNumber();\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.args.Value * (10 ** (-18))).toFixed(2);\n    sign = playerWon ? '<' : '>';\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{diceResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          {diceResult}\n          &nbsp;\n          {sign}\n          &nbsp;\n          {playerNumber}\n        </div>\n        <div className=\"w-100\">\n          Wallet:\n          &nbsp;\n          <Address address={logBetEvent.args.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          Transaction:\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMergedLog.propTypes = {\n  network: PropTypes.number.isRequired,\n  mergedLog: PropTypes.shape({\n    // TODO: seems completely ignored\n    todo: PropTypes.number,\n  }).isRequired,\n};\n\nfunction TransactionsFilterButtons({ onClick }) {\n  return (\n    <nav className=\"nav\">\n      <button\n        type=\"button\"\n        className=\"btn btn-link active\"\n        onClick={() => onClick('#all-transactions')}\n      >\n          All transactions\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={() => onClick('#my-transactions')}\n      >\n          My transactions\n      </button>\n    </nav>\n  );\n}\nTransactionsFilterButtons.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nfunction Transactions({ network, onClick, transactions }) {\n  const reversedTransactions = transactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n}\nTransactions.propTypes = {\n  network: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: PropTypes.number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React from 'react';\nimport './css/RollUnder.css';\nimport BaseGame from './BaseGame';\nimport ContractInfo from './ContractInfo';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport RollUnderRecap from './RollUnderRecap';\nimport RollButton from './RollButton';\nimport Transactions from './Transactions';\nimport {\n  Networks, contractAddresses,\n} from '../utils/etheroll-contract';\n\n\nclass RollUnder extends BaseGame {\n  constructor(props) {\n    super(props);\n    this.state = {\n      betSize: 0.1,\n      chances: 50,\n      minBet: BetSize.defaultProps.min,\n      maxBet: BetSize.defaultProps.max,\n      minChances: ChanceOfWinning.defaultProps.min,\n      maxChances: ChanceOfWinning.defaultProps.max,\n      accountAddress: null,\n      accountBalance: 0,\n      web3: null,\n      network: Networks.mainnet,\n      contract: null,\n      contractAddress: contractAddresses[Networks.mainnet],\n      contractBalance: 0,\n      // most recent transaction is last in the array\n      allTransactions: [],\n      filteredTransactions: [],\n      transactionsFilter: '#all-transactions',\n    };\n  }\n\n  componentDidMount() {\n    const setState = dict => this.setState(dict);\n    this.getWeb3(setState);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.getTransactionsIntervalId);\n  }\n\n  render() {\n    const {\n      accountAddress, accountBalance, betSize, chances, contractAddress,\n      contractBalance, filteredTransactions, minBet, maxBet, minChances, maxChances, network,\n    } = this.state;\n    const setState = dict => this.setState(dict);\n    const rollUnder = chances + 1;\n    const rollDisabled = accountAddress === null;\n    return (\n      <div>\n        <ContractInfo\n          accountAddress={accountAddress}\n          accountBalance={accountBalance}\n          contractAddress={contractAddress}\n          contractBalance={contractBalance}\n          network={network}\n        />\n        <form className=\"RollUnder\">\n          <h2>Place your bet</h2>\n          <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={this.updateState('betSize')} />\n          <ChanceOfWinning chances={chances} min={minChances} max={maxChances} updateChances={this.updateState('chances')} />\n          <RollUnderRecap value={rollUnder} betSize={betSize} />\n          <RollButton isDisabled={rollDisabled} onClick={() => this.onRollClick()} />\n        </form>\n        <Transactions\n          network={network}\n          onClick={transactionsFilter => this.filterTransactions(transactionsFilter, setState)}\n          transactions={filteredTransactions}\n        />\n      </div>\n    );\n  }\n}\nRollUnder.propTypes = BaseGame.propTypes;\n\nexport default RollUnder;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Alert from './Alert';\nimport CoinFlip from './CoinFlip';\nimport RollUnder from './RollUnder';\n\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertDict: {},\n    };\n  }\n\n  showMessage(classType, message) {\n    const alertDict = { classType, message };\n    this.setState({ alertDict });\n  }\n\n  showWarningMessage(message) {\n    const classType = 'warning';\n    this.showMessage(classType, message);\n  }\n\n  render() {\n    const { alertDict } = this.state;\n    return (\n      <div className=\"container\">\n        <Alert classType={alertDict.classType} message={alertDict.message} />\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <RollUnder\n              showMessage={(classType, message) => this.showMessage(classType, message)}\n              showWarningMessage={message => this.showWarningMessage(message)}\n            />\n          )}\n        />\n        <Route\n          path=\"/coin-flip\"\n          render={() => (\n            <CoinFlip\n              showMessage={(classType, message) => this.showMessage(classType, message)}\n              showWarningMessage={message => this.showWarningMessage(message)}\n            />\n          )}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport Headers from './components/Headers';\nimport Footers from './components/Footers';\nimport Container from './components/Container';\n\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      <Headers />\n      <Container />\n      <Footers />\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport setupGA from './utils/analytics';\nimport setupSentry from './utils/sentry';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nsetupGA();\nsetupSentry();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}