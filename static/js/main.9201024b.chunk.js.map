{"version":3,"sources":["utils/analytics.js","utils/sentry.js","contexts/IntlContext.jsx","utils/locales.js","components/LanguageUpdate.jsx","components/Headers.jsx","components/Footers.jsx","components/Alert.jsx","components/BaseGame.jsx","components/ValueSlider.jsx","components/BetSize.jsx","components/FlipButton.jsx","utils/etheroll-abi.js","utils/etheroll-contract.js","components/CoinFlipRecap.jsx","components/Address.jsx","components/Transaction.jsx","components/CoinFlipTransactions.jsx","components/CoinFlip.jsx","components/ContractInfo.jsx","components/ChanceOfWinning.jsx","components/RollUnderRecap.jsx","components/RollButton.jsx","components/Transactions.jsx","components/RollUnder.jsx","components/MetaMaskLink.jsx","utils/get-web3.js","components/Container.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["setupGA","ReactGA","initialize","process","pageview","window","location","pathname","search","setupSentry","Sentry","dsn","release","version","IntlContext","React","createContext","IntlContextProvider","_ref","children","_React$useState","useState","_React$useState2","Object","slicedToArray","locale","setLocale","react_default","a","createElement","Provider","value","messages","en","es","fr","locales","keys","DropdownItem","text","onClick","className","type","DropdownMenu","_ref2","items","aria-labelledby","map","item","LanguageUpdate_DropdownItem","key","LanguageUpdate","_React$useContext","useContext","_React$useContext2","id","data-toggle","aria-haspopup","aria-expanded","toUpperCase","LanguageUpdate_DropdownMenu","newLocale","Logo","href","HamburgerBtn","data-target","aria-controls","aria-label","NavSections","NavLink","to","exact","activeClassName","components_message","defaultMessage","target","rel","components_LanguageUpdate","Headers","Headers_Logo","Headers_HamburgerBtn","Headers_NavSections","Footers","Alert","classType","message","concat","role","defaultProps","onRollClick","accountAddress","rollUnder","contract","betSize","toWei","toString","web3Contract","methods","playerRollDice","send","from","then","result","console","log","JSON","stringify","ValueSlider","updateValue","step","min","max","addonText","toFixedDigits","addon","formattedValue","toFixed","onChange","e","Number","Slider_default","BetSize","updateBetSize","components_ValueSlider","Button","isDisabled","disabled","FlipButton","defineMessages","intl","useIntl","FlipButton_Button","formatMessage","etherollAbi","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","Networks","freeze","mainnet","morden","ropsten","contractAddresses","_contractAddresses","defineProperty","etherscanUrls","_etherscanUrls","getProfit","winningChances","rawPayout","getPayout","netPayout","Math","EtherollContract","web3","address","classCallCheck","this","abi","eth","Contract","callback","_this","getBlockNumber","error","blockNumber","options","fromBlock","toBlock","getPastEvents","getTransactionLogs","mergedLogs","logBetEvents","logResultEvents","findLogResultEventBylogBetEvent","logBetEvent","find","logResultEvent","returnValues","BetID","mergeLogs","filter","evnt","event","CoinFlipRecap","profit","values","Address","network","url","Transaction","hash","MergedLog","mergedLog","playerNumber","PlayerNumber","valueEth","coinResult","alertClass","diceResult","DiceResult","playerWon","Value","pow","components_Address","PlayerAddress","components_Transaction","transactionHash","TransactionsFilterButtons","Transactions","_ref3","transactionsElems","transactions","transaction","slice","reverse","CoinFlipTransactions_TransactionsFilterButtons","CoinFlip","props","filterTransactions","filteredTransactions","minBet","maxBet","updateState","onRollClickProps","rollDisabled","react","components_BetSize","components_CoinFlipRecap","components_FlipButton","CoinFlipTransactions","transactionsFilter","ContractInfo","accountBalance","contractAddress","contractBalance","contractAddr","contractBalanceBlock","contractAddressBlock","accountAddr","accountBalanceBlock","accountAddressBlock","ChanceOfWinning","chances","updateChances","RollUnderRecap","RollButton","RollButton_Button","sign","Transactions_MergedLog","Transactions_TransactionsFilterButtons","RollUnder","minChances","maxChances","components_ChanceOfWinning","components_RollUnderRecap","components_RollButton","components_Transactions","MetaMaskLink","getWeb3","Promise","resolve","reject","addEventListener","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","ethereum","Web3","enable","t0","currentProvider","Error","stop","showMessage","updateAlertDict","showFetchContractInfoWarning","showWarningMessage","optionalMessage","getAccountsCallback","updateAccountAddress","updateAccountBalance","accounts","length","getBalance","balance","fromWei","getAccountBalanceCallback","allTransactions","updateFilteredTransactions","updateTransactionsFilter","toLowerCase","Container","possibleConstructorReturn","getPrototypeOf","call","state","alertDict","onWeb3","bind","assertThisInitialized","initWeb3","clearInterval","getTransactionsIntervalId","_this2","net","getId","_this2$state","getTransactionsAlias","updateAllTransactions","getMergedTransactionLogs","getTransactions","setInterval","setState","minBetWei","minBetCallback","minNumber","minNumberCallback","maxNumber","maxNumberCallback","getAccounts","_this3","metamaskLink","components_MetaMaskLink","_this4","_this5","_this$state","gameProps","contractProps","components_Alert","components_ContractInfo","description","Route","path","render","components_RollUnder","components_CoinFlip","Component","App","HashRouter","provider","components_Headers","components_Container","components_Footers","Boolean","hostname","match","ReactDOM","contexts_IntlContext","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"05EAgBeA,MARf,WAIEC,IAAQC,WAAWC,kBAPnBF,IAAQG,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,0BCQ/CC,MAVf,WAIEC,OAAY,CACVC,IAAKR,6DACLS,QAASC,eCLAC,EAAcC,IAAMC,gBAclBC,EAZa,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAAeC,EAChBL,IAAMM,SAAS,MADCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrCK,EADqCH,EAAA,GAC7BI,EAD6BJ,EAAA,GAE5C,OACEK,EAAAC,EAAAC,cAACf,EAAYgB,SAAb,CAAsBC,MAAO,CAACN,EAAQC,IACnCP,+ECNDa,EAAW,CACfC,GAAI,KACJC,UACAC,WAEIC,EAAUb,OAAOc,KAAKL,GCJtBM,EAAe,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,KAAMC,EAATtB,EAASsB,QAAT,OACnBb,EAAAC,EAAAC,cAAA,UAAQY,UAAU,gBAAgBC,KAAK,SAASF,QAAS,kBAAMA,EAAQD,KAAQA,IAO3EI,EAAe,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOL,EAAVI,EAAUJ,QAAV,OACnBb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBAAgBK,kBAAgB,kBAC5CD,EAAME,IAAI,SAAAC,GAAI,OAAIrB,EAAAC,EAAAC,cAACoB,EAAD,CAAcV,KAAMS,EAAMR,QAASA,EAASU,IAAKF,QAiCzDG,EAzBQ,WAAM,IAAAC,EACCrC,IAAMsC,WAAWvC,GADlBwC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA6B,EAAA,GACpB3B,EADoB6B,EAAA,GACZ5B,EADY4B,EAAA,GAG3B,OACE3B,EAAAC,EAAAC,cAAA,MAAIY,UAAU,qBACZd,EAAAC,EAAAC,cAAA,UACEY,UAAU,2CACVc,GAAG,iBACHC,cAAY,WACZC,gBAAc,OACdC,gBAAc,QACdhB,KAAK,UAELf,EAAAC,EAAAC,cAAA,KAAGY,UAAU,gBARf,OAUGhB,EAAOkC,eAEVhC,EAAAC,EAAAC,cAAC+B,EAAD,CACEf,MAAOT,EACPI,QAAS,SAAAqB,GAAS,OAAInC,EAAUmC,QCrClCC,EAAO,kBACXnC,EAAAC,EAAAC,cAAA,KAAGY,UAAU,eAAesB,KAAK,KAC/BpC,EAAAC,EAAAC,cAAA,KAAGY,UAAU,oBACZ,cAICuB,EAAe,kBACnBrC,EAAAC,EAAAC,cAAA,UACEY,UAAU,iBACVC,KAAK,SACLc,cAAY,WACZS,cAAY,kBACZC,gBAAc,iBACdR,gBAAc,QACdS,aAAW,qBAEXxC,EAAAC,EAAAC,cAAA,QAAMY,UAAU,0BAId2B,EAAc,kBAClBzC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,2BAA2Bc,GAAG,kBAC3C5B,EAAAC,EAAAC,cAAA,MAAIY,UAAU,sBACZd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,YACZd,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAS5B,UAAU,WAAW6B,GAAG,IAAIC,OAAK,EAACC,gBAAgB,UACzD7C,EAAAC,EAAAC,cAAA,KAAGY,UAAU,gBADf,OAGEd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,mCACHmB,eAAe,SAEjB/C,EAAAC,EAAAC,cAAA,QAAMY,UAAU,WAAhB,eAGJd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,YACZd,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAS5B,UAAU,WAAW6B,GAAG,aAAaE,gBAAgB,UAC5D7C,EAAAC,EAAAC,cAAA,KAAGY,UAAU,iBADf,OAGEd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,wCACHmB,eAAe,kBAIrB/C,EAAAC,EAAAC,cAAA,MAAIY,UAAU,YACZd,EAAAC,EAAAC,cAAA,KACEY,UAAU,WACVsB,KAAK,yCACLY,OAAO,SACPC,IAAI,uBAEJjD,EAAAC,EAAAC,cAAA,KAAGY,UAAU,sBANf,OAQEd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,oCACHmB,eAAe,YAIrB/C,EAAAC,EAAAC,cAACgD,EAAD,SAeSC,EAVC,kBACdnD,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yDACbd,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAACmD,EAAD,MACArD,EAAAC,EAAAC,cAACoD,EAAD,gBC1DSC,MAbf,WACE,OACEvD,EAAAC,EAAAC,cAAA,UAAQY,UAAU,6BAChBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACbd,EAAAC,EAAAC,cAAA,QAAMY,UAAU,cAAhB,8CAEG5B,iFCPX,SAASsE,EAATjE,GAAuC,IAAtBkE,EAAsBlE,EAAtBkE,UAAWC,EAAWnE,EAAXmE,QAC1B,OAAOA,EAEH1D,EAAAC,EAAAC,cAAA,OAAKY,UAAS,eAAA6C,OAAiBF,GAAaG,KAAK,SAC9CF,GAGH,KAMNF,EAAMK,aAAe,CACnBJ,UAAW,UACXC,QAAS,MAGIF,QCTAM,EAVK,SAAAvE,GAEd,IADJwE,EACIxE,EADJwE,eAAgBC,EACZzE,EADYyE,UAAWC,EACvB1E,EADuB0E,SAAUC,EACjC3E,EADiC2E,QAE/B9D,EAAQ+D,gBAAMD,EAAQE,WAAY,SACxCH,EAASI,aAAaC,QAAQC,eAAeP,GAAWQ,KAAK,CAC3DC,KAAMV,EACN3D,UACCsE,KAAK,SAAAC,GAAM,OAAIC,QAAQC,IAAIC,KAAKC,UAAUJ,gCCH/C,SAASK,EAATzF,GAEG,IADDa,EACCb,EADDa,MAAO6E,EACN1F,EADM0F,YAAaC,EACnB3F,EADmB2F,KAAMC,EACzB5F,EADyB4F,IAAKC,EAC9B7F,EAD8B6F,IAAKC,EACnC9F,EADmC8F,UAAWC,EAC9C/F,EAD8C+F,cAEzCC,EAAuB,OAAdF,EACbrF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sBACbd,EAAAC,EAAAC,cAAA,QAAMY,UAAU,mCAAmCuE,IAEnD,KACEG,EAAmC,OAAlBF,EAAyBlF,EAAQA,EAAMqF,QAAQH,GACtE,OACEtF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iCACbd,EAAAC,EAAAC,cAAA,SACEa,KAAK,SACLD,UAAU,eACV4E,SAAU,SAAAC,GAAC,OAAIV,EAAYW,OAAOD,EAAE3C,OAAO5C,SAC3CA,MAAOoF,IAERD,GAEHvF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAAC2F,EAAA5F,EAAD,CAAQyF,SAAUT,EAAa7E,MAAOA,EAAO8E,KAAMA,EAAMC,IAAKA,EAAKC,IAAKA,MAchFJ,EAAYnB,aAAe,CACzBqB,KAAM,EACNC,IAAK,EACLC,IAAK,IACLC,UAAW,KACXC,cAAe,MAGFN,QC5Cf,SAASc,EAATvG,GAEG,IADD2E,EACC3E,EADD2E,QAASiB,EACR5F,EADQ4F,IAAKC,EACb7F,EADa6F,IAAKW,EAClBxG,EADkBwG,cAEnB,OACE/F,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACbd,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,kBACHmB,eAAe,cAGnB/C,EAAAC,EAAAC,cAAC8F,EAAD,CAAa5F,MAAO8D,EAASe,YAAac,EAAeb,KAAM,IAAMC,IAAKA,EAAKC,IAAKA,EAAKC,UAAU,MAAMC,cAAe,KAU9HQ,EAAQjC,aAAe,CACrBsB,IAAK,EACLC,IAAK,IAGQU,0BC3BTG,EAAS,SAAA1G,GAAA,IAAG2G,EAAH3G,EAAG2G,WAAYrF,EAAftB,EAAesB,QAASD,EAAxBrB,EAAwBqB,KAAxB,OACbZ,EAAAC,EAAAC,cAAA,UACEa,KAAK,SACLD,UAAU,kCACVqF,SAAUD,EACVrF,QAASA,GAERD,IAYL,SAASwF,EAATnF,GAA6C,IAAvBiF,EAAuBjF,EAAvBiF,WAAYrF,EAAWI,EAAXJ,QAE1BR,EAAWgG,yBAAe,CAC9BzF,KAAM,CACJgB,GAAI,kBACJmB,eAAgB,eAGduD,EAAOC,cACb,OACEvG,EAAAC,EAAAC,cAACsG,EAAD,CAAQ5F,KAAM0F,EAAKG,cAAcpG,EAASO,MAAOsF,WAAYA,EAAYrF,QAASA,IAdtFoF,EAAOpC,aAAe,CACpBqC,YAAY,GAmBdE,EAAWvC,aAAe,CACxBqC,YAAY,GAGCE,YC4CAM,GAvFK,CAAC,CACnBC,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,sBAAuB9F,KAAM,YAAc8F,KAAM,2BAA4BC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YAChL,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,cAAeC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACzI,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,4BAA6BC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACvJ,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,eAAgB9F,KAAM,YAAc8F,KAAM,oBAAqBC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YAClK,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,OAAQ9F,KAAM,WAAa,CAAE8F,KAAM,SAAU9F,KAAM,WAAa8F,KAAM,aAAcC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YACvL,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,gBAAiBC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,SAAWgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACxI,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,cAAe9F,KAAM,YAAc8F,KAAM,mBAAoBC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YAChK,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,OAAQ9F,KAAM,WAAa,CAAE8F,KAAM,SAAU9F,KAAM,UAAY,CAAE8F,KAAM,QAAS9F,KAAM,UAAY8F,KAAM,aAAcC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YACzN,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,YAAaC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACvI,CACD4F,UAAU,EAAMC,OAAQ,CAAC,CAAEC,KAAM,iBAAkB9F,KAAM,YAAc8F,KAAM,8BAA+BC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACpM,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,0BAA2B9F,KAAM,YAAc8F,KAAM,6BAA8BC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YACtL,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,mBAAoBC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YAC9I,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,kBAAmB9F,KAAM,SAAW8F,KAAM,oBAAqBC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YAClK,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,WAAY9F,KAAM,YAAc8F,KAAM,mBAAoBC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YAC7J,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,YAAaC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACvI,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,wBAAyB9F,KAAM,YAAc8F,KAAM,oCAAqCC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YAC3L,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,WAAYC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACtI,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,kBAAmBC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YAC7I,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,gBAAiB9F,KAAM,YAAc8F,KAAM,iBAAkBC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YAChK,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,YAAa9F,KAAM,SAAW8F,KAAM,iBAAkBC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YACzJ,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,iBAAkBC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,WAAagG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YAC3I,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,SAAU9F,KAAM,WAAa,CAAE8F,KAAM,SAAU9F,KAAM,YAAc8F,KAAM,qBAAsBC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YAClM,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,kBAAmBC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YAC7I,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,QAASC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACnI,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,SAAUC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACpI,CACD4F,UAAU,EAAOC,OAAQ,GAAIC,KAAM,oCAAqCC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,SAAWgG,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YACnK,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,YAAaC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACvI,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,YAAaC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACvI,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,gBAAiBC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YAC3I,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,aAAcC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,SAAWgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACrI,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,sBAAuB9F,KAAM,WAAa,CAAE8F,KAAM,SAAU9F,KAAM,WAAa,CAAE8F,KAAM,uBAAwB9F,KAAM,WAAa,CAAE8F,KAAM,yBAA0B9F,KAAM,YAAc8F,KAAM,oBAAqBC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YACtT,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,uBAAwB9F,KAAM,WAAa8F,KAAM,0BAA2BC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YAC/K,CACD4F,UAAU,EAAOC,OAAQ,GAAIC,KAAM,YAAaC,QAAS,GAAIC,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,YACjH,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,YAAaC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YACvI,CACD4F,UAAU,EAAOC,OAAQ,CAAC,CAAEC,KAAM,YAAa9F,KAAM,YAAc8F,KAAM,iBAAkBC,QAAS,GAAIC,SAAS,EAAMC,gBAAiB,UAAWjG,KAAM,YACxJ,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,mBAAoBC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YAC9I,CACD4F,UAAU,EAAMC,OAAQ,GAAIC,KAAM,oBAAqBC,QAAS,CAAC,CAAED,KAAM,GAAI9F,KAAM,YAAcgG,SAAS,EAAOC,gBAAiB,OAAQjG,KAAM,YAC/I,CACD6F,OAAQ,GAAIG,SAAS,EAAOC,gBAAiB,aAAcjG,KAAM,eAChE,CAAEgG,SAAS,EAAMC,gBAAiB,UAAWjG,KAAM,YAAc,CAClEkG,WAAW,EAAOL,OAAQ,CAAC,CAAEM,SAAS,EAAML,KAAM,QAAS9F,KAAM,WAAa,CAAEmG,SAAS,EAAML,KAAM,gBAAiB9F,KAAM,WAAa,CAAEmG,SAAS,EAAML,KAAM,cAAe9F,KAAM,WAAa,CAAEmG,SAAS,EAAOL,KAAM,cAAe9F,KAAM,WAAa,CAAEmG,SAAS,EAAOL,KAAM,WAAY9F,KAAM,WAAa,CAAEmG,SAAS,EAAOL,KAAM,eAAgB9F,KAAM,WAAa,CAAEmG,SAAS,EAAOL,KAAM,gBAAiB9F,KAAM,YAAc8F,KAAM,SAAU9F,KAAM,SAChc,CACDkG,WAAW,EAAOL,OAAQ,CAAC,CAAEM,SAAS,EAAML,KAAM,qBAAsB9F,KAAM,WAAa,CAAEmG,SAAS,EAAML,KAAM,QAAS9F,KAAM,WAAa,CAAEmG,SAAS,EAAML,KAAM,gBAAiB9F,KAAM,WAAa,CAAEmG,SAAS,EAAOL,KAAM,eAAgB9F,KAAM,WAAa,CAAEmG,SAAS,EAAOL,KAAM,aAAc9F,KAAM,WAAa,CAAEmG,SAAS,EAAOL,KAAM,QAAS9F,KAAM,WAAa,CAAEmG,SAAS,EAAOL,KAAM,SAAU9F,KAAM,UAAY,CAAEmG,SAAS,EAAOL,KAAM,QAAS9F,KAAM,UAAY8F,KAAM,YAAa9F,KAAM,SAChf,CACDkG,WAAW,EAAOL,OAAQ,CAAC,CAAEM,SAAS,EAAML,KAAM,QAAS9F,KAAM,WAAa,CAAEmG,SAAS,EAAML,KAAM,gBAAiB9F,KAAM,WAAa,CAAEmG,SAAS,EAAML,KAAM,cAAe9F,KAAM,YAAc8F,KAAM,YAAa9F,KAAM,SAC3N,CACDkG,WAAW,EAAOL,OAAQ,CAAC,CAAEM,SAAS,EAAML,KAAM,gBAAiB9F,KAAM,WAAa,CAAEmG,SAAS,EAAML,KAAM,oBAAqB9F,KAAM,YAAc8F,KAAM,mBAAoB9F,KAAM,UC9ElLoG,GAAWvH,OAAOwH,OAAO,CAAEC,QAAS,EAAGC,OAAQ,EAAGC,QAAS,IAE3DC,IAAiBC,EAAA,GAAA7H,OAAA8H,EAAA,EAAA9H,CAAA6H,EACpBN,GAASE,QAAU,8CADCzH,OAAA8H,EAAA,EAAA9H,CAAA6H,EAEpBN,GAASI,QAAU,8CAFCE,GAKjBE,IAAaC,EAAA,GAAAhI,OAAA8H,EAAA,EAAA9H,CAAAgI,EAChBT,GAASE,QAAU,wBADHzH,OAAA8H,EAAA,EAAA9H,CAAAgI,EAEhBT,GAASI,QAAU,gCAFHK,GAenB,SAASC,GAAU3D,EAAS4D,GAC1B,GAAuB,IAAnBA,EACF,OAAO,EAET,IAAMC,EAbR,SAAmB7D,EAAS4D,GAC1B,OAAO,IAAMA,EAAiB5D,EAYZ8D,CAAU9D,EAAS4D,GAC/BG,EARO,IAQkBF,EAE/B,OAAOG,KAAK9C,IAAI6C,EAAY/D,EAAS,OAkBjCiE,cACJ,SAAAA,EAAYC,EAAMC,GAAUzI,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAAJ,GAC1BI,KAAKH,KAAOA,EACZG,KAAKF,QAAUA,EACfE,KAAKC,IAAM9B,GACX6B,KAAKlE,aAAe,IAAI+D,EAAKK,IAAIC,SAAShC,GAAa2B,kEAItCM,GAAU,IAAAC,EAAAL,KAC3BA,KAAKH,KAAKK,IAAII,eAAe,SAACC,EAAOC,GACnC,GAAID,EACFlE,QAAQC,IAAIiE,OACP,KAICE,EAAU,CACdX,QAJkBO,EAAZP,QAKNY,UAJcF,EACY,IAI1BG,QALcH,GAOhBH,EAAKvE,aAAa8E,cAAc,YAAaH,EAASL,uDAMnCA,GACvBJ,KAAKa,mBAAmB,SAACN,EAAOnE,GAC9B,GAAImE,EACFlE,QAAQC,IAAIiE,OACP,CACL,IAEMO,EAhDd,SAAmBC,EAAcC,GAC/B,IAAMC,EAAkC,SAAAC,GAAW,OACjDF,EAAgBG,KAAK,SAAAC,GAAc,OACjCA,EAAeC,aAAaC,QAAUJ,EAAYG,aAAaC,SAInE,OAAOP,EAAalI,IAAI,SAAAqI,GAAW,MAAK,CACtCA,cACAE,eAAgBH,EAAgCC,MAuCzBK,CAFEnF,EAAOoF,OAAO,SAAAC,GAAI,MAAmB,WAAfA,EAAKC,QACxBtF,EAAOoF,OAAO,SAAAC,GAAI,MAAmB,cAAfA,EAAKC,SAEnDtB,EAASG,EAAOO,eCjETa,OAjBf,SAAA3K,GAAoC,IAAX2E,EAAW3E,EAAX2E,QAEjBiG,EAAStC,GAAU3D,EADT,IAEhB,OACElE,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,uCACHmB,eAAgB,+DAChBqH,OAAQ,CAAElG,QAASA,EAAQuB,QAAQ,GAAI0E,OAAQA,EAAO1E,QAAQ,QCAvD4E,OATf,SAAA9K,GAAuC,IAApB8I,EAAoB9I,EAApB8I,QAASiC,EAAW/K,EAAX+K,QACpBC,EAAG,GAAA5G,OAAMgE,GAAc2C,GAApB,aAAA3G,OAAwC0E,GACjD,OAAOrI,EAAAC,EAAAC,cAAA,KAAGkC,KAAMmI,EAAKzJ,UAAU,kBAAkBuH,ICOpCmC,OATf,SAAAjL,GAAwC,IAAjBkL,EAAiBlL,EAAjBkL,KAAMH,EAAW/K,EAAX+K,QACrBC,EAAG,GAAA5G,OAAMgE,GAAc2C,GAApB,QAAA3G,OAAmC8G,GAC5C,OAAOzK,EAAAC,EAAAC,cAAA,KAAGkC,KAAMmI,GAAME,ICExB,SAASC,GAATnL,GAA2C,IAAtB+K,EAAsB/K,EAAtB+K,QAASK,EAAapL,EAAboL,UACpBlB,EAAgCkB,EAAhClB,YAAaE,EAAmBgB,EAAnBhB,eACfiB,EAAehF,OAAO6D,EAAYG,aAAaiB,cAEjDC,EAAW,IACXC,EAAa,IACbC,EAAa,YAEjB,GAA8B,qBAAnBrB,EAAgC,CACzC,IAAMsB,EAAarF,OAAO+D,EAAeC,aAAasB,YACtDH,EAAaE,EAAa,GAAK,OAAS,OACxC,IAAME,EAAYF,EAAaL,EAC/BE,GAAYnB,EAAeC,aAAawB,MAA5BlD,KAAAmD,IAAqC,IAAQ,KAAM5F,QAAQ,GACvEuF,EAAaG,EAAY,UAAY,SAEvC,OACEnL,EAAAC,EAAAC,cAAA,OAAKY,UAAS,qDAAA6C,OAAuDqH,IACnEhL,EAAAC,EAAAC,cAAA,OAAKY,UAAU,oBACbd,EAAAC,EAAAC,cAAA,UAAK6K,IAEP/K,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACZgK,EADH,YAKA9K,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,oBACHmB,eAAe,YAHnB,OAME/C,EAAAC,EAAAC,cAACoL,GAAD,CAASjD,QAASoB,EAAYG,aAAa2B,cAAcnH,WAAYkG,QAASA,KAEhFtK,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,yBACHmB,eAAe,iBAHnB,OAME/C,EAAAC,EAAAC,cAACsL,GAAD,CAAaf,KAAMhB,EAAYgC,gBAAiBnB,QAASA,OAcnE,IAAMoB,GAA4B,SAAAzK,GAAA,IAAGJ,EAAHI,EAAGJ,QAAH,OAChCb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAAA,UACEa,KAAK,SACLD,UAAU,sBACVD,QAAS,kBAAMA,EAAQ,uBAEvBb,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,+CACHmB,eAAe,sBAGnB/C,EAAAC,EAAAC,cAAA,UACEa,KAAK,SACLD,UAAU,eACVD,QAAS,kBAAMA,EAAQ,sBAEvBb,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,8CACHmB,eAAe,uBA2CR4I,OAlCf,SAAAC,GAA0D,IAAlCtB,EAAkCsB,EAAlCtB,QAASzJ,EAAyB+K,EAAzB/K,QAKzBgL,EALkDD,EAAhBE,aACE/B,OAAO,SAAAgC,GAAW,OACI,KAA9DnG,OAAOmG,EAAYtC,YAAYG,aAAaiB,gBAEImB,QAAQC,UACX7K,IAAI,SAAA2K,GAAW,OAC5D/L,EAAAC,EAAAC,cAACwK,GAAD,CACEnJ,IAAKwK,EAAYtC,YAAYgC,gBAC7BnB,QAASA,EACTK,UAAWoB,MAGf,OACE/L,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACbd,EAAAC,EAAAC,cAACgM,GAAD,CAA2BrL,QAASA,KAEtCb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cAAc+K,MClGrC,SAASM,GAASC,GAAO,IAErBrI,EAGEqI,EAHFrI,eAAgBG,EAGdkI,EAHclI,QAASD,EAGvBmI,EAHuBnI,SACzBoI,EAEED,EAFFC,mBAAoBC,EAElBF,EAFkBE,qBAAsBC,EAExCH,EAFwCG,OAAQC,EAEhDJ,EAFgDI,OAAQlC,EAExD8B,EAFwD9B,QAC1DmC,EACEL,EADFK,YAGIC,EAAmB,CACvB3I,iBAAgBC,UAFA,GAEWC,WAAUC,WAEjCyI,EAAkC,OAAnB5I,EACrB,OACE/D,EAAAC,EAAAC,cAAC0M,EAAA,SAAD,KACE5M,EAAAC,EAAAC,cAAC2M,EAAD,CAAS3I,QAASA,EAASiB,IAAKoH,EAAQnH,IAAKoH,EAAQzG,cAAe0G,EAAY,aAChFzM,EAAAC,EAAAC,cAAC4M,GAAD,CAAe5I,QAASA,IACxBlE,EAAAC,EAAAC,cAAC6M,EAAD,CAAY7G,WAAYyG,EAAc9L,QAAS,kBAAMiD,EAAY4I,MACjE1M,EAAAC,EAAAC,cAAC8M,GAAD,CACE1C,QAASA,EACTzJ,QAAS,SAAAoM,GAAkB,OAAIZ,EAAmBY,IAClDnB,aAAcQ,KAyBtBH,GAAStI,aAAe,CACtBE,eAAgB,KAChBE,SAAU,MAGGkI,UCvDf,SAASe,GAAT3N,GAEG,IADDwE,EACCxE,EADDwE,eAAgBoJ,EACf5N,EADe4N,eAAgBC,EAC/B7N,EAD+B6N,gBAAiBC,EAChD9N,EADgD8N,gBAAiB/C,EACjE/K,EADiE+K,QAE5DgD,EAAetN,EAAAC,EAAAC,cAACoL,GAAD,CAAShB,QAASA,EAASjC,QAAS+E,IAEnDG,EACJvN,EAAAC,EAAAC,cAAA,OAAKY,UAAU,4BACbd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,qBADf,OAGEd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,wBACHmB,eAAgB,mCAChBqH,OAAQ,CAAEiD,gBAAiBA,EAAgB5H,QAAQ,OAKnD+H,EACJxN,EAAAC,EAAAC,cAAA,OAAKY,UAAU,4BACZwM,GAGCG,EAAkC,OAAnB1J,EACjB/D,EAAAC,EAAAC,cAACoL,GAAD,CAAShB,QAASA,EAASjC,QAAStE,IAEpC/D,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,6BACHmB,eAAe,6CAKjB2K,EACJ1N,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACbd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,gBADf,OAGEd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,uBACHmB,eAAgB,iCAChBqH,OAAQ,CAAE+C,eAAgBA,EAAe1H,QAAQ,OAKjDkI,EACJ3N,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UACZ2M,GAIL,OACEzN,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACZ4M,EACAC,EACAJ,EACAC,GAWPN,GAAarJ,aAAe,CAC1BE,eAAgB,MAGHmJ,iBCvEf,SAASU,GAATrO,GAEG,IADDsO,EACCtO,EADDsO,QAAS1I,EACR5F,EADQ4F,IAAKC,EACb7F,EADa6F,IAAK0I,EAClBvO,EADkBuO,cAEnB,OACE9N,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACbd,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,kCACHmB,eAAe,uBAGnB/C,EAAAC,EAAAC,cAAC8F,EAAD,CACE5F,MAAOyN,EACP1I,IAAKA,EACLC,IAAKA,EACLH,YAAa6I,EACbzI,UAAU,eAWlBuI,GAAgB/J,aAAe,CAC7BsB,IAAK,EACLC,IAAK,KAGQwI,UCmBAG,OAlDf,SAAAxO,GAA4C,IAAlB2E,EAAkB3E,EAAlB2E,QAAS9D,EAASb,EAATa,MAE3B+J,EAAStC,GAAU3D,EADT9D,EAAQ,GAExB,OACEJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,4BACHmB,eAAe,iBAIrB/C,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,cAAcV,IAE9BJ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,iCACHmB,eAAe,qBAGnB/C,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,mBACVoD,EAAQuB,QAAQ,GADnB,aAMFzF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,iCACHmB,eAAe,qBAGnB/C,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,cACVqJ,EAAO1E,QAAQ,GADlB,eCvCFQ,GAAS,SAAA1G,GAAA,IAAG2G,EAAH3G,EAAG2G,WAAYrF,EAAftB,EAAesB,QAASD,EAAxBrB,EAAwBqB,KAAxB,OACbZ,EAAAC,EAAAC,cAAA,UACEa,KAAK,SACLD,UAAU,kCACVqF,SAAUD,EACVrF,QAASA,GAERD,IAYL,SAASoN,GAAT/M,GAA6C,IAAvBiF,EAAuBjF,EAAvBiF,WAAYrF,EAAWI,EAAXJ,QAChC,OAAOb,EAAAC,EAAAC,cAAC+N,GAAD,CAAQrN,KAAK,OAAOsF,WAAYA,EAAYrF,QAASA,IAL9DoF,GAAOpC,aAAe,CACpBqC,YAAY,GAUd8H,GAAWnK,aAAe,CACxBqC,YAAY,GAGC8H,UCxBf,SAAStD,GAATnL,GAA2C,IAAtB+K,EAAsB/K,EAAtB+K,QAASK,EAAapL,EAAboL,UACpBlB,EAAgCkB,EAAhClB,YAAaE,EAAmBgB,EAAnBhB,eACfiB,EAAehF,OAAO6D,EAAYG,aAAaiB,cACjDC,EAAW,IACXG,EAAa,IACbiD,EAAO,IACPlD,EAAa,YAEjB,GAA8B,qBAAnBrB,EAAgC,CAEzC,IAAMwB,GADNF,EAAarF,OAAO+D,EAAeC,aAAasB,aACjBN,EAC/BE,GAAYnB,EAAeC,aAAawB,MAA5BlD,KAAAmD,IAAqC,IAAQ,KAAM5F,QAAQ,GACvEyI,EAAO/C,EAAY,IAAM,IACzBH,EAAaG,EAAY,UAAY,SAEvC,OACEnL,EAAAC,EAAAC,cAAA,OAAKY,UAAS,qDAAA6C,OAAuDqH,IACnEhL,EAAAC,EAAAC,cAAA,OAAKY,UAAU,oBACbd,EAAAC,EAAAC,cAAA,UAAK+K,IAEPjL,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACZgK,EADH,YAKA9K,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACZmK,EADH,OAGGiD,EAHH,OAKGtD,GAEH5K,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,oBACHmB,eAAe,YAHnB,OAME/C,EAAAC,EAAAC,cAACoL,GAAD,CAASjD,QAASoB,EAAYG,aAAa2B,cAAcnH,WAAYkG,QAASA,KAEhFtK,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,yBACHmB,eAAe,iBAHnB,OAME/C,EAAAC,EAAAC,cAACsL,GAAD,CAAaf,KAAMhB,EAAYgC,gBAAiBnB,QAASA,OAcnE,SAASoB,GAATzK,GAAgD,IAAXJ,EAAWI,EAAXJ,QACnC,OACEb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAAA,UACEa,KAAK,SACLD,UAAU,sBACVD,QAAS,kBAAMA,EAAQ,uBAEvBb,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,+CACHmB,eAAe,sBAGnB/C,EAAAC,EAAAC,cAAA,UACEa,KAAK,SACLD,UAAU,eACVD,QAAS,kBAAMA,EAAQ,sBAEvBb,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,8CACHmB,eAAe,sBAyCV4I,OA/Bf,SAAAC,GAA0D,IAAlCtB,EAAkCsB,EAAlCtB,QAASzJ,EAAyB+K,EAAzB/K,QAEzBgL,EAFkDD,EAAhBE,aACEE,QAAQC,UACH7K,IAAI,SAAA2K,GAAW,OAC5D/L,EAAAC,EAAAC,cAACiO,GAAD,CACE5M,IAAKwK,EAAYtC,YAAYgC,gBAC7BnB,QAASA,EACTK,UAAWoB,MAGf,OACE/L,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACbd,EAAAC,EAAAC,cAACkO,GAAD,CAA2BvN,QAASA,KAEtCb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cAAc+K,MCtGrC,SAASwC,GAAUjC,GAAO,IAEtBrI,EAGEqI,EAHFrI,eAAgBG,EAGdkI,EAHclI,QAAS2J,EAGvBzB,EAHuByB,QAAS5J,EAGhCmI,EAHgCnI,SAClCoI,EAEED,EAFFC,mBAAoBC,EAElBF,EAFkBE,qBAAsBC,EAExCH,EAFwCG,OAAQC,EAEhDJ,EAFgDI,OAAQ8B,EAExDlC,EAFwDkC,WAAYC,EAEpEnC,EAFoEmC,WAAYjE,EAEhF8B,EAFgF9B,QAClFmC,EACEL,EADFK,YAEIzI,EAAY6J,EAAU,EACtBnB,EAAmB,CACvB3I,iBAAgBC,YAAWC,WAAUC,WAEjCyI,EAAkC,OAAnB5I,EACrB,OACE/D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMY,UAAU,aACdd,EAAAC,EAAAC,cAAC2M,EAAD,CAAS3I,QAASA,EAASiB,IAAKoH,EAAQnH,IAAKoH,EAAQzG,cAAe0G,EAAY,aAChFzM,EAAAC,EAAAC,cAACsO,GAAD,CAAiBX,QAASA,EAAS1I,IAAKmJ,EAAYlJ,IAAKmJ,EAAYT,cAAerB,EAAY,aAChGzM,EAAAC,EAAAC,cAACuO,GAAD,CAAgBrO,MAAO4D,EAAWE,QAASA,IAC3ClE,EAAAC,EAAAC,cAACwO,GAAD,CAAYxI,WAAYyG,EAAc9L,QAAS,kBAAMiD,EAAY4I,OAEnE1M,EAAAC,EAAAC,cAACyO,GAAD,CACErE,QAASA,EACTzJ,QAAS,SAAAoM,GAAkB,OAAIZ,EAAmBY,IAClDnB,aAAcQ,KA2BtB+B,GAAUxK,aAAe,CACvBE,eAAgB,KAChBE,SAAU,MAGGoK,UCvDAO,GAVM,kBACnB5O,EAAAC,EAAAC,cAAA,KACEkC,KAAK,uBACLY,OAAO,SACPC,IAAI,uBAHN,iECqBa4L,GAtBC,IAAIC,QAAQ,SAACC,EAASC,GACpCtQ,OAAOuQ,iBAAiB,OAAxBrP,OAAAsP,GAAA,EAAAtP,CAAAuP,GAAAlP,EAAAmP,KAAgC,SAAAC,IAAA,IAAAjH,EAAA,OAAA+G,GAAAlP,EAAAqP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAE1B/Q,OAAOgR,SAFmB,CAAAH,EAAAE,KAAA,gBAG5BrH,EAAO,IAAIuH,KAAKjR,OAAOgR,UAHKH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMpB/Q,OAAOgR,SAASE,SANI,OAAAL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAQ1B3K,QAAQkE,MAARyG,EAAAM,IAR0B,QAAAN,EAAAE,KAAA,iBAUnB/Q,OAAO0J,KAChBA,EAAO,IAAIuH,KAAKjR,OAAO0J,KAAK0H,iBAE5Bd,EAAO,IAAIe,MAAM,wDAbW,QAgB9BhB,EADgB,CAAE3G,SAfY,yBAAAmH,EAAAS,SAAAX,EAAA,oBCc5BY,GAAc,SAACxM,EAAWC,EAASwM,GAEvCA,EADkB,CAAEzM,YAAWC,aAI3ByM,GAA+B,SAACC,EAAoBC,GAGxDD,EAD4C,qBAApBC,EADD,6BACqDA,IAgCxEC,GAAsB,SAC1BlI,EAAMgI,EAAoBG,EAAsBC,GADtB,OAEvB,SAAC1H,EAAO2H,GACX,GAAI3H,EAAO,CAETsH,EADgB,gCAEX,CACL,IAAMrM,EAAqC,IAApB0M,EAASC,OAAe,KAAOD,EAAS,GACxC,OAAnB1M,GACFqE,EAAKK,IAAIkI,WACP5M,EAjB0B,SAACqM,EAAoBnL,GAArB,OAAqC,SAAC6D,EAAO8H,GAE5E9H,GAAqB,OAAZ8H,EAAoBR,EAAmB,gCAC/CnL,EAAYW,OAAOiL,kBAAQD,EAAS,YAehCE,CACEV,EACAI,IAIND,EAAqBxM,MAInBsI,GAAqB,SACzBtI,EAAgBkJ,EAAoB8D,EACpCC,EAA4BC,GAE5B,IAAI3E,EAAuByE,EAAgB/E,QAChB,qBAAvBiB,IACFX,EAAuByE,EAAgBhH,OAAO,SAAAgC,GAAW,OACvDA,EAAYtC,YAAYG,aAAa2B,cAAc2F,gBAC/CnN,EAAemN,iBAGvBF,EAA2B1E,GAC3B2E,EAAyBhE,IAiMZkE,eA3Kb,SAAAA,EAAY/E,GAAO,IAAAxD,EAAA,OAAAhJ,OAAA0I,EAAA,EAAA1I,CAAA2I,KAAA4I,IACjBvI,EAAAhJ,OAAAwR,EAAA,EAAAxR,CAAA2I,KAAA3I,OAAAyR,EAAA,EAAAzR,CAAAuR,GAAAG,KAAA/I,KAAM6D,KACDmF,MAAQ,CACXC,UAAW,GACXtN,QAAS,GACT2J,QAAS,GACTtB,OAAQzG,EAAQjC,aAAasB,IAC7BqH,OAAQ1G,EAAQjC,aAAauB,IAC7BkJ,WAAYV,GAAgB/J,aAAasB,IACzCoJ,WAAYX,GAAgB/J,aAAauB,IACzCrB,eAAgB,KAChBoJ,eAAgB,EAChB7C,QAASnD,GAASE,QAClBpD,SAAU,KACVmJ,gBAAiB5F,GAAkBL,GAASE,SAC5CgG,gBAAiB,EAEjB0D,gBAAiB,GACjBzE,qBAAsB,GACtBW,mBAAoB,qBAEtBrE,EAAK6I,OAAS7I,EAAK6I,OAAOC,KAAZ9R,OAAA+R,EAAA,EAAA/R,CAAAgJ,IACdA,EAAK6D,YAAc7D,EAAK6D,YAAYiF,KAAjB9R,OAAA+R,EAAA,EAAA/R,CAAAgJ,IACnBA,EAAKgJ,WAvBYhJ,sFA2BjBiJ,cAActJ,KAAKuJ,0DAed1J,GAAM,IAAA2J,EAAAxJ,KAgDXH,EAAKK,IAAIuJ,IAAIC,QAAQvN,KA/CC,SAAC4F,GACrB,IAjH0CrF,EAiHpCmI,EAAkB5F,GAAkB8C,GACpCrG,EAAW,IAAIkE,GAAiBC,EAAMgF,GAEpCgD,EAAoC2B,EAApC3B,mBAAoB3D,EAAgBsF,EAAhBtF,YAJKyF,EAKcH,EAAKR,MAA5CtE,EALyBiF,EAKzBjF,mBAAoBlJ,EALKmO,EAKLnO,eACtBoO,EAAuB,kBApEX,SACtBlO,EAAUF,EAAgBkJ,EAC1BmF,EAAuBpB,EAA4BC,GAEnDhN,EAASoO,yBAAyB,SAACvJ,EAAOnE,GACxC,GAAImE,EACFlE,QAAQC,IAAIiE,OACP,CACL,IAAMiI,EAAkBpM,EACxByN,EAAsBrB,GACtB1E,GACEtI,EAAgBkJ,EAAoB8D,EACpCC,EAA4BC,MAwDKqB,CACjCrO,EAAUF,EAAgBkJ,EAC1BR,EAAY,mBAAoBA,EAAY,wBAAyBA,EAAY,wBAGnFsF,EAAKD,0BAA4BS,YAC/B,kBAAMJ,KAToB,KAW5BA,IACAJ,EAAKS,SAAS,CACZlI,UACArG,WACAmJ,oBAEFnJ,EAASI,aAAaC,QAAQiI,SAAS+E,KAlJtB,SAAClB,EAAoBnL,GAArB,OAAqC,SAAC6D,EAAO2J,GAClE3J,EAAQqH,GAA6BC,GACnCnL,EAAYW,OAAOiL,kBAAQ4B,EAAW,YAiJlCC,CACEtC,EAAoB3D,EAAY,YAGpCxI,EAASI,aAAaC,QAAQqO,YAAYrB,KAjJtB,SAAClB,EAAoBnL,GAArB,OAAqC,SAAC6D,EAAO6J,GACrE7J,EAAQqH,GAA6BC,GAAsBnL,EAAY0N,EAAY,IAiJ7EC,CACExC,EAAoB3D,EAAY,gBAGpCxI,EAASI,aAAaC,QAAQuO,YAAYvB,KAlJtB,SAAClB,EAAoBnL,GAArB,OAAqC,SAAC6D,EAAO+J,GACrE/J,EAAQqH,GAA6BC,GAAsBnL,EAAY4N,EAAY,IAkJ7EC,CACE1C,EAAoB3D,EAAY,gBAGpCrE,EAAKK,IAAIkI,WACPvD,GApJwCnI,EAsJlBwH,EAAY,mBAtJsB,SAAC3D,EAAO8H,GAErE9H,GAAqB,OAAZ8H,EAAoBT,GAA6B,iCACzDlL,EAAYW,OAAOiL,kBAAQD,EAAS,cAsJlCxI,EAAKK,IAAIsK,YACPzC,GACElI,EAAMgI,EAAoB3D,EAAY,kBAAmBA,EAAY,yDAOlE,IAAAuG,EAAAzK,KAiBTsG,GAAQnK,KAhBkB,SAAAnF,GAAc,IAAX6I,EAAW7I,EAAX6I,KAC3B4K,EAAKvB,OAAOrJ,IAEe,WAC3B,IACM1E,EACJ1D,EAAAC,EAAAC,cAAC0M,EAAA,SAAD,KACE5M,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,iCACHmB,eAAgB,kFAChBqH,OAAQ,CAAE6I,aAAcjT,EAAAC,EAAAC,cAACgT,GAAD,UAI9BjD,GAVkB,SAUKvM,EAASsP,EAAKvG,YAAY,2DAKlC/I,GAEjBuM,GADkB,UACKvM,EAAS6E,KAAKkE,YAAY,kDAGvClL,GAAK,IAAA4R,EAAA5K,KACf,OAAO,SAACnI,GACN+S,EAAKX,SAAL5S,OAAA8H,EAAA,EAAA9H,CAAA,GAAiB2B,EAAMnB,sCAIlB,IAAAgT,EAAA7K,KAAA8K,EAKH9K,KAAKgJ,MAHPC,EAFK6B,EAEL7B,UAAWzN,EAFNsP,EAEMtP,eAAgBoJ,EAFtBkG,EAEsBlG,eAAgB4D,EAFtCsC,EAEsCtC,gBAAiB7M,EAFvDmP,EAEuDnP,QAAS2J,EAFhEwF,EAEgExF,QAAS5J,EAFzEoP,EAEyEpP,SAC9EmJ,EAHKiG,EAGLjG,gBAAiBC,EAHZgG,EAGYhG,gBAAiBf,EAH7B+G,EAG6B/G,qBAAsBE,EAHnD6G,EAGmD7G,OAAQD,EAH3D8G,EAG2D9G,OAAQgC,EAHnE8E,EAGmE9E,WACxED,EAJK+E,EAIL/E,WAAYhE,EAJP+I,EAIO/I,QAAS2C,EAJhBoG,EAIgBpG,mBAGjBqG,EAAY,CAChBvP,iBACAG,UACA2J,UACA5J,WACAqI,uBACAW,qBACAT,SACAD,SACAgC,aACAD,aACAhE,UACAmC,YAAalE,KAAKkE,YAClBJ,mBAAoB,SAAAtC,GAAM,OAAIsC,GAC5BtI,EAAgBgG,EAAQgH,EACxBqC,EAAK3G,YAAY,wBAAyB2G,EAAK3G,YAAY,yBAGzD8G,EAAgB,CACpBxP,iBAAgBoJ,iBAAgBC,kBAAiBC,kBAAiB/C,WAGpE,OACEtK,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACbd,EAAAC,EAAAC,cAACsT,EAAD,CAAO/P,UAAW+N,EAAU/N,UAAWC,QAAS8N,EAAU9N,UAC1D1D,EAAAC,EAAAC,cAACuT,GAAiBF,GAClBvT,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACElB,GAAG,2BACHmB,eAAe,iBACf2Q,YAAY,0BAGhB1T,EAAAC,EAAAC,cAACyT,EAAA,EAAD,CAAOC,KAAK,IAAIhR,OAAK,EAACiR,OAAQ,kBAAM7T,EAAAC,EAAAC,cAAC4T,GAAcR,MACnDtT,EAAAC,EAAAC,cAACyT,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAQ,kBAAM7T,EAAAC,EAAAC,cAAC6T,GAAaT,cAtKrClU,IAAM4U,WCpFfC,GAfH,WAAM,IAAAxS,EACCrC,IAAMsC,WAAWvC,GAA3BW,EADSF,OAAAC,EAAA,EAAAD,CAAA6B,EAAA,MAEhB,OACEzB,EAAAC,EAAAC,cAACgU,EAAA,EAAD,KACElU,EAAAC,EAAAC,cAACiU,EAAA,EAAD,CAAcrU,OAAQA,EAAQO,SAAUA,EAASP,IAC/CE,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAACkU,EAAD,MACApU,EAAAC,EAAAC,cAACmU,GAAD,MACArU,EAAAC,EAAAC,cAACoU,EAAD,UCPUC,QACW,cAA7B7V,OAAOC,SAAS6V,UAEe,UAA7B9V,OAAOC,SAAS6V,UAEhB9V,OAAOC,SAAS6V,SAASC,MACvB,2DCNNpW,IACAS,IAEA4V,IAASb,OACP7T,EAAAC,EAAAC,cAACyU,EAAD,KACE3U,EAAAC,EAAAC,cAAC0U,GAAD,OAEFC,SAASC,eAAe,SD8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvQ,KAAK,SAAAwQ,GACjCA,EAAaC","file":"static/js/main.9201024b.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\n\nfunction fireTracking() {\n  // ReactGA.pageview(window.location.hash);\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nfunction setupGA() {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  ReactGA.initialize(process.env.REACT_APP_ANALYTICS_ID);\n  fireTracking();\n}\n\nexport default setupGA;\n","import * as Sentry from '@sentry/browser';\nimport { version } from '../../package.json';\n\nfunction setupSentry() {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    release: version,\n  });\n}\n\nexport default setupSentry;\n","import React from 'react';\nimport { element } from 'prop-types';\n\n\nexport const IntlContext = React.createContext();\n\nconst IntlContextProvider = ({ children }) => {\n  const [locale, setLocale] = React.useState('en');\n  return (\n    <IntlContext.Provider value={[locale, setLocale]}>\n      {children}\n    </IntlContext.Provider>\n  );\n};\nIntlContextProvider.propTypes = {\n  children: element.isRequired,\n};\n\nexport default IntlContextProvider;\n","import messagesEs from '../translations/es.json';\nimport messagesFr from '../translations/fr.json';\n\n\nconst messages = {\n  en: null,\n  es: messagesEs,\n  fr: messagesFr,\n};\nconst locales = Object.keys(messages);\n\nexport { messages, locales };\n","import React from 'react';\nimport { arrayOf, func, string } from 'prop-types';\nimport { IntlContext } from '../contexts/IntlContext';\nimport { locales } from '../utils/locales';\n\nconst DropdownItem = ({ text, onClick }) => (\n  <button className=\"dropdown-item\" type=\"button\" onClick={() => onClick(text)}>{text}</button>\n);\nDropdownItem.propTypes = {\n  text: string.isRequired,\n  onClick: func.isRequired,\n};\n\nconst DropdownMenu = ({ items, onClick }) => (\n  <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n    {items.map(item => <DropdownItem text={item} onClick={onClick} key={item} />)}\n  </div>\n);\nDropdownMenu.propTypes = {\n  items: arrayOf(string).isRequired,\n  onClick: func.isRequired,\n};\n\nconst LanguageUpdate = () => {\n  const [locale, setLocale] = React.useContext(IntlContext);\n\n  return (\n    <li className=\"nav-item dropdown\">\n      <button\n        className=\"nav-link btn button-link dropdown-toggle\"\n        id=\"navbarDropdown\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        type=\"button\"\n      >\n        <i className=\"fas fa-flag\" />\n        &nbsp;\n        {locale.toUpperCase()}\n      </button>\n      <DropdownMenu\n        items={locales}\n        onClick={newLocale => setLocale(newLocale)}\n      />\n    </li>\n  );\n};\n\nexport default LanguageUpdate;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { NavLink } from 'react-router-dom';\nimport LanguageUpdate from './LanguageUpdate';\n\nconst Logo = () => (\n  <a className=\"navbar-brand\" href=\"/\">\n    <i className=\"fas fa-dice-d20\" />\n    {' Etheroll'}\n  </a>\n);\n\nconst HamburgerBtn = () => (\n  <button\n    className=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarCollapse\"\n    aria-controls=\"navbarCollapse\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span className=\"navbar-toggler-icon\" />\n  </button>\n);\n\nconst NavSections = () => (\n  <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/\" exact activeClassName=\"active\">\n          <i className=\"fas fa-home\" />\n          &nbsp;\n          <FormattedMessage\n            id=\"headers.navsections.navlink.home\"\n            defaultMessage=\"Home\"\n          />\n          <span className=\"sr-only\">(current)</span>\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/coin-flip\" activeClassName=\"active\">\n          <i className=\"fas fa-coins\" />\n          &nbsp;\n          <FormattedMessage\n            id=\"headers.navsections.navlink.coin-flip\"\n            defaultMessage=\"Flip a coin\"\n          />\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          className=\"nav-link\"\n          href=\"https://github.com/AndreMiras/etheroll\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fab fa-github-alt\" />\n          &nbsp;\n          <FormattedMessage\n            id=\"headers.navsections.navlink.about\"\n            defaultMessage=\"About\"\n          />\n        </a>\n      </li>\n      <LanguageUpdate />\n    </ul>\n  </div>\n);\n\nconst Headers = () => (\n  <header>\n    <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <Logo />\n      <HamburgerBtn />\n      <NavSections />\n    </nav>\n  </header>\n);\n\nexport default Headers;\n","import React from 'react';\nimport './css/Footers.css';\nimport { version } from '../../package.json';\n\nfunction Footers() {\n  return (\n    <footer className=\"Footers d-none d-md-block\">\n      <div className=\"container\">\n        <span className=\"text-muted\">\n          Copyright (c) 2018 Andre Miras - Etheroll v\n          {version}\n        </span>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footers;\n","import React from 'react';\nimport { string, node, oneOfType } from 'prop-types';\n\nfunction Alert({ classType, message }) {\n  return message\n    ? (\n      <div className={`alert alert-${classType}`} role=\"alert\">\n        {message}\n      </div>\n    )\n    : null;\n}\nAlert.propTypes = {\n  classType: string,\n  message: oneOfType([string, node]),\n};\nAlert.defaultProps = {\n  classType: 'primary',\n  message: null,\n};\n\nexport default Alert;\n","import { toWei } from 'web3-utils';\n\nconst onRollClick = ({\n  accountAddress, rollUnder, contract, betSize,\n}) => {\n  const value = toWei(betSize.toString(), 'ether');\n  contract.web3Contract.methods.playerRollDice(rollUnder).send({\n    from: accountAddress,\n    value,\n  }).then(result => console.log(JSON.stringify(result)));\n};\n\nexport default onRollClick;\n","import React from 'react';\nimport Slider from 'rc-slider/lib/Slider';\nimport { func, number, string } from 'prop-types';\nimport 'rc-slider/assets/index.css';\n\n\nfunction ValueSlider({\n  value, updateValue, step, min, max, addonText, toFixedDigits,\n}) {\n  const addon = (addonText !== null) ? (\n    <div className=\"input-group-append\">\n      <span className=\"input-group-text text-monospace\">{addonText}</span>\n    </div>\n  ) : null;\n  const formattedValue = toFixedDigits === null ? value : value.toFixed(toFixedDigits);\n  return (\n    <div className=\"row\">\n      <div className=\"input-group col-sm-3 col-lg-2\">\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          onChange={e => updateValue(Number(e.target.value))}\n          value={formattedValue}\n        />\n        {addon}\n      </div>\n      <div className=\"col\">\n        <Slider onChange={updateValue} value={value} step={step} min={min} max={max} />\n      </div>\n    </div>\n  );\n}\nValueSlider.propTypes = {\n  value: number.isRequired,\n  updateValue: func.isRequired,\n  step: number,\n  min: number,\n  max: number,\n  addonText: string,\n  toFixedDigits: number,\n};\nValueSlider.defaultProps = {\n  step: 1,\n  min: 0,\n  max: 100,\n  addonText: null,\n  toFixedDigits: null,\n};\n\nexport default ValueSlider;\n","import React from 'react';\nimport { number, func } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport ValueSlider from './ValueSlider';\n\nfunction BetSize({\n  betSize, min, max, updateBetSize,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>\n        <FormattedMessage\n          id=\"betsize.betsize\"\n          defaultMessage=\"Bet size\"\n        />\n      </b>\n      <ValueSlider value={betSize} updateValue={updateBetSize} step={0.05} min={min} max={max} addonText=\"ETH\" toFixedDigits={2} />\n    </div>\n  );\n}\nBetSize.propTypes = {\n  betSize: number.isRequired,\n  min: number,\n  max: number,\n  updateBetSize: func.isRequired,\n};\nBetSize.defaultProps = {\n  min: 0,\n  max: 10,\n};\n\nexport default BetSize;\n","import React from 'react';\nimport { bool, func, string } from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst Button = ({ isDisabled, onClick, text }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-primary btn-lg col-md-3\"\n    disabled={isDisabled}\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\nButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n  text: string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nfunction FlipButton({ isDisabled, onClick }) {\n  // https://github.com/leesx/react-intl-demo2018/blob/0cd88df/docs/react-intl-corner-cases.md\n  const messages = defineMessages({\n    text: {\n      id: 'flipbutton.text',\n      defaultMessage: 'Flip Head',\n    },\n  });\n  const intl = useIntl();\n  return (\n    <Button text={intl.formatMessage(messages.text)} isDisabled={isDisabled} onClick={onClick} />);\n}\nFlipButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n};\nFlipButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default FlipButton;\n","const etherollAbi = [{\n  constant: false, inputs: [{ name: 'newCallbackGasPrice', type: 'uint256' }], name: 'ownerSetCallbackGasPrice', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWon', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitAsPercentOfHouse', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newHouseEdge', type: 'uint256' }], name: 'ownerSetHouseEdge', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'payoutsPaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newTreasury', type: 'address' }], name: 'ownerSetTreasury', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }, { name: 'proof', type: 'bytes' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [{ name: 'addressToCheck', type: 'address' }], name: 'playerGetPendingTxByAddress', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newContractBalanceInWei', type: 'uint256' }], name: 'ownerUpdateContractBalance', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newPayoutStatus', type: 'bool' }], name: 'ownerPausePayouts', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newOwner', type: 'address' }], name: 'ownerChangeOwner', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMaxProfitAsPercent', type: 'uint256' }], name: 'ownerSetMaxProfitAsPercentOfHouse', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'treasury', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWagered', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMinimumBet', type: 'uint256' }], name: 'ownerSetMinBet', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newStatus', type: 'bool' }], name: 'ownerPauseGame', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gasForOraclize', outputs: [{ name: '', type: 'uint32' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'sendTo', type: 'address' }, { name: 'amount', type: 'uint256' }], name: 'ownerTransferEther', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'contractBalance', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'owner', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minBet', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'playerWithdrawPendingTransactions', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfit', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalBets', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'randomQueryID', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gamePaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'originalPlayerBetId', type: 'bytes32' }, { name: 'sendTo', type: 'address' }, { name: 'originalPlayerProfit', type: 'uint256' }, { name: 'originalPlayerBetValue', type: 'uint256' }], name: 'ownerRefundPlayer', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newSafeGasToOraclize', type: 'uint32' }], name: 'ownerSetOraclizeSafeGas', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'ownerkill', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdge', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'rollUnder', type: 'uint256' }], name: 'playerRollDice', outputs: [], payable: true, stateMutability: 'payable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdgeDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxPendingPayouts', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  inputs: [], payable: false, stateMutability: 'nonpayable', type: 'constructor',\n}, { payable: true, stateMutability: 'payable', type: 'fallback' }, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RewardValue', type: 'uint256' }, { indexed: false, name: 'ProfitValue', type: 'uint256' }, { indexed: false, name: 'BetValue', type: 'uint256' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'RandomQueryID', type: 'uint256' }], name: 'LogBet', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'ResultSerialNumber', type: 'uint256' }, { indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'DiceResult', type: 'uint256' }, { indexed: false, name: 'Value', type: 'uint256' }, { indexed: false, name: 'Status', type: 'int256' }, { indexed: false, name: 'Proof', type: 'bytes' }], name: 'LogResult', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RefundValue', type: 'uint256' }], name: 'LogRefund', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'SentToAddress', type: 'address' }, { indexed: true, name: 'AmountTransferred', type: 'uint256' }], name: 'LogOwnerTransfer', type: 'event',\n}];\n\n\nexport default etherollAbi;\n","import etherollAbi from './etheroll-abi';\n\n// TODO require vs import\n// const SolidityEvent = require('web3/lib/web3/event.js');\n\nconst Networks = Object.freeze({ mainnet: 1, morden: 2, ropsten: 3 });\n\nconst contractAddresses = {\n  [Networks.mainnet]: '0xA52e014B3f5Cc48287c2D483A3E026C32cc76E6d',\n  [Networks.ropsten]: '0xe12c6dEb59f37011d2D9FdeC77A6f1A8f3B8B1e8',\n};\n\nconst etherscanUrls = {\n  [Networks.mainnet]: 'https://etherscan.io',\n  [Networks.ropsten]: 'https://ropsten.etherscan.io',\n};\n\n\nfunction getPayout(betSize, winningChances) {\n  return 100 / winningChances * betSize;\n}\n\nfunction cutHouseEdge(payout) {\n  const houseEdge = 1 / 100.0;\n  return payout * (1 - houseEdge);\n}\n\nfunction getProfit(betSize, winningChances) {\n  if (winningChances === 0) {\n    return 0;\n  }\n  const rawPayout = getPayout(betSize, winningChances);\n  const netPayout = cutHouseEdge(rawPayout);\n\n  return Math.max(netPayout - betSize, 0);\n}\n\n\n// Merges bet logs (LogBet) with bet results logs (LogResult).\nfunction mergeLogs(logBetEvents, logResultEvents) {\n  const findLogResultEventBylogBetEvent = logBetEvent => (\n    logResultEvents.find(logResultEvent => (\n      logResultEvent.returnValues.BetID === logBetEvent.returnValues.BetID\n    ))\n  );\n\n  return logBetEvents.map(logBetEvent => ({\n    logBetEvent,\n    logResultEvent: findLogResultEventBylogBetEvent(logBetEvent),\n  }));\n}\n\nclass EtherollContract {\n  constructor(web3, address) {\n    this.web3 = web3;\n    this.address = address;\n    this.abi = etherollAbi;\n    this.web3Contract = new web3.eth.Contract(etherollAbi, address);\n  }\n\n  // callback(error, result)\n  getTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, blockNumber) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const toBlock = blockNumber;\n        const fromBlock = toBlock - 100;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        this.web3Contract.getPastEvents('allEvents', options, callback);\n      }\n    });\n  }\n\n  // callback(error, result)\n  getMergedTransactionLogs(callback) {\n    this.getTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const logBetEvents = result.filter(evnt => evnt.event === 'LogBet');\n        const logResultEvents = result.filter(evnt => evnt.event === 'LogResult');\n        const mergedLogs = mergeLogs(logBetEvents, logResultEvents);\n        callback(error, mergedLogs);\n      }\n    });\n  }\n}\n\n\nexport {\n  EtherollContract, etherscanUrls, getProfit, mergeLogs, Networks, contractAddresses,\n};\n","import React from 'react';\nimport { number } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { getProfit } from '../utils/etheroll-contract';\n\n\nfunction CoinFlipRecap({ betSize }) {\n  const chances = 50;\n  const profit = getProfit(betSize, chances);\n  return (\n    <p>\n      <FormattedMessage\n        id=\"coinfliprecap.flip-head-with-a-wager\"\n        defaultMessage={'Flip Head with a wager of {betSize} for a profit of {profit}'}\n        values={{ betSize: betSize.toFixed(2), profit: profit.toFixed(2) }}\n      />\n    </p>\n  );\n}\nCoinFlipRecap.propTypes = {\n  betSize: number.isRequired,\n};\n\nexport default CoinFlipRecap;\n","import React from 'react';\nimport { string, number } from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Address({ address, network }) {\n  const url = `${etherscanUrls[network]}/address/${address}`;\n  return <a href={url} className=\"text-monospace\">{address}</a>;\n}\nAddress.propTypes = {\n  address: string.isRequired,\n  network: number.isRequired,\n};\n\nexport default Address;\n","import React from 'react';\nimport { string, number } from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Transaction({ hash, network }) {\n  const url = `${etherscanUrls[network]}/tx/${hash}`;\n  return <a href={url}>{hash}</a>;\n}\nTransaction.propTypes = {\n  hash: string.isRequired,\n  network: number.isRequired,\n};\n\nexport default Transaction;\n","import React from 'react';\nimport {\n  arrayOf, func, number, shape,\n} from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\n\nfunction MergedLog({ network, mergedLog }) {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = Number(logBetEvent.returnValues.PlayerNumber);\n  // const playerSide = 'Head';\n  let valueEth = '?';\n  let coinResult = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    const diceResult = Number(logResultEvent.returnValues.DiceResult);\n    coinResult = diceResult < 51 ? 'Head' : 'Tail';\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.returnValues.Value * (10 ** (-18))).toFixed(2);\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{coinResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.wallet\"\n            defaultMessage=\"Wallet:\"\n          />\n          &nbsp;\n          <Address address={logBetEvent.returnValues.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.transaction\"\n            defaultMessage=\"Transaction:\"\n          />\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMergedLog.propTypes = {\n  network: number.isRequired,\n  mergedLog: shape({\n    // TODO: seems completely ignored\n    todo: number,\n  }).isRequired,\n};\n\nconst TransactionsFilterButtons = ({ onClick }) => (\n  <nav className=\"nav\">\n    <button\n      type=\"button\"\n      className=\"btn btn-link active\"\n      onClick={() => onClick('#all-transactions')}\n    >\n      <FormattedMessage\n        id=\"transactions-filter-buttons.all-transactions\"\n        defaultMessage=\"All transactions\"\n      />\n    </button>\n    <button\n      type=\"button\"\n      className=\"btn btn-link\"\n      onClick={() => onClick('#my-transactions')}\n    >\n      <FormattedMessage\n        id=\"transactions-filter-buttons.my-transactions\"\n        defaultMessage=\"My transactions\"\n      />\n    </button>\n  </nav>\n);\nTransactionsFilterButtons.propTypes = {\n  onClick: func.isRequired,\n};\n\nfunction Transactions({ network, onClick, transactions }) {\n  const coinflipTransactions = transactions.filter(transaction => (\n    Number(transaction.logBetEvent.returnValues.PlayerNumber) === 51\n  ));\n  const reversedTransactions = coinflipTransactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n}\nTransactions.propTypes = {\n  network: number.isRequired,\n  onClick: func.isRequired,\n  transactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React, { Fragment } from 'react';\nimport {\n  arrayOf, func, number, shape, string,\n} from 'prop-types';\nimport onRollClick from './BaseGame';\nimport BetSize from './BetSize';\nimport FlipButton from './FlipButton';\nimport CoinFlipRecap from './CoinFlipRecap';\nimport CoinFlipTransactions from './CoinFlipTransactions';\n\n\nfunction CoinFlip(props) {\n  const {\n    accountAddress, betSize, contract,\n    filterTransactions, filteredTransactions, minBet, maxBet, network,\n    updateState,\n  } = props;\n  const rollUnder = 51;\n  const onRollClickProps = {\n    accountAddress, rollUnder, contract, betSize,\n  };\n  const rollDisabled = accountAddress === null;\n  return (\n    <Fragment>\n      <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={updateState('betSize')} />\n      <CoinFlipRecap betSize={betSize} />\n      <FlipButton isDisabled={rollDisabled} onClick={() => onRollClick(onRollClickProps)} />\n      <CoinFlipTransactions\n        network={network}\n        onClick={transactionsFilter => filterTransactions(transactionsFilter)}\n        transactions={filteredTransactions}\n      />\n    </Fragment>\n  );\n}\n\nCoinFlip.propTypes = {\n  accountAddress: string,\n  betSize: number.isRequired,\n  contract: shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  }),\n  filterTransactions: func.isRequired,\n  filteredTransactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n  minBet: number.isRequired,\n  maxBet: number.isRequired,\n  network: number.isRequired,\n  updateState: func.isRequired,\n};\nCoinFlip.defaultProps = {\n  accountAddress: null,\n  contract: null,\n};\n\nexport default CoinFlip;\n","import React from 'react';\nimport { number, string } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Address from './Address';\n\nfunction ContractInfo({\n  accountAddress, accountBalance, contractAddress, contractBalance, network,\n}) {\n  const contractAddr = <Address network={network} address={contractAddress} />;\n\n  const contractBalanceBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      <i className=\"far fa-file-code\" />\n      &nbsp;\n      <FormattedMessage\n        id=\"contractinfo.contract\"\n        defaultMessage={'Contract ({contractBalance} ETH)'}\n        values={{ contractBalance: contractBalance.toFixed(2) }}\n      />\n    </div>\n  );\n\n  const contractAddressBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      {contractAddr}\n    </div>\n  );\n  const accountAddr = (accountAddress !== null)\n    ? <Address network={network} address={accountAddress} />\n    : (\n      <span>\n        <FormattedMessage\n          id=\"contractinfo.not-connected\"\n          defaultMessage=\"Not connected, please login to MetaMask\"\n        />\n      </span>\n    );\n\n  const accountBalanceBlock = (\n    <div className=\"col-lg-12\">\n      <i className=\"far fa-user\" />\n      &nbsp;\n      <FormattedMessage\n        id=\"contractinfo.account\"\n        defaultMessage={'Account ({accountBalance} ETH)'}\n        values={{ accountBalance: accountBalance.toFixed(2) }}\n      />\n    </div>\n  );\n\n  const accountAddressBlock = (\n    <div className=\"col-12\">\n      {accountAddr}\n    </div>\n  );\n\n  return (\n    <div className=\"row\">\n      {accountBalanceBlock}\n      {accountAddressBlock}\n      {contractBalanceBlock}\n      {contractAddressBlock}\n    </div>\n  );\n}\nContractInfo.propTypes = {\n  accountAddress: string,\n  accountBalance: number.isRequired,\n  contractAddress: string.isRequired,\n  contractBalance: number.isRequired,\n  network: number.isRequired,\n};\nContractInfo.defaultProps = {\n  accountAddress: null,\n};\n\nexport default ContractInfo;\n","import React from 'react';\nimport { number, func } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport ValueSlider from './ValueSlider';\n\nfunction ChanceOfWinning({\n  chances, min, max, updateChances,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>\n        <FormattedMessage\n          id=\"chanceofwinning.chanceofwinning\"\n          defaultMessage=\"Chance of winning\"\n        />\n      </b>\n      <ValueSlider\n        value={chances}\n        min={min}\n        max={max}\n        updateValue={updateChances}\n        addonText=\"&nbsp;%&nbsp;\"\n      />\n    </div>\n  );\n}\nChanceOfWinning.propTypes = {\n  chances: number.isRequired,\n  min: number,\n  max: number,\n  updateChances: func.isRequired,\n};\nChanceOfWinning.defaultProps = {\n  min: 0,\n  max: 100,\n};\n\nexport default ChanceOfWinning;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { number } from 'prop-types';\nimport { getProfit } from '../utils/etheroll-contract';\n\n\nfunction RollUnderRecap({ betSize, value }) {\n  const chances = value - 1;\n  const profit = getProfit(betSize, chances);\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <h3>\n          <FormattedMessage\n            id=\"rollunderrecap.roll-under\"\n            defaultMessage=\"Roll under\"\n          />\n        </h3>\n      </div>\n      <div className=\"col-6\">\n        <h3 className=\"text-right\">{value}</h3>\n      </div>\n      <div className=\"col-6\">\n        <FormattedMessage\n          id=\"rollunderrecap.with-a-wager-of\"\n          defaultMessage=\"With a wager of\"\n        />\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right mb-0\">\n          {betSize.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n      <div className=\"col-6\">\n        <FormattedMessage\n          id=\"rollunderrecap.for-a-profit-of\"\n          defaultMessage=\"For a profit of\"\n        />\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right\">\n          {profit.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n    </div>\n  );\n}\nRollUnderRecap.propTypes = {\n  betSize: number.isRequired,\n  value: number.isRequired,\n};\n\nexport default RollUnderRecap;\n","import React from 'react';\nimport { bool, func, string } from 'prop-types';\n\nconst Button = ({ isDisabled, onClick, text }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-primary btn-lg col-md-3\"\n    disabled={isDisabled}\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\nButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n  text: string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nfunction RollButton({ isDisabled, onClick }) {\n  return <Button text=\"Roll\" isDisabled={isDisabled} onClick={onClick} />;\n}\nRollButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n};\nRollButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default RollButton;\n","import React from 'react';\nimport {\n  arrayOf, func, number, shape,\n} from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\n\nfunction MergedLog({ network, mergedLog }) {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = Number(logBetEvent.returnValues.PlayerNumber);\n  let valueEth = '?';\n  let diceResult = '?';\n  let sign = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    diceResult = Number(logResultEvent.returnValues.DiceResult);\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.returnValues.Value * (10 ** (-18))).toFixed(2);\n    sign = playerWon ? '<' : '>';\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{diceResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          {diceResult}\n          &nbsp;\n          {sign}\n          &nbsp;\n          {playerNumber}\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.wallet\"\n            defaultMessage=\"Wallet:\"\n          />\n          &nbsp;\n          <Address address={logBetEvent.returnValues.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.transaction\"\n            defaultMessage=\"Transaction:\"\n          />\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMergedLog.propTypes = {\n  network: number.isRequired,\n  mergedLog: shape({\n    // TODO: seems completely ignored\n    todo: number,\n  }).isRequired,\n};\n\nfunction TransactionsFilterButtons({ onClick }) {\n  return (\n    <nav className=\"nav\">\n      <button\n        type=\"button\"\n        className=\"btn btn-link active\"\n        onClick={() => onClick('#all-transactions')}\n      >\n        <FormattedMessage\n          id=\"transactions-filter-buttons.all-transactions\"\n          defaultMessage=\"All transactions\"\n        />\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={() => onClick('#my-transactions')}\n      >\n        <FormattedMessage\n          id=\"transactions-filter-buttons.my-transactions\"\n          defaultMessage=\"My transactions\"\n        />\n      </button>\n    </nav>\n  );\n}\nTransactionsFilterButtons.propTypes = {\n  onClick: func.isRequired,\n};\n\nfunction Transactions({ network, onClick, transactions }) {\n  const reversedTransactions = transactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n}\nTransactions.propTypes = {\n  network: number.isRequired,\n  onClick: func.isRequired,\n  transactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React from 'react';\nimport {\n  arrayOf, func, number, shape, string,\n} from 'prop-types';\nimport './css/RollUnder.css';\nimport onRollClick from './BaseGame';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport RollUnderRecap from './RollUnderRecap';\nimport RollButton from './RollButton';\nimport Transactions from './Transactions';\n\n\nfunction RollUnder(props) {\n  const {\n    accountAddress, betSize, chances, contract,\n    filterTransactions, filteredTransactions, minBet, maxBet, minChances, maxChances, network,\n    updateState,\n  } = props;\n  const rollUnder = chances + 1;\n  const onRollClickProps = {\n    accountAddress, rollUnder, contract, betSize,\n  };\n  const rollDisabled = accountAddress === null;\n  return (\n    <div>\n      <form className=\"RollUnder\">\n        <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={updateState('betSize')} />\n        <ChanceOfWinning chances={chances} min={minChances} max={maxChances} updateChances={updateState('chances')} />\n        <RollUnderRecap value={rollUnder} betSize={betSize} />\n        <RollButton isDisabled={rollDisabled} onClick={() => onRollClick(onRollClickProps)} />\n      </form>\n      <Transactions\n        network={network}\n        onClick={transactionsFilter => filterTransactions(transactionsFilter)}\n        transactions={filteredTransactions}\n      />\n    </div>\n  );\n}\nRollUnder.propTypes = {\n  accountAddress: string,\n  betSize: number.isRequired,\n  chances: number.isRequired,\n  contract: shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  }),\n  filterTransactions: func.isRequired,\n  filteredTransactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n  minBet: number.isRequired,\n  maxBet: number.isRequired,\n  minChances: number.isRequired,\n  maxChances: number.isRequired,\n  network: number.isRequired,\n  updateState: func.isRequired,\n};\nRollUnder.defaultProps = {\n  accountAddress: null,\n  contract: null,\n};\n\nexport default RollUnder;\n","import React from 'react';\n\nconst MetaMaskLink = () => (\n  <a\n    href=\"https://metamask.io/\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Meta Mask\n  </a>\n);\n\nexport default MetaMaskLink;\n","import Web3 from 'web3';\n\nconst getWeb3 = new Promise((resolve, reject) => {\n  window.addEventListener('load', async () => {\n    let web3;\n    if (window.ethereum) { // Modern dapp browsers...\n      web3 = new Web3(window.ethereum);\n      try {\n        // Request account access if needed\n        await window.ethereum.enable();\n      } catch (error) {\n        console.error(error);\n      }\n    } else if (window.web3) { // Legacy dapp browsers...\n      web3 = new Web3(window.web3.currentProvider);\n    } else { // Non-dapp browsers...\n      reject(new Error('Non-Ethereum browser detected. Is MetaMask running?'));\n    }\n    const results = { web3 };\n    resolve(results);\n  });\n});\n\n\nexport default getWeb3;\n","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { fromWei } from 'web3-utils';\nimport Alert from './Alert';\nimport CoinFlip from './CoinFlip';\nimport ContractInfo from './ContractInfo';\nimport RollUnder from './RollUnder';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport MetaMaskLink from './MetaMaskLink';\nimport getWeb3 from '../utils/get-web3';\nimport {\n  EtherollContract, Networks, contractAddresses,\n} from '../utils/etheroll-contract';\n\n\nconst showMessage = (classType, message, updateAlertDict) => {\n  const alertDict = { classType, message };\n  updateAlertDict(alertDict);\n};\n\nconst showFetchContractInfoWarning = (showWarningMessage, optionalMessage) => {\n  const defaultMessage = \"Can't fetch contract info.\";\n  const message = (typeof optionalMessage === 'undefined') ? defaultMessage : optionalMessage;\n  showWarningMessage(message);\n};\n\nconst minBetCallback = (showWarningMessage, updateValue) => (error, minBetWei) => {\n  error ? showFetchContractInfoWarning(showWarningMessage) : (\n    updateValue(Number(fromWei(minBetWei, 'ether')))\n  );\n};\n\nconst minNumberCallback = (showWarningMessage, updateValue) => (error, minNumber) => {\n  error ? showFetchContractInfoWarning(showWarningMessage) : updateValue(minNumber - 1);\n};\n\nconst maxNumberCallback = (showWarningMessage, updateValue) => (error, maxNumber) => {\n  error ? showFetchContractInfoWarning(showWarningMessage) : updateValue(maxNumber - 1);\n};\n\nconst getBalanceCallback = (showWarningMessage, updateValue) => (error, balance) => {\n  // error can be null with the balance also null in rare cases\n  (error || balance === null) ? showFetchContractInfoWarning(\"Can't fetch contract balance.\") : (\n    updateValue(Number(fromWei(balance, 'ether')))\n  );\n};\n\nconst getAccountBalanceCallback = (showWarningMessage, updateValue) => (error, balance) => {\n  // error can be null with the balance also null in rare cases\n  (error || balance === null) ? showWarningMessage(\"Can't fetch account balance.\") : (\n    updateValue(Number(fromWei(balance, 'ether')))\n  );\n};\n\nconst getAccountsCallback = (\n  web3, showWarningMessage, updateAccountAddress, updateAccountBalance,\n) => (error, accounts) => {\n  if (error) {\n    const message = \"Can't retrieve accounts.\";\n    showWarningMessage(message);\n  } else {\n    const accountAddress = accounts.length === 0 ? null : accounts[0];\n    if (accountAddress !== null) {\n      web3.eth.getBalance(\n        accountAddress,\n        getAccountBalanceCallback(\n          showWarningMessage,\n          updateAccountBalance,\n        ),\n      );\n    }\n    updateAccountAddress(accountAddress);\n  }\n};\n\nconst filterTransactions = (\n  accountAddress, transactionsFilter, allTransactions,\n  updateFilteredTransactions, updateTransactionsFilter,\n) => {\n  let filteredTransactions = allTransactions.slice();\n  if (transactionsFilter === '#my-transactions') {\n    filteredTransactions = allTransactions.filter(transaction => (\n      transaction.logBetEvent.returnValues.PlayerAddress.toLowerCase()\n      === accountAddress.toLowerCase()\n    ));\n  }\n  updateFilteredTransactions(filteredTransactions);\n  updateTransactionsFilter(transactionsFilter);\n};\n\nconst getTransactions = (\n  contract, accountAddress, transactionsFilter,\n  updateAllTransactions, updateFilteredTransactions, updateTransactionsFilter,\n) => {\n  contract.getMergedTransactionLogs((error, result) => {\n    if (error) {\n      console.log(error);\n    } else {\n      const allTransactions = result;\n      updateAllTransactions(allTransactions);\n      filterTransactions(\n        accountAddress, transactionsFilter, allTransactions,\n        updateFilteredTransactions, updateTransactionsFilter,\n      );\n    }\n  });\n};\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertDict: {},\n      betSize: 0.1,\n      chances: 50,\n      minBet: BetSize.defaultProps.min,\n      maxBet: BetSize.defaultProps.max,\n      minChances: ChanceOfWinning.defaultProps.min,\n      maxChances: ChanceOfWinning.defaultProps.max,\n      accountAddress: null,\n      accountBalance: 0,\n      network: Networks.mainnet,\n      contract: null,\n      contractAddress: contractAddresses[Networks.mainnet],\n      contractBalance: 0,\n      // most recent transaction is last in the array\n      allTransactions: [],\n      filteredTransactions: [],\n      transactionsFilter: '#all-transactions',\n    };\n    this.onWeb3 = this.onWeb3.bind(this);\n    this.updateState = this.updateState.bind(this);\n    this.initWeb3();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.getTransactionsIntervalId);\n  }\n\n  /**\n   * Retrieves web3 and contract info, then sets the following states:\n   * - accountAddress\n   * - accountBalance\n   * - contract\n   * - contractAddress\n   * - contractBalance\n   * - minBet\n   * - maxBet (TODO)\n   * - maxChances\n   * - network\n   */\n  onWeb3(web3) {\n    const getIdCallback = (network) => {\n      const contractAddress = contractAddresses[network];\n      const contract = new EtherollContract(web3, contractAddress);\n      const pullIntervalSeconds = 10 * 1000;\n      const { showWarningMessage, updateState } = this;\n      const { transactionsFilter, accountAddress } = this.state;\n      const getTransactionsAlias = () => getTransactions(\n        contract, accountAddress, transactionsFilter,\n        updateState('allTransactions'), updateState('filteredTransactions'), updateState('transactionsFilter'),\n      );\n      // clearInterval() is in the componentWillUnmount()\n      this.getTransactionsIntervalId = setInterval(\n        () => getTransactionsAlias(), pullIntervalSeconds,\n      );\n      getTransactionsAlias();\n      this.setState({\n        network,\n        contract,\n        contractAddress,\n      });\n      contract.web3Contract.methods.minBet().call(\n        minBetCallback(\n          showWarningMessage, updateState('minBet'),\n        ),\n      );\n      contract.web3Contract.methods.minNumber().call(\n        minNumberCallback(\n          showWarningMessage, updateState('minChances'),\n        ),\n      );\n      contract.web3Contract.methods.maxNumber().call(\n        maxNumberCallback(\n          showWarningMessage, updateState('maxChances'),\n        ),\n      );\n      web3.eth.getBalance(\n        contractAddress,\n        getBalanceCallback(\n          showWarningMessage, updateState('contractBalance'),\n        ),\n      );\n      web3.eth.getAccounts(\n        getAccountsCallback(\n          web3, showWarningMessage, updateState('accountAddress'), updateState('accountBalance'),\n        ),\n      );\n    };\n    web3.eth.net.getId().then(getIdCallback);\n  }\n\n  initWeb3() {\n    const getWeb3CallbackOk = ({ web3 }) => {\n      this.onWeb3(web3);\n    };\n    const getWeb3CallbackError = () => {\n      const classType = 'danger';\n      const message = (\n        <Fragment>\n          <FormattedMessage\n            id=\"container.no-account-connected\"\n            defaultMessage={'No account connected, connect with a Web3-compatible wallet like {metamaskLink}'}\n            values={{ metamaskLink: <MetaMaskLink /> }}\n          />\n        </Fragment>\n      );\n      showMessage(classType, message, this.updateState('alertDict'));\n    };\n    getWeb3.then(getWeb3CallbackOk, getWeb3CallbackError);\n  }\n\n  showWarningMessage(message) {\n    const classType = 'warning';\n    showMessage(classType, message, this.updateState('alertDict'));\n  }\n\n  updateState(key) {\n    return (value) => {\n      this.setState({ [key]: value });\n    };\n  }\n\n  render() {\n    const {\n      alertDict, accountAddress, accountBalance, allTransactions, betSize, chances, contract,\n      contractAddress, contractBalance, filteredTransactions, maxBet, minBet, maxChances,\n      minChances, network, transactionsFilter,\n    } = this.state;\n\n    const gameProps = {\n      accountAddress,\n      betSize,\n      chances,\n      contract,\n      filteredTransactions,\n      transactionsFilter,\n      maxBet,\n      minBet,\n      maxChances,\n      minChances,\n      network,\n      updateState: this.updateState,\n      filterTransactions: filter => filterTransactions(\n        accountAddress, filter, allTransactions,\n        this.updateState('filteredTransactions'), this.updateState('transactionsFilter'),\n      ),\n    };\n    const contractProps = {\n      accountAddress, accountBalance, contractAddress, contractBalance, network,\n    };\n\n    return (\n      <div className=\"container\">\n        <Alert classType={alertDict.classType} message={alertDict.message} />\n        <ContractInfo {...contractProps} />\n        <h2>\n          <FormattedMessage\n            id=\"container.place-your-bet\"\n            defaultMessage=\"Place your bet\"\n            description=\"Place your bet title\"\n          />\n        </h2>\n        <Route path=\"/\" exact render={() => <RollUnder {...gameProps} />} />\n        <Route path=\"/coin-flip\" render={() => <CoinFlip {...gameProps} />} />\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport { IntlContext } from './contexts/IntlContext';\nimport Headers from './components/Headers';\nimport Footers from './components/Footers';\nimport Container from './components/Container';\nimport { messages } from './utils/locales';\n\n\nconst App = () => {\n  const [locale] = React.useContext(IntlContext);\n  return (\n    <Router>\n      <IntlProvider locale={locale} messages={messages[locale]}>\n        <div className=\"App\">\n          <Headers />\n          <Container />\n          <Footers />\n        </div>\n      </IntlProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport setupGA from './utils/analytics';\nimport setupSentry from './utils/sentry';\nimport IntlContextProvider from './contexts/IntlContext';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nsetupGA();\nsetupSentry();\n\nReactDOM.render(\n  <IntlContextProvider>\n    <App />\n  </IntlContextProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}