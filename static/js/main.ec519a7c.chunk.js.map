{"version":3,"sources":["utils/analytics.js","utils/sentry.js","components/Headers.jsx","components/Footers.jsx","components/Alert.jsx","components/MetaMaskLink.jsx","utils/get-web3.js","utils/etheroll-abi.js","utils/etheroll-contract.js","components/BaseGame.jsx","components/ValueSlider.jsx","components/BetSize.jsx","components/ChanceOfWinning.jsx","components/Address.jsx","components/ContractInfo.jsx","components/FlipButton.jsx","components/CoinFlipRecap.jsx","components/Transaction.jsx","components/CoinFlipTransactions.jsx","components/CoinFlip.jsx","components/RollUnderRecap.jsx","components/RollButton.jsx","components/Transactions.jsx","components/RollUnder.jsx","components/Container.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["setupGA","ReactGA","initialize","process","pageview","window","location","pathname","search","setupSentry","Sentry","dsn","release","version","Logo","react_default","a","createElement","className","href","HamburgerBtn","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavSections","id","NavLink","to","exact","activeClassName","target","rel","Headers","Headers_Logo","Headers_HamburgerBtn","Headers_NavSections","Footers","Alert","_ref","classType","message","concat","role","defaultProps","MetaMaskLink","getWeb3","Promise","resolve","reject","addEventListener","Object","asyncToGenerator","regenerator_default","mark","_callee","web3","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","error","currentProvider","Error","stop","etherollAbi","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","Networks","freeze","mainnet","morden","ropsten","contractAddresses","_contractAddresses","defineProperty","etherscanUrls","_etherscanUrls","getProfit","betSize","winningChances","rawPayout","getPayout","netPayout","Math","max","EtherollContract","address","classCallCheck","this","abi","web3Contract","eth","Contract","callback","_this","getBlockNumber","blockNumber","log","options","fromBlock","toBlock","getPastEvents","getTransactionLogs","result","mergedLogs","logBetEvents","logResultEvents","findLogResultEventBylogBetEvent","logBetEvent","find","logResultEvent","returnValues","BetID","map","mergeLogs","filter","evnt","event","BaseGame","props","possibleConstructorReturn","getPrototypeOf","call","state","_this$state","accountAddress","chances","contract","rollUnder","value","utils","toWei","toString","methods","playerRollDice","send","from","then","JSON","stringify","setState","_this2","getMergedTransactionLogs","allTransactions","transactionsFilter","filterTransactions","_this3","_this$props","showMessage","showWarningMessage","results","net","getId","network","contractAddress","getTransactionsIntervalId","setInterval","getTransactions","minBet","minBetWei","showFetchContractInfoWarning","Number","fromWei","minNumber","minChances","maxNumber","maxChances","getBalance","balance","contractBalance","getAccounts","accounts","length","err","accountBalance","react","components_MetaMaskLink","optionalMessage","_this$state2","filteredTransactions","slice","transaction","PlayerAddress","toLowerCase","key","_this4","React","Component","ValueSlider","updateValue","step","min","addonText","toFixedDigits","addon","formattedValue","toFixed","onChange","e","Slider_default","BetSize","updateBetSize","components_ValueSlider","ChanceOfWinning","updateChances","Address","url","ContractInfo","contractAddr","components_Address","contractBalanceBlock","contractAddressBlock","accountAddr","accountBalanceBlock","accountAddressBlock","Button","isDisabled","onClick","text","disabled","FlipButton","_ref2","FlipButton_Button","CoinFlipRecap","profit","Transaction","hash","MergedLog","mergedLog","playerNumber","PlayerNumber","valueEth","coinResult","alertClass","diceResult","DiceResult","playerWon","Value","pow","components_Transaction","transactionHash","TransactionsFilterButtons","Transactions","_ref3","transactionsElems","transactions","reverse","CoinFlipTransactions_TransactionsFilterButtons","CoinFlip","maxBet","dict","clearInterval","contractProps","rollDisabled","components_ContractInfo","components_BetSize","updateState","components_CoinFlipRecap","components_FlipButton","onRollClick","CoinFlipTransactions","propTypes","objectSpread","RollUnderRecap","RollButton","RollButton_Button","sign","Transactions_MergedLog","Transactions_TransactionsFilterButtons","RollUnder","components_ChanceOfWinning","components_RollUnderRecap","components_RollButton","components_Transactions","Container","alertDict","commonProps","components_Alert","Route","path","render","components_RollUnder","components_CoinFlip","App","HashRouter","components_Headers","components_Container","components_Footers","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec519a7c.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\n\nfunction fireTracking() {\n  // ReactGA.pageview(window.location.hash);\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nfunction setupGA() {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  ReactGA.initialize(process.env.REACT_APP_ANALYTICS_ID);\n  fireTracking();\n}\n\nexport default setupGA;\n","import * as Sentry from '@sentry/browser';\nimport { version } from '../../package.json';\n\nfunction setupSentry() {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    release: version,\n  });\n}\n\nexport default setupSentry;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Logo = () => (\n  <a className=\"navbar-brand\" href=\"/\">\n    <i className=\"fas fa-dice-d20\" />\n    {' Etheroll'}\n  </a>\n);\n\nconst HamburgerBtn = () => (\n  <button\n    className=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarCollapse\"\n    aria-controls=\"navbarCollapse\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span className=\"navbar-toggler-icon\" />\n  </button>\n);\n\nconst NavSections = () => (\n  <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/\" exact activeClassName=\"active\">\n          <i className=\"fas fa-home\" />\n          {' Home'}\n          <span className=\"sr-only\">(current)</span>\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/coin-flip\" activeClassName=\"active\">\n          <i className=\"fas fa-coins\" />\n          {' Flip a coin'}\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          className=\"nav-link\"\n          href=\"https://github.com/AndreMiras/etheroll\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fab fa-github-alt\" />\n          {' About'}\n        </a>\n      </li>\n    </ul>\n  </div>\n);\n\nconst Headers = () => (\n  <header>\n    <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <Logo />\n      <HamburgerBtn />\n      <NavSections />\n    </nav>\n  </header>\n);\n\nexport default Headers;\n","import React from 'react';\nimport './css/Footers.css';\nimport { version } from '../../package.json';\n\nfunction Footers() {\n  return (\n    <footer className=\"Footers d-none d-md-block\">\n      <div className=\"container\">\n        <span className=\"text-muted\">\n          Copyright (c) 2018 Andre Miras - Etheroll v\n          {version}\n        </span>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footers;\n","import React from 'react';\nimport { string, node, oneOfType } from 'prop-types';\n\nfunction Alert({ classType, message }) {\n  return message\n    ? (\n      <div className={`alert alert-${classType}`} role=\"alert\">\n        {message}\n      </div>\n    )\n    : null;\n}\nAlert.propTypes = {\n  classType: string,\n  message: oneOfType([string, node]),\n};\nAlert.defaultProps = {\n  classType: 'primary',\n  message: null,\n};\n\nexport default Alert;\n","import React from 'react';\n\nconst MetaMaskLink = () => (\n  <a\n    href=\"https://metamask.io/\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Meta Mask\n  </a>\n);\n\nexport default MetaMaskLink;\n","import Web3 from 'web3';\n\nconst getWeb3 = new Promise((resolve, reject) => {\n  window.addEventListener('load', async () => {\n    let web3;\n    if (window.ethereum) { // Modern dapp browsers...\n      web3 = new Web3(window.ethereum);\n      try {\n        // Request account access if needed\n        await window.ethereum.enable();\n      } catch (error) {\n        console.error(error);\n      }\n    } else if (window.web3) { // Legacy dapp browsers...\n      web3 = new Web3(window.web3.currentProvider);\n    } else { // Non-dapp browsers...\n      reject(new Error('Non-Ethereum browser detected. Is MetaMask running?'));\n    }\n    const results = { web3 };\n    resolve(results);\n  });\n});\n\n\nexport default getWeb3;\n","const etherollAbi = [{\n  constant: false, inputs: [{ name: 'newCallbackGasPrice', type: 'uint256' }], name: 'ownerSetCallbackGasPrice', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWon', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitAsPercentOfHouse', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newHouseEdge', type: 'uint256' }], name: 'ownerSetHouseEdge', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'payoutsPaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newTreasury', type: 'address' }], name: 'ownerSetTreasury', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'myid', type: 'bytes32' }, { name: 'result', type: 'string' }, { name: 'proof', type: 'bytes' }], name: '__callback', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [{ name: 'addressToCheck', type: 'address' }], name: 'playerGetPendingTxByAddress', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newContractBalanceInWei', type: 'uint256' }], name: 'ownerUpdateContractBalance', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfitDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newPayoutStatus', type: 'bool' }], name: 'ownerPausePayouts', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newOwner', type: 'address' }], name: 'ownerChangeOwner', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minNumber', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMaxProfitAsPercent', type: 'uint256' }], name: 'ownerSetMaxProfitAsPercentOfHouse', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'treasury', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalWeiWagered', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newMinimumBet', type: 'uint256' }], name: 'ownerSetMinBet', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newStatus', type: 'bool' }], name: 'ownerPauseGame', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gasForOraclize', outputs: [{ name: '', type: 'uint32' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'sendTo', type: 'address' }, { name: 'amount', type: 'uint256' }], name: 'ownerTransferEther', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'contractBalance', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'owner', outputs: [{ name: '', type: 'address' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'minBet', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'playerWithdrawPendingTransactions', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxProfit', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'totalBets', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'randomQueryID', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'gamePaused', outputs: [{ name: '', type: 'bool' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'originalPlayerBetId', type: 'bytes32' }, { name: 'sendTo', type: 'address' }, { name: 'originalPlayerProfit', type: 'uint256' }, { name: 'originalPlayerBetValue', type: 'uint256' }], name: 'ownerRefundPlayer', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'newSafeGasToOraclize', type: 'uint32' }], name: 'ownerSetOraclizeSafeGas', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: false, inputs: [], name: 'ownerkill', outputs: [], payable: false, stateMutability: 'nonpayable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdge', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: false, inputs: [{ name: 'rollUnder', type: 'uint256' }], name: 'playerRollDice', outputs: [], payable: true, stateMutability: 'payable', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'houseEdgeDivisor', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  constant: true, inputs: [], name: 'maxPendingPayouts', outputs: [{ name: '', type: 'uint256' }], payable: false, stateMutability: 'view', type: 'function',\n}, {\n  inputs: [], payable: false, stateMutability: 'nonpayable', type: 'constructor',\n}, { payable: true, stateMutability: 'payable', type: 'fallback' }, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RewardValue', type: 'uint256' }, { indexed: false, name: 'ProfitValue', type: 'uint256' }, { indexed: false, name: 'BetValue', type: 'uint256' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'RandomQueryID', type: 'uint256' }], name: 'LogBet', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'ResultSerialNumber', type: 'uint256' }, { indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: false, name: 'PlayerNumber', type: 'uint256' }, { indexed: false, name: 'DiceResult', type: 'uint256' }, { indexed: false, name: 'Value', type: 'uint256' }, { indexed: false, name: 'Status', type: 'int256' }, { indexed: false, name: 'Proof', type: 'bytes' }], name: 'LogResult', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'BetID', type: 'bytes32' }, { indexed: true, name: 'PlayerAddress', type: 'address' }, { indexed: true, name: 'RefundValue', type: 'uint256' }], name: 'LogRefund', type: 'event',\n}, {\n  anonymous: false, inputs: [{ indexed: true, name: 'SentToAddress', type: 'address' }, { indexed: true, name: 'AmountTransferred', type: 'uint256' }], name: 'LogOwnerTransfer', type: 'event',\n}];\n\n\nexport default etherollAbi;\n","import etherollAbi from './etheroll-abi';\n\n// TODO require vs import\n// const SolidityEvent = require('web3/lib/web3/event.js');\n\nconst Networks = Object.freeze({ mainnet: 1, morden: 2, ropsten: 3 });\n\nconst contractAddresses = {\n  [Networks.mainnet]: '0xA52e014B3f5Cc48287c2D483A3E026C32cc76E6d',\n  [Networks.ropsten]: '0xe12c6dEb59f37011d2D9FdeC77A6f1A8f3B8B1e8',\n};\n\nconst etherscanUrls = {\n  [Networks.mainnet]: 'https://etherscan.io',\n  [Networks.ropsten]: 'https://ropsten.etherscan.io',\n};\n\n\nfunction getPayout(betSize, winningChances) {\n  return 100 / winningChances * betSize;\n}\n\nfunction cutHouseEdge(payout) {\n  const houseEdge = 1 / 100.0;\n  return payout * (1 - houseEdge);\n}\n\nfunction getProfit(betSize, winningChances) {\n  if (winningChances === 0) {\n    return 0;\n  }\n  const rawPayout = getPayout(betSize, winningChances);\n  const netPayout = cutHouseEdge(rawPayout);\n\n  return Math.max(netPayout - betSize, 0);\n}\n\n\n// Merges bet logs (LogBet) with bet results logs (LogResult).\nfunction mergeLogs(logBetEvents, logResultEvents) {\n  const findLogResultEventBylogBetEvent = logBetEvent => (\n    logResultEvents.find(logResultEvent => (\n      logResultEvent.returnValues.BetID === logBetEvent.returnValues.BetID\n    ))\n  );\n\n  return logBetEvents.map(logBetEvent => ({\n    logBetEvent,\n    logResultEvent: findLogResultEventBylogBetEvent(logBetEvent),\n  }));\n}\n\nclass EtherollContract {\n  constructor(web3, address) {\n    this.web3 = web3;\n    this.address = address;\n    this.abi = etherollAbi;\n    this.web3Contract = new web3.eth.Contract(etherollAbi, address);\n  }\n\n  // callback(error, result)\n  getTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, blockNumber) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const toBlock = blockNumber;\n        const fromBlock = toBlock - 100;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        this.web3Contract.getPastEvents('allEvents', options, callback);\n      }\n    });\n  }\n\n  // callback(error, result)\n  getMergedTransactionLogs(callback) {\n    this.getTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const logBetEvents = result.filter(evnt => evnt.event === 'LogBet');\n        const logResultEvents = result.filter(evnt => evnt.event === 'LogResult');\n        const mergedLogs = mergeLogs(logBetEvents, logResultEvents);\n        callback(error, mergedLogs);\n      }\n    });\n  }\n}\n\n\nexport {\n  EtherollContract, etherscanUrls, getProfit, mergeLogs, Networks, contractAddresses,\n};\n","import React, { Fragment } from 'react';\nimport { func } from 'prop-types';\n\nimport MetaMaskLink from './MetaMaskLink';\nimport getWeb3 from '../utils/get-web3';\nimport { EtherollContract, contractAddresses } from '../utils/etheroll-contract';\n\n\nclass BaseGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  onRollClick() {\n    const {\n      accountAddress, chances, contract, betSize, web3,\n    } = this.state;\n    const rollUnder = chances + 1;\n    const value = web3.utils.toWei(betSize.toString(), 'ether');\n    contract.web3Contract.methods.playerRollDice(rollUnder).send({\n      from: accountAddress,\n      value,\n    }).then((error, result) => {\n      console.log(JSON.stringify(result));\n      error && console.error(error);\n    });\n  }\n\n  getTransactions(contract, setState) {\n    contract.getMergedTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const allTransactions = result;\n        // TODO: should be a prop via composition rather than inheritance\n        const { transactionsFilter } = this.state;\n        setState({ allTransactions });\n        this.filterTransactions(transactionsFilter, setState);\n      }\n    });\n  }\n\n  /**\n   * Retrieves web3 and contract info, then sets the following states:\n   * - accountAddress\n   * - accountBalance\n   * - contract\n   * - contractAddress\n   * - contractBalance\n   * - minBet\n   * - maxBet\n   * - maxChances\n   * - network\n   * - web3\n   */\n  getWeb3(setState) {\n    const { showMessage, showWarningMessage } = this.props;\n    getWeb3.then((results) => {\n      results.web3.eth.net.getId().then((network) => {\n        const { web3 } = results;\n        const contractAddress = contractAddresses[network];\n        const contract = new EtherollContract(web3, contractAddress);\n        const pullIntervalSeconds = 10 * 1000;\n        // clearInterval() is in the componentWillUnmount()\n        this.getTransactionsIntervalId = setInterval((\n        ) => this.getTransactions(contract, setState), pullIntervalSeconds);\n        this.getTransactions(contract, setState);\n        setState({\n          web3,\n          network,\n          contract,\n          contractAddress,\n        });\n        contract.web3Contract.methods.minBet().call((error, minBetWei) => {\n          if (error) {\n            this.showFetchContractInfoWarning();\n          } else {\n            const minBet = Number(web3.utils.fromWei(minBetWei, 'ether'));\n            setState({ minBet });\n          }\n        });\n        contract.web3Contract.methods.minNumber().call((error, minNumber) => {\n          if (error) {\n            this.showFetchContractInfoWarning();\n          }\n          const minChances = minNumber - 1;\n          setState({ minChances });\n        });\n        contract.web3Contract.methods.maxNumber().call((error, maxNumber) => {\n          if (error) {\n            this.showFetchContractInfoWarning();\n          }\n          const maxChances = maxNumber - 1;\n          setState({ maxChances });\n        });\n        web3.eth.getBalance(contractAddress, (error, balance) => {\n          // error can be null with the balance also null in rare cases\n          if (error || balance === null) {\n            const message = \"Can't fetch contract balance.\";\n            this.showFetchContractInfoWarning(message);\n          } else {\n            const contractBalance = Number(web3.utils.fromWei(balance, 'ether'));\n            setState({ contractBalance });\n          }\n        });\n        web3.eth.getAccounts((error, accounts) => {\n          if (error) {\n            const message = \"Can't retrieve accounts.\";\n            showWarningMessage(message);\n          } else {\n            const accountAddress = accounts.length === 0 ? null : accounts[0];\n            if (accountAddress !== null) {\n              web3.eth.getBalance(accountAddress, (err, balance) => {\n                // error can be null with the balance also null in rare cases\n                if (err || balance === null) {\n                  const message = \"Can't fetch account balance.\";\n                  showWarningMessage(message);\n                } else {\n                  const accountBalance = Number(web3.utils.fromWei(balance, 'ether'));\n                  setState({ accountBalance });\n                }\n              });\n            }\n            setState({ accountAddress });\n          }\n        });\n      });\n    }, () => {\n      const classType = 'danger';\n      const message = (\n        <Fragment>\n          {'No account connected, connect with a Web3-compatible wallet like '}\n          <MetaMaskLink />\n        </Fragment>\n      );\n      showMessage(classType, message);\n    });\n  }\n\n  showFetchContractInfoWarning(optionalMessage) {\n    const { showWarningMessage } = this.props;\n    const defaultMessage = \"Can't fetch contract info.\";\n    const message = (typeof optionalMessage === 'undefined') ? defaultMessage : optionalMessage;\n    showWarningMessage(message);\n  }\n\n  filterTransactions(transactionsFilter, setState) {\n    // TODO: should be a prop via composition rather than inheritance\n    const { accountAddress, allTransactions } = this.state;\n    let filteredTransactions = allTransactions.slice();\n    if (transactionsFilter === '#my-transactions') {\n      filteredTransactions = allTransactions.filter(transaction => (\n        transaction.logBetEvent.returnValues.PlayerAddress.toLowerCase()\n        === accountAddress.toLowerCase()\n      ));\n    }\n    setState({ filteredTransactions, transactionsFilter });\n  }\n\n  updateState(key) {\n    return (value) => {\n      this.setState({ [key]: value });\n    };\n  }\n}\nBaseGame.propTypes = {\n  showMessage: func.isRequired,\n  showWarningMessage: func.isRequired,\n};\n\nexport default BaseGame;\n","import React from 'react';\nimport Slider from 'rc-slider/lib/Slider';\nimport { func, number, string } from 'prop-types';\nimport 'rc-slider/assets/index.css';\n\n\nfunction ValueSlider({\n  value, updateValue, step, min, max, addonText, toFixedDigits,\n}) {\n  let addon = null;\n  if (addonText !== null) {\n    addon = (\n      <div className=\"input-group-append\">\n        <span className=\"input-group-text text-monospace\">{addonText}</span>\n      </div>\n    );\n  }\n  const formattedValue = toFixedDigits === null ? value : value.toFixed(toFixedDigits);\n  return (\n    <div className=\"row\">\n      <div className=\"input-group col-sm-3 col-lg-2\">\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          onChange={e => updateValue(Number(e.target.value))}\n          value={formattedValue}\n        />\n        {addon}\n      </div>\n      <div className=\"col\">\n        <Slider onChange={updateValue} value={value} step={step} min={min} max={max} />\n      </div>\n    </div>\n  );\n}\nValueSlider.propTypes = {\n  value: number.isRequired,\n  updateValue: func.isRequired,\n  step: number,\n  min: number,\n  max: number,\n  addonText: string,\n  toFixedDigits: number,\n};\nValueSlider.defaultProps = {\n  step: 1,\n  min: 0,\n  max: 100,\n  addonText: null,\n  toFixedDigits: null,\n};\n\nexport default ValueSlider;\n","import React from 'react';\nimport { number, func } from 'prop-types';\nimport ValueSlider from './ValueSlider';\n\nfunction BetSize({\n  betSize, min, max, updateBetSize,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>Bet size</b>\n      <ValueSlider value={betSize} updateValue={updateBetSize} step={0.05} min={min} max={max} addonText=\"ETH\" toFixedDigits={2} />\n    </div>\n  );\n}\nBetSize.propTypes = {\n  betSize: number.isRequired,\n  min: number,\n  max: number,\n  updateBetSize: func.isRequired,\n};\nBetSize.defaultProps = {\n  min: 0,\n  max: 10,\n};\n\nexport default BetSize;\n","import React from 'react';\nimport { number, func } from 'prop-types';\nimport ValueSlider from './ValueSlider';\n\nfunction ChanceOfWinning({\n  chances, min, max, updateChances,\n}) {\n  return (\n    <div className=\"form-group\">\n      <b>Chance of winning</b>\n      <ValueSlider\n        value={chances}\n        min={min}\n        max={max}\n        updateValue={updateChances}\n        addonText=\"&nbsp;%&nbsp;\"\n      />\n    </div>\n  );\n}\nChanceOfWinning.propTypes = {\n  chances: number.isRequired,\n  min: number,\n  max: number,\n  updateChances: func.isRequired,\n};\nChanceOfWinning.defaultProps = {\n  min: 0,\n  max: 100,\n};\n\nexport default ChanceOfWinning;\n","import React from 'react';\nimport { string, number } from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Address({ address, network }) {\n  const url = `${etherscanUrls[network]}/address/${address}`;\n  return <a href={url} className=\"text-monospace\">{address}</a>;\n}\nAddress.propTypes = {\n  address: string.isRequired,\n  network: number.isRequired,\n};\n\nexport default Address;\n","import React from 'react';\nimport { number, string } from 'prop-types';\nimport Address from './Address';\n\nfunction ContractInfo({\n  accountAddress, accountBalance, contractAddress, contractBalance, network,\n}) {\n  const contractAddr = <Address network={network} address={contractAddress} />;\n\n  const contractBalanceBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      <i className=\"far fa-file-code\" />\n      &nbsp;Contract&nbsp;(\n      {contractBalance.toFixed(2)}\n      &nbsp;ETH)\n    </div>\n  );\n\n  const contractAddressBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      {contractAddr}\n    </div>\n  );\n  const accountAddr = (accountAddress !== null)\n    ? <Address network={network} address={accountAddress} />\n    : <span>Not connected, please login to MetaMask</span>;\n\n  const accountBalanceBlock = (\n    <div className=\"col-lg-12\">\n      <i className=\"far fa-user\" />\n      &nbsp;Account&nbsp;(\n      {accountBalance.toFixed(2)}\n      &nbsp;ETH)\n    </div>\n  );\n\n  const accountAddressBlock = (\n    <div className=\"col-12\">\n      {accountAddr}\n    </div>\n  );\n\n  return (\n    <div className=\"row\">\n      {accountBalanceBlock}\n      {accountAddressBlock}\n      {contractBalanceBlock}\n      {contractAddressBlock}\n    </div>\n  );\n}\nContractInfo.propTypes = {\n  accountAddress: string,\n  accountBalance: number.isRequired,\n  contractAddress: string.isRequired,\n  contractBalance: number.isRequired,\n  network: number.isRequired,\n};\nContractInfo.defaultProps = {\n  accountAddress: null,\n};\n\nexport default ContractInfo;\n","import React from 'react';\nimport { bool, func, string } from 'prop-types';\n\nconst Button = ({ isDisabled, onClick, text }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-primary btn-lg col-md-3\"\n    disabled={isDisabled}\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\nButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n  text: string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nfunction FlipButton({ isDisabled, onClick }) {\n  return <Button text=\"Flip Head\" isDisabled={isDisabled} onClick={onClick} />;\n}\nFlipButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n};\nFlipButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default FlipButton;\n","import React from 'react';\nimport { number } from 'prop-types';\nimport { getProfit } from '../utils/etheroll-contract';\n\n\nfunction CoinFlipRecap({ betSize }) {\n  const chances = 50;\n  const profit = getProfit(betSize, chances);\n  return (\n    <p>\n      {'Flip Head with a wager of '}\n      {betSize}\n      {' for a profit of '}\n      {profit.toFixed(2)}\n    </p>\n  );\n}\nCoinFlipRecap.propTypes = {\n  betSize: number.isRequired,\n};\n\nexport default CoinFlipRecap;\n","import React from 'react';\nimport { string, number } from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nfunction Transaction({ hash, network }) {\n  const url = `${etherscanUrls[network]}/tx/${hash}`;\n  return <a href={url}>{hash}</a>;\n}\nTransaction.propTypes = {\n  hash: string.isRequired,\n  network: number.isRequired,\n};\n\nexport default Transaction;\n","import React from 'react';\nimport {\n  arrayOf, func, number, shape,\n} from 'prop-types';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\n\nfunction MergedLog({ network, mergedLog }) {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = Number(logBetEvent.returnValues.PlayerNumber);\n  // const playerSide = 'Head';\n  let valueEth = '?';\n  let coinResult = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    const diceResult = Number(logResultEvent.returnValues.DiceResult);\n    coinResult = diceResult < 51 ? 'Head' : 'Tail';\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.returnValues.Value * (10 ** (-18))).toFixed(2);\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{coinResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          Wallet:\n          &nbsp;\n          <Address address={logBetEvent.returnValues.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          Transaction:\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMergedLog.propTypes = {\n  network: number.isRequired,\n  mergedLog: shape({\n    // TODO: seems completely ignored\n    todo: number,\n  }).isRequired,\n};\n\nconst TransactionsFilterButtons = ({ onClick }) => (\n  <nav className=\"nav\">\n    <button\n      type=\"button\"\n      className=\"btn btn-link active\"\n      onClick={() => onClick('#all-transactions')}\n    >\n      All transactions\n    </button>\n    <button\n      type=\"button\"\n      className=\"btn btn-link\"\n      onClick={() => onClick('#my-transactions')}\n    >\n      My transactions\n    </button>\n  </nav>\n);\nTransactionsFilterButtons.propTypes = {\n  onClick: func.isRequired,\n};\n\nfunction Transactions({ network, onClick, transactions }) {\n  const coinflipTransactions = transactions.filter(transaction => (\n    Number(transaction.logBetEvent.returnValues.PlayerNumber) === 51\n  ));\n  const reversedTransactions = coinflipTransactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n}\nTransactions.propTypes = {\n  network: number.isRequired,\n  onClick: func.isRequired,\n  transactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React, { Fragment } from 'react';\nimport BaseGame from './BaseGame';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport ContractInfo from './ContractInfo';\nimport FlipButton from './FlipButton';\nimport CoinFlipRecap from './CoinFlipRecap';\nimport CoinFlipTransactions from './CoinFlipTransactions';\nimport {\n  Networks, contractAddresses,\n} from '../utils/etheroll-contract';\n\n\nclass CoinFlip extends BaseGame {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountBalance: 0,\n      betSize: 0.1,\n      chances: 50,\n      contractAddress: contractAddresses[Networks.mainnet],\n      contractBalance: 0,\n      minBet: BetSize.defaultProps.min,\n      maxBet: BetSize.defaultProps.max,\n      // TODO: merge with RollUnder\n      network: Networks.mainnet,\n      minChances: ChanceOfWinning.defaultProps.min,\n      maxChances: ChanceOfWinning.defaultProps.max,\n      filteredTransactions: [],\n      transactionsFilter: '#all-transactions',\n    };\n  }\n\n  componentDidMount() {\n    const setState = dict => this.setState(dict);\n    this.getWeb3(setState);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.getTransactionsIntervalId);\n  }\n\n  render() {\n    const {\n      betSize, accountAddress, accountBalance, contractAddress, contractBalance,\n      filteredTransactions, minBet, maxBet, network,\n    } = this.state;\n    const contractProps = {\n      accountAddress, accountBalance, contractAddress, contractBalance, network,\n    };\n    const setState = dict => this.setState(dict);\n    const rollDisabled = accountAddress === null;\n    return (\n      <Fragment>\n        <ContractInfo {...contractProps} />\n        <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={this.updateState('betSize')} />\n        <CoinFlipRecap betSize={betSize} />\n        <FlipButton isDisabled={rollDisabled} onClick={() => this.onRollClick()} />\n        <CoinFlipTransactions\n          network={network}\n          onClick={transactionsFilter => this.filterTransactions(transactionsFilter, setState)}\n          transactions={filteredTransactions}\n        />\n      </Fragment>\n    );\n  }\n}\nCoinFlip.propTypes = { ...BaseGame.propTypes };\n\nexport default CoinFlip;\n","import React from 'react';\nimport { number } from 'prop-types';\nimport { getProfit } from '../utils/etheroll-contract';\n\n\nfunction RollUnderRecap({ betSize, value }) {\n  const chances = value - 1;\n  const profit = getProfit(betSize, chances);\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <h3>Roll under</h3>\n      </div>\n      <div className=\"col-6\">\n        <h3 className=\"text-right\">{value}</h3>\n      </div>\n      <div className=\"col-6\">\n        With a wager of\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right mb-0\">\n          {betSize.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n      <div className=\"col-6\">\n        For a profit of\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right\">\n          {profit.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n    </div>\n  );\n}\nRollUnderRecap.propTypes = {\n  betSize: number.isRequired,\n  value: number.isRequired,\n};\n\nexport default RollUnderRecap;\n","import React from 'react';\nimport { bool, func, string } from 'prop-types';\n\nconst Button = ({ isDisabled, onClick, text }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-primary btn-lg col-md-3\"\n    disabled={isDisabled}\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\nButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n  text: string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nfunction RollButton({ isDisabled, onClick }) {\n  return <Button text=\"Roll\" isDisabled={isDisabled} onClick={onClick} />;\n}\nRollButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n};\nRollButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default RollButton;\n","import React from 'react';\nimport {\n  arrayOf, func, number, shape,\n} from 'prop-types';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\n\nfunction MergedLog({ network, mergedLog }) {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = Number(logBetEvent.returnValues.PlayerNumber);\n  let valueEth = '?';\n  let diceResult = '?';\n  let sign = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    diceResult = Number(logResultEvent.returnValues.DiceResult);\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.returnValues.Value * (10 ** (-18))).toFixed(2);\n    sign = playerWon ? '<' : '>';\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{diceResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          {diceResult}\n          &nbsp;\n          {sign}\n          &nbsp;\n          {playerNumber}\n        </div>\n        <div className=\"w-100\">\n          Wallet:\n          &nbsp;\n          <Address address={logBetEvent.returnValues.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          Transaction:\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMergedLog.propTypes = {\n  network: number.isRequired,\n  mergedLog: shape({\n    // TODO: seems completely ignored\n    todo: number,\n  }).isRequired,\n};\n\nfunction TransactionsFilterButtons({ onClick }) {\n  return (\n    <nav className=\"nav\">\n      <button\n        type=\"button\"\n        className=\"btn btn-link active\"\n        onClick={() => onClick('#all-transactions')}\n      >\n          All transactions\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={() => onClick('#my-transactions')}\n      >\n          My transactions\n      </button>\n    </nav>\n  );\n}\nTransactionsFilterButtons.propTypes = {\n  onClick: func.isRequired,\n};\n\nfunction Transactions({ network, onClick, transactions }) {\n  const reversedTransactions = transactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n}\nTransactions.propTypes = {\n  network: number.isRequired,\n  onClick: func.isRequired,\n  transactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React from 'react';\nimport './css/RollUnder.css';\nimport BaseGame from './BaseGame';\nimport ContractInfo from './ContractInfo';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport RollUnderRecap from './RollUnderRecap';\nimport RollButton from './RollButton';\nimport Transactions from './Transactions';\nimport {\n  Networks, contractAddresses,\n} from '../utils/etheroll-contract';\n\n\nclass RollUnder extends BaseGame {\n  constructor(props) {\n    super(props);\n    this.state = {\n      betSize: 0.1,\n      chances: 50,\n      minBet: BetSize.defaultProps.min,\n      maxBet: BetSize.defaultProps.max,\n      minChances: ChanceOfWinning.defaultProps.min,\n      maxChances: ChanceOfWinning.defaultProps.max,\n      accountAddress: null,\n      accountBalance: 0,\n      web3: null,\n      network: Networks.mainnet,\n      contract: null,\n      contractAddress: contractAddresses[Networks.mainnet],\n      contractBalance: 0,\n      // most recent transaction is last in the array\n      allTransactions: [],\n      filteredTransactions: [],\n      transactionsFilter: '#all-transactions',\n    };\n  }\n\n  componentDidMount() {\n    const setState = dict => this.setState(dict);\n    this.getWeb3(setState);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.getTransactionsIntervalId);\n  }\n\n  render() {\n    const {\n      accountAddress, accountBalance, betSize, chances, contractAddress,\n      contractBalance, filteredTransactions, minBet, maxBet, minChances, maxChances, network,\n    } = this.state;\n    const setState = dict => this.setState(dict);\n    const rollUnder = chances + 1;\n    const rollDisabled = accountAddress === null;\n    return (\n      <div>\n        <ContractInfo\n          accountAddress={accountAddress}\n          accountBalance={accountBalance}\n          contractAddress={contractAddress}\n          contractBalance={contractBalance}\n          network={network}\n        />\n        <form className=\"RollUnder\">\n          <h2>Place your bet</h2>\n          <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={this.updateState('betSize')} />\n          <ChanceOfWinning chances={chances} min={minChances} max={maxChances} updateChances={this.updateState('chances')} />\n          <RollUnderRecap value={rollUnder} betSize={betSize} />\n          <RollButton isDisabled={rollDisabled} onClick={() => this.onRollClick()} />\n        </form>\n        <Transactions\n          network={network}\n          onClick={transactionsFilter => this.filterTransactions(transactionsFilter, setState)}\n          transactions={filteredTransactions}\n        />\n      </div>\n    );\n  }\n}\nRollUnder.propTypes = { ...BaseGame.propTypes };\n\nexport default RollUnder;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Alert from './Alert';\nimport CoinFlip from './CoinFlip';\nimport RollUnder from './RollUnder';\n\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertDict: {},\n    };\n  }\n\n  showMessage(classType, message) {\n    const alertDict = { classType, message };\n    this.setState({ alertDict });\n  }\n\n  showWarningMessage(message) {\n    const classType = 'warning';\n    this.showMessage(classType, message);\n  }\n\n  render() {\n    const { alertDict } = this.state;\n\n    const commonProps = {\n      showMessage: (classType, message) => this.showMessage(classType, message),\n      showWarningMessage: message => this.showWarningMessage(message),\n    };\n\n    return (\n      <div className=\"container\">\n        <Alert classType={alertDict.classType} message={alertDict.message} />\n        <Route path=\"/\" exact render={() => <RollUnder {...commonProps} />} />\n        <Route path=\"/coin-flip\" render={() => <CoinFlip {...commonProps} />} />\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport Headers from './components/Headers';\nimport Footers from './components/Footers';\nimport Container from './components/Container';\n\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      <Headers />\n      <Container />\n      <Footers />\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport setupGA from './utils/analytics';\nimport setupSentry from './utils/sentry';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nsetupGA();\nsetupSentry();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}